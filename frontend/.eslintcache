[{"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\index.js":"1","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\App.js":"2","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reportWebVitals.js":"3","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\index.js":"4","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\middleware\\api.js":"5","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\ajaxStatusReducer.js":"6","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\loginReducer.js":"7","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\MainPage\\MainPage.jsx":"8","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\actions\\ajaxStatusAction.js":"9","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\languageHelperReducer.js":"10","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\forgotPasswordReducer.js":"11","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\ActionTypes\\actionTypes.js":"12","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\serverEndpoint.js":"13","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\reducer.js":"14","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\TopBar\\TopBar.jsx":"15","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\routes\\routes.js":"16","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\types.js":"17","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\containers\\LoginContainer.js":"18","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\containers\\LogOutContainer.jsx":"19","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Language\\language.service.js":"20","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\theme\\service\\activeTheme.service.js":"21","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\actions\\loginActions.js":"22","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\TopBar\\TopBarView.jsx":"23","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\UserModule\\CreateUser.js":"24","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\UserModule\\EditUser.js":"25","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\UserModule\\UserDetails.js":"26","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\User\\User.jsx":"27","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\DailyLogging.jsx":"28","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\StatusExport\\StatusExport.jsx":"29","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\Team\\Team.jsx":"30","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\SessionExport\\SessionExport.jsx":"31","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Login\\LoginPage.js":"32","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\container.js":"33","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Language\\DynamicLanguage.js":"34","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\actions\\diagnosticsActions.js":"35","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Login\\Logout.jsx":"36","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Language\\Dictionery.js":"37","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\TopBar\\navBarItems.js":"38","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\actions.js":"39","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\UserModule\\UpdatePassword.js":"40","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\permissionCheck.js":"41","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\isJson.js":"42","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\util.js":"43","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\DailyLoggingVars.js":"44","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\style\\basic\\basicColors.js":"45","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\DailyLoggingMethods.js":"46","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\Times.js":"47","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\actions\\storeActions.js":"48","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\downloadCsv.js":"49","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\actionOptions.js":"50","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\dateFormatters.js":"51","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\FilterMethods\\filterMethods.js":"52","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\User\\UserList\\UserList.jsx":"53","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\Forms\\formsMiscItems.jsx":"54","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\settings.js":"55","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\FilterMethods\\FilterArea.jsx":"56","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\FilterMethods\\UserSelectArea.jsx":"57","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\FormInputs\\InputFields.jsx":"58","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\SessionsList\\SessionsList.jsx":"59","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\Team\\TeamMemberSelector.jsx":"60","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\Team\\CreateTeam.jsx":"61","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\Team\\EditTeam.jsx":"62","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\arrayToCsv.js":"63","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\style\\basic\\commonControls.js":"64","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\Forms\\style\\formsMiscItems.js":"65","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Login\\LoginView.js":"66","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\wigets\\forms\\style\\formFields.js":"67","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\ThisTable\\index.jsx":"68","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\ThisTable\\style\\index.js":"69","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\ThisTable\\PaginationComponent.jsx":"70","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\ThisTable\\style\\PaginationComponent.js":"71","D:\\Web Development\\PMS\\frontend\\src\\index.js":"72","D:\\Web Development\\PMS\\frontend\\src\\reportWebVitals.js":"73","D:\\Web Development\\PMS\\frontend\\src\\App.js":"74","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\index.js":"75","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\middleware\\api.js":"76","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\ajaxStatusReducer.js":"77","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\loginReducer.js":"78","D:\\Web Development\\PMS\\frontend\\src\\components\\MainPage\\MainPage.jsx":"79","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\languageHelperReducer.js":"80","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\forgotPasswordReducer.js":"81","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\actions\\ajaxStatusAction.js":"82","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\ActionTypes\\actionTypes.js":"83","D:\\Web Development\\PMS\\frontend\\src\\utils\\serverEndpoint.js":"84","D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\reducer.js":"85","D:\\Web Development\\PMS\\frontend\\src\\components\\TopBar\\TopBar.jsx":"86","D:\\Web Development\\PMS\\frontend\\src\\routes\\routes.js":"87","D:\\Web Development\\PMS\\frontend\\src\\containers\\LoginContainer.js":"88","D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\types.js":"89","D:\\Web Development\\PMS\\frontend\\src\\containers\\LogOutContainer.jsx":"90","D:\\Web Development\\PMS\\frontend\\src\\Language\\language.service.js":"91","D:\\Web Development\\PMS\\frontend\\src\\theme\\service\\activeTheme.service.js":"92","D:\\Web Development\\PMS\\frontend\\src\\components\\UserModule\\UserDetails.js":"93","D:\\Web Development\\PMS\\frontend\\src\\components\\UserModule\\EditUser.js":"94","D:\\Web Development\\PMS\\frontend\\src\\components\\UserModule\\CreateUser.js":"95","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\actions\\loginActions.js":"96","D:\\Web Development\\PMS\\frontend\\src\\components\\TopBar\\TopBarView.jsx":"97","D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\DailyLogging.jsx":"98","D:\\Web Development\\PMS\\frontend\\src\\components\\User\\User.jsx":"99","D:\\Web Development\\PMS\\frontend\\src\\Pages\\SessionExport\\SessionExport.jsx":"100","D:\\Web Development\\PMS\\frontend\\src\\Pages\\StatusExport\\StatusExport.jsx":"101","D:\\Web Development\\PMS\\frontend\\src\\Pages\\Team\\Team.jsx":"102","D:\\Web Development\\PMS\\frontend\\src\\components\\Login\\LoginPage.js":"103","D:\\Web Development\\PMS\\frontend\\src\\Language\\DynamicLanguage.js":"104","D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\container.js":"105","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\actions\\diagnosticsActions.js":"106","D:\\Web Development\\PMS\\frontend\\src\\components\\Login\\Logout.jsx":"107","D:\\Web Development\\PMS\\frontend\\src\\Language\\Dictionery.js":"108","D:\\Web Development\\PMS\\frontend\\src\\components\\Login\\LoginView.js":"109","D:\\Web Development\\PMS\\frontend\\src\\utils\\isJson.js":"110","D:\\Web Development\\PMS\\frontend\\src\\utils\\util.js":"111","D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\actions.js":"112","D:\\Web Development\\PMS\\frontend\\src\\components\\UserModule\\UpdatePassword.js":"113","D:\\Web Development\\PMS\\frontend\\src\\utils\\permissionCheck.js":"114","D:\\Web Development\\PMS\\frontend\\src\\components\\TopBar\\navBarItems.js":"115","D:\\Web Development\\PMS\\frontend\\src\\style\\basic\\basicColors.js":"116","D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\DailyLoggingVars.js":"117","D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\Times.js":"118","D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\DailyLoggingMethods.js":"119","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\actions\\storeActions.js":"120","D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\FilterMethods\\filterMethods.js":"121","D:\\Web Development\\PMS\\frontend\\src\\utils\\downloadCsv.js":"122","D:\\Web Development\\PMS\\frontend\\src\\utils\\dateFormatters.js":"123","D:\\Web Development\\PMS\\frontend\\src\\components\\User\\UserList\\UserList.jsx":"124","D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\actionOptions.js":"125","D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\Forms\\formsMiscItems.jsx":"126","D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\FilterMethods\\FilterArea.jsx":"127","D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\FilterMethods\\UserSelectArea.jsx":"128","D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\settings.js":"129","D:\\Web Development\\PMS\\frontend\\src\\Pages\\SessionExport\\SessionSummary.jsx":"130","D:\\Web Development\\PMS\\frontend\\src\\components\\FormInputs\\InputFields.jsx":"131","D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\SessionsList\\SessionsList.jsx":"132","D:\\Web Development\\PMS\\frontend\\src\\Pages\\Team\\EditTeam.jsx":"133","D:\\Web Development\\PMS\\frontend\\src\\Pages\\Team\\CreateTeam.jsx":"134","D:\\Web Development\\PMS\\frontend\\src\\Pages\\Team\\TeamMemberSelector.jsx":"135","D:\\Web Development\\PMS\\frontend\\src\\style\\basic\\commonControls.js":"136","D:\\Web Development\\PMS\\frontend\\src\\utils\\arrayToCsv.js":"137","D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\ThisTable\\index.jsx":"138","D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\Forms\\style\\formsMiscItems.js":"139","D:\\Web Development\\PMS\\frontend\\src\\wigets\\forms\\style\\formFields.js":"140","D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\ThisTable\\style\\index.js":"141","D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\ThisTable\\PaginationComponent.jsx":"142","D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\ThisTable\\style\\PaginationComponent.js":"143"},{"size":666,"mtime":1699796628836,"results":"144","hashOfConfig":"145"},{"size":1345,"mtime":1700778072740,"results":"146","hashOfConfig":"145"},{"size":375,"mtime":1699796628841,"results":"147","hashOfConfig":"145"},{"size":522,"mtime":1700774160612,"results":"148","hashOfConfig":"145"},{"size":2774,"mtime":1699796628840,"results":"149","hashOfConfig":"145"},{"size":566,"mtime":1699796628840,"results":"150","hashOfConfig":"145"},{"size":2571,"mtime":1699796628841,"results":"151","hashOfConfig":"145"},{"size":3106,"mtime":1700778079804,"results":"152","hashOfConfig":"145"},{"size":150,"mtime":1699796628838,"results":"153","hashOfConfig":"145"},{"size":453,"mtime":1699796628841,"results":"154","hashOfConfig":"145"},{"size":1701,"mtime":1699796628841,"results":"155","hashOfConfig":"145"},{"size":14160,"mtime":1699796628838,"results":"156","hashOfConfig":"145"},{"size":344,"mtime":1700766912120,"results":"157","hashOfConfig":"145"},{"size":5401,"mtime":1699796628837,"results":"158","hashOfConfig":"145"},{"size":11228,"mtime":1699796628831,"results":"159","hashOfConfig":"145"},{"size":923,"mtime":1700773713759,"results":"160","hashOfConfig":"145"},{"size":191,"mtime":1699796628837,"results":"161","hashOfConfig":"145"},{"size":783,"mtime":1699796628835,"results":"162","hashOfConfig":"145"},{"size":819,"mtime":1699796628834,"results":"163","hashOfConfig":"145"},{"size":552,"mtime":1699796628820,"results":"164","hashOfConfig":"145"},{"size":547,"mtime":1699796628844,"results":"165","hashOfConfig":"145"},{"size":1244,"mtime":1699796628840,"results":"166","hashOfConfig":"145"},{"size":2090,"mtime":1699796628831,"results":"167","hashOfConfig":"145"},{"size":4965,"mtime":1700855184375,"results":"168","hashOfConfig":"145"},{"size":8942,"mtime":1700855974395,"results":"169","hashOfConfig":"145"},{"size":4708,"mtime":1700855853978,"results":"170","hashOfConfig":"145"},{"size":1567,"mtime":1699796628832,"results":"171","hashOfConfig":"145"},{"size":18162,"mtime":1700861922253,"results":"172","hashOfConfig":"145"},{"size":7042,"mtime":1700859721037,"results":"173","hashOfConfig":"145"},{"size":8310,"mtime":1700852565502,"results":"174","hashOfConfig":"145"},{"size":7717,"mtime":1699796628821,"results":"175","hashOfConfig":"145"},{"size":5593,"mtime":1699796628830,"results":"176","hashOfConfig":"145"},{"size":5451,"mtime":1699796628837,"results":"177","hashOfConfig":"145"},{"size":174,"mtime":1699796628820,"results":"178","hashOfConfig":"145"},{"size":6775,"mtime":1699796628838,"results":"179","hashOfConfig":"145"},{"size":380,"mtime":1699796628830,"results":"180","hashOfConfig":"145"},{"size":102109,"mtime":1699796628820,"results":"181","hashOfConfig":"145"},{"size":1090,"mtime":1699796628831,"results":"182","hashOfConfig":"145"},{"size":5889,"mtime":1699796628836,"results":"183","hashOfConfig":"145"},{"size":784,"mtime":1699796628833,"results":"184","hashOfConfig":"145"},{"size":774,"mtime":1700866057960,"results":"185","hashOfConfig":"145"},{"size":299,"mtime":1699796628845,"results":"186","hashOfConfig":"145"},{"size":153,"mtime":1699796628846,"results":"187","hashOfConfig":"145"},{"size":1689,"mtime":1699796628827,"results":"188","hashOfConfig":"145"},{"size":1135,"mtime":1699796628842,"results":"189","hashOfConfig":"145"},{"size":4989,"mtime":1700865216462,"results":"190","hashOfConfig":"145"},{"size":1645,"mtime":1699796628828,"results":"191","hashOfConfig":"145"},{"size":145,"mtime":1699796628840,"results":"192","hashOfConfig":"145"},{"size":818,"mtime":1699796628844,"results":"193","hashOfConfig":"145"},{"size":113,"mtime":1699796628836,"results":"194","hashOfConfig":"145"},{"size":518,"mtime":1699796628844,"results":"195","hashOfConfig":"145"},{"size":615,"mtime":1699796628828,"results":"196","hashOfConfig":"145"},{"size":1347,"mtime":1699796628832,"results":"197","hashOfConfig":"145"},{"size":1973,"mtime":1699796628823,"results":"198","hashOfConfig":"145"},{"size":306,"mtime":1699796628837,"results":"199","hashOfConfig":"145"},{"size":3004,"mtime":1699796628827,"results":"200","hashOfConfig":"145"},{"size":921,"mtime":1699796628828,"results":"201","hashOfConfig":"145"},{"size":4378,"mtime":1700861035879,"results":"202","hashOfConfig":"145"},{"size":3764,"mtime":1699796628828,"results":"203","hashOfConfig":"145"},{"size":2076,"mtime":1699796628822,"results":"204","hashOfConfig":"145"},{"size":2093,"mtime":1700775458586,"results":"205","hashOfConfig":"145"},{"size":2080,"mtime":1699796628821,"results":"206","hashOfConfig":"145"},{"size":607,"mtime":1699796628844,"results":"207","hashOfConfig":"145"},{"size":2560,"mtime":1699796628842,"results":"208","hashOfConfig":"145"},{"size":1226,"mtime":1699796628824,"results":"209","hashOfConfig":"145"},{"size":6846,"mtime":1700856986092,"results":"210","hashOfConfig":"145"},{"size":4113,"mtime":1699796628847,"results":"211","hashOfConfig":"145"},{"size":6298,"mtime":1699796628825,"results":"212","hashOfConfig":"145"},{"size":3481,"mtime":1699796628826,"results":"213","hashOfConfig":"145"},{"size":6622,"mtime":1699796628824,"results":"214","hashOfConfig":"145"},{"size":2855,"mtime":1699796628825,"results":"215","hashOfConfig":"145"},{"size":666,"mtime":1699796628836,"results":"216","hashOfConfig":"217"},{"size":375,"mtime":1699796628841,"results":"218","hashOfConfig":"217"},{"size":1345,"mtime":1700778072740,"results":"219","hashOfConfig":"217"},{"size":524,"mtime":1703103969027,"results":"220","hashOfConfig":"217"},{"size":2774,"mtime":1699796628840,"results":"221","hashOfConfig":"217"},{"size":566,"mtime":1699796628840,"results":"222","hashOfConfig":"217"},{"size":2571,"mtime":1699796628841,"results":"223","hashOfConfig":"217"},{"size":3108,"mtime":1711749658600,"results":"224","hashOfConfig":"217"},{"size":453,"mtime":1699796628841,"results":"225","hashOfConfig":"217"},{"size":1701,"mtime":1699796628841,"results":"226","hashOfConfig":"217"},{"size":150,"mtime":1699796628838,"results":"227","hashOfConfig":"217"},{"size":14160,"mtime":1699796628838,"results":"228","hashOfConfig":"217"},{"size":344,"mtime":1711743544394,"results":"229","hashOfConfig":"217"},{"size":5401,"mtime":1699796628837,"results":"230","hashOfConfig":"217"},{"size":11228,"mtime":1699796628831,"results":"231","hashOfConfig":"217"},{"size":923,"mtime":1700773713759,"results":"232","hashOfConfig":"217"},{"size":783,"mtime":1699796628835,"results":"233","hashOfConfig":"217"},{"size":191,"mtime":1699796628837,"results":"234","hashOfConfig":"217"},{"size":783,"mtime":1711749880892,"results":"235","hashOfConfig":"217"},{"size":552,"mtime":1699796628820,"results":"236","hashOfConfig":"217"},{"size":547,"mtime":1699796628844,"results":"237","hashOfConfig":"217"},{"size":4338,"mtime":1711743541558,"results":"238","hashOfConfig":"217"},{"size":8757,"mtime":1711743541558,"results":"239","hashOfConfig":"217"},{"size":4836,"mtime":1711743541557,"results":"240","hashOfConfig":"217"},{"size":1244,"mtime":1699796628840,"results":"241","hashOfConfig":"217"},{"size":2090,"mtime":1699796628831,"results":"242","hashOfConfig":"217"},{"size":18070,"mtime":1711749658746,"results":"243","hashOfConfig":"217"},{"size":1567,"mtime":1699796628832,"results":"244","hashOfConfig":"217"},{"size":11334,"mtime":1711743541555,"results":"245","hashOfConfig":"217"},{"size":6674,"mtime":1711743541556,"results":"246","hashOfConfig":"217"},{"size":8064,"mtime":1711743541556,"results":"247","hashOfConfig":"217"},{"size":5593,"mtime":1699796628830,"results":"248","hashOfConfig":"217"},{"size":174,"mtime":1699796628820,"results":"249","hashOfConfig":"217"},{"size":5451,"mtime":1699796628837,"results":"250","hashOfConfig":"217"},{"size":6775,"mtime":1699796628838,"results":"251","hashOfConfig":"217"},{"size":380,"mtime":1699796628830,"results":"252","hashOfConfig":"217"},{"size":102109,"mtime":1699796628820,"results":"253","hashOfConfig":"217"},{"size":7031,"mtime":1711749658723,"results":"254","hashOfConfig":"217"},{"size":299,"mtime":1699796628845,"results":"255","hashOfConfig":"217"},{"size":153,"mtime":1699796628846,"results":"256","hashOfConfig":"217"},{"size":5889,"mtime":1699796628836,"results":"257","hashOfConfig":"217"},{"size":784,"mtime":1699796628833,"results":"258","hashOfConfig":"217"},{"size":563,"mtime":1711749883962,"results":"259","hashOfConfig":"217"},{"size":1090,"mtime":1699796628831,"results":"260","hashOfConfig":"217"},{"size":1135,"mtime":1699796628842,"results":"261","hashOfConfig":"217"},{"size":1689,"mtime":1699796628827,"results":"262","hashOfConfig":"217"},{"size":1645,"mtime":1699796628828,"results":"263","hashOfConfig":"217"},{"size":4816,"mtime":1703103950322,"results":"264","hashOfConfig":"217"},{"size":145,"mtime":1699796628840,"results":"265","hashOfConfig":"217"},{"size":615,"mtime":1699796628828,"results":"266","hashOfConfig":"217"},{"size":818,"mtime":1699796628844,"results":"267","hashOfConfig":"217"},{"size":518,"mtime":1699796628844,"results":"268","hashOfConfig":"217"},{"size":1347,"mtime":1699796628832,"results":"269","hashOfConfig":"217"},{"size":113,"mtime":1699796628836,"results":"270","hashOfConfig":"217"},{"size":1973,"mtime":1699796628823,"results":"271","hashOfConfig":"217"},{"size":3004,"mtime":1699796628827,"results":"272","hashOfConfig":"217"},{"size":921,"mtime":1699796628828,"results":"273","hashOfConfig":"217"},{"size":306,"mtime":1699796628837,"results":"274","hashOfConfig":"217"},{"size":1856,"mtime":1711743541555,"results":"275","hashOfConfig":"217"},{"size":3956,"mtime":1711749658736,"results":"276","hashOfConfig":"217"},{"size":3764,"mtime":1699796628828,"results":"277","hashOfConfig":"217"},{"size":2080,"mtime":1699796628821,"results":"278","hashOfConfig":"217"},{"size":2093,"mtime":1700775458586,"results":"279","hashOfConfig":"217"},{"size":2076,"mtime":1699796628822,"results":"280","hashOfConfig":"217"},{"size":2556,"mtime":1711743541559,"results":"281","hashOfConfig":"217"},{"size":607,"mtime":1699796628844,"results":"282","hashOfConfig":"217"},{"size":6298,"mtime":1699796628825,"results":"283","hashOfConfig":"217"},{"size":1226,"mtime":1699796628824,"results":"284","hashOfConfig":"217"},{"size":4113,"mtime":1699796628847,"results":"285","hashOfConfig":"217"},{"size":3481,"mtime":1699796628826,"results":"286","hashOfConfig":"217"},{"size":6622,"mtime":1699796628824,"results":"287","hashOfConfig":"217"},{"size":2855,"mtime":1699796628825,"results":"288","hashOfConfig":"217"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},"10a6rb7",{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"291"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"291"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"291"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"291"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"291"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"291"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"291"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"291"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"291"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"291"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"291"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"291"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"291"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"291"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"291"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"291"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"291"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"291"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"291"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"291"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"291"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"291"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"291"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"291"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"291"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"291"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"291"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"291"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"291"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"291"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"291"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ophp7a",{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\index.js",[],["619","620"],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\App.js",["621","622"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport MainPage from \"./components/MainPage/MainPage\";\r\nimport api from \"./reduxRelated/middleware/api\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\n/* import { BrowserRouter as Router} from 'react-router-dom'; */\r\n\r\nimport rootReducer from \"./reduxRelated/reducer/index.js\";\r\nimport \"react-table/react-table.css\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport moment from \"moment-timezone\";\r\nlet createStoreWithMiddleware = applyMiddleware(thunkMiddleware, api)(createStore);\r\nlet store = createStoreWithMiddleware(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport const StatusContext = React.createContext();\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [statusExports, setStatusExports] = useState([])\r\n  //console.log(process.env.NODE_PATH)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Provider store={store}>\r\n\r\n        <StatusContext.Provider value={{ statusExports, setStatusExports }}>\r\n          <MainPage />\r\n        </StatusContext.Provider>\r\n\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reportWebVitals.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\index.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\middleware\\api.js",["623","624","625"],"import { beginAjaxCall } from \"../actions/ajaxStatusAction.js\";\r\nimport { getServerEndpoint } from \"../../utils/serverEndpoint\";\r\n//import tenantInfo from \"../../utils/tenantInfo\";\r\nfunction callApi(endpoint, authenticated, config = {}) {\r\n  let token = localStorage.getItem(\"access_token\") || null;\r\n  let domain = window.location.hostname;\r\n  //let tenantId = tenantInfo.getTenantId(domain);\r\n  // let domainName = 'http://' + (tenantId !== '' ? `${tenantId}.` : '') + getServerEndpoint()\r\n  let domainName = \"http://\" + getServerEndpoint();\r\n  if (!config.headers) {\r\n    config[\"headers\"] = {};\r\n  }\r\n  if (authenticated) {\r\n    if (token) {\r\n      config[\"mode\"] = \"cors\";\r\n      config[\"headers\"][\"Authorization\"] = `${token}`;\r\n    } else {\r\n      // throw 'No token saved!';\r\n    }\r\n  } else {\r\n    config[\"mode\"] = \"cors\";\r\n  }\r\n  //  console.log( domainName+'api/'+ endpoint, config);\r\n\r\n  return fetch(domainName + \"api/\" + endpoint, config)\r\n    .then(status)\r\n    .then(text)\r\n    .catch(handleUnexpectedError);\r\n}\r\n\r\nexport const CALL_API = Symbol(\"Call API\");\r\n\r\nexport default (store) => {\r\n  return (next) => {\r\n    return (action) => {\r\n      const callAPI = action[CALL_API];\r\n\r\n      // So the middleware doesn't get applied to every single action\r\n      if (typeof callAPI === \"undefined\") {\r\n        return next(action);\r\n      }\r\n\r\n      let { endpoint, types, authenticated, config } = callAPI;\r\n\r\n      const [requestType, successType, errorType] = types;\r\n\r\n      // TODO: dispatch request action here?\r\n      store.dispatch({ type: requestType });\r\n      store.dispatch(beginAjaxCall());\r\n\r\n      return callApi(endpoint, authenticated, config).then(\r\n        (response) => {\r\n          return next({\r\n            response: response.length ? JSON.parse(response) : {},\r\n            authenticated,\r\n            type: successType,\r\n          });\r\n        },\r\n        (error) => {\r\n          return next({\r\n            error: error || \"There was an error.\",\r\n            type: errorType,\r\n          });\r\n        },\r\n      );\r\n    };\r\n  };\r\n};\r\n\r\nfunction status(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return Promise.resolve(response);\r\n  } else {\r\n    if (response.status == 401) {\r\n      window.location.assign(\"/login\");\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"loggedInUser\");\r\n    }\r\n\r\n    // //console.log(response)\r\n    return Promise.reject(response);\r\n  }\r\n}\r\n\r\nfunction text(response) {\r\n  return response.text();\r\n}\r\n\r\nfunction handleUnexpectedError(error) {\r\n  if (!error.status) {\r\n    console.log(\"Server is not accessible <br> Please retry in few seconds...\", {\r\n      status: \"warning\",\r\n      timeout: 2000,\r\n    });\r\n  }\r\n  return Promise.reject(error);\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\ajaxStatusReducer.js",["626"],"import * as types from '../ActionTypes/actionTypes.js';\r\n\r\nexport default function (state = {\r\n    ajaxCallsInProgress: 0\r\n}, action) {\r\n    if (action.type === types.BEGIN_AJAX_CALL) {\r\n        return {\r\n            ajaxCallsInProgress: state.ajaxCallsInProgress + 1\r\n        }\r\n    } else if (actionTypeEndsInSuccess(action.type)) {\r\n        return {\r\n            ajaxCallsInProgress: state.ajaxCallsInProgress - 1\r\n        }\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nfunction actionTypeEndsInSuccess(type) {\r\n    return type.substring(type.length - 8) === '_SUCCESS';\r\n}","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\loginReducer.js",["627"],"import * as types from \"../ActionTypes/actionTypes.js\";\r\n\r\nexport default function(\r\n  state = {\r\n    isFetching: false,\r\n    isAuthenticated: localStorage.getItem(\"access_token\") ? true : false,\r\n    authenticated: false,\r\n    actionType: \"\",\r\n    errorMessage: \"\",\r\n    user: {},\r\n  },\r\n  action,\r\n) {\r\n  switch (action.type) {\r\n    case types.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isAuthenticated: false,\r\n        user: action.creds,\r\n        isSuccess: false,\r\n        errorMessage: \"\",\r\n        actionType: action.type,\r\n      };\r\n    case types.LOGIN_SUCCESS:\r\n      localStorage.setItem(\"access_token\", action.response.token);\r\n      const toJson = JSON.stringify(action.response.result);\r\n      localStorage.setItem(\"loggedInUser\", toJson);\r\n      //localStorage.setItem('permissions', JSON.stringify(action.response.result.userGroup.permissions));\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isAuthenticated: true,\r\n        errorMessage: \"\",\r\n        user: action.response.result,\r\n        isSuccess: true,\r\n        actionType: action.type,\r\n      };\r\n    case types.LOGIN_FAILURE:\r\n      action.error.message = \"Email or Password Invalid !\";\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isAuthenticated: false,\r\n        errorMessage: action.error || \"Error: Unable to login.\",\r\n\r\n        isSuccess: false,\r\n        actionType: action.type,\r\n      };\r\n    case types.LOGOUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isAuthenticated: false,\r\n        isSuccess: false,\r\n        errorMessage: \"\",\r\n        actionType: action.type,\r\n      };\r\n    case types.LOGOUT_SUCCESS: //localStorage.setItem('permissions', JSON.stringify(action.response.result.userGroup.permissions));\r\n      /*localStorage.setItem('access_token', action.response.token);\r\n            const toJson = JSON.stringify(action.response.result);\r\n            localStorage.setItem('loggedInUser', toJson);\r\n            */ return {\r\n        ...state,\r\n        isFetching: false,\r\n        isAuthenticated: true,\r\n        errorMessage: \"\",\r\n        user: null,\r\n        isSuccess: true,\r\n        actionType: action.type,\r\n      };\r\n    case types.LOGOUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isAuthenticated: false,\r\n        errorMessage: action.error || \"Error: Unable to logout.\",\r\n        isSuccess: false,\r\n        user: null,\r\n        actionType: action.type,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\MainPage\\MainPage.jsx",["628","629","630"],"import React, { Component } from \"react\";\r\nimport { Switch, Route, Link, withRouter } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n// import ForgotPassword from \"components/Login/ForgotPassword/ForgotPassword\";\r\n// import VerifyResetPass from \"components/Login/ForgotPassword/VerifyResetPass\";\r\n// import ResetPassword from \"components/Login/ForgotPassword/ResetPassword\";\r\n//import { sidebarWidth, sidebarWidthSmall } from \"components/Common/Variables/CommonVariables\";\r\n//import \"../../style/basic/color.css\";\r\nimport LoginContainer from \"containers/LoginContainer\";\r\nimport Logout from \"containers/LogOutContainer\";\r\n//import Test from 'components/TestComponent/test'\r\n// import Data from 'components/data/data'\r\nimport { getServerEndpoint } from \"utils/serverEndpoint\";\r\nimport routePath from \"routes/routes.js\";\r\nimport TopBarContainer from \"../TopBar/TopBar\";\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topBarVisible: true,\r\n      userLoggedOn: false,\r\n      routes: [],\r\n      user: \"\",\r\n      //showSideNav: true,\r\n      language: \"en\",\r\n      theme: \"ps19\",\r\n      // rightValue: \"-20%\",\r\n      routeComponent: routePath.map((route, index) => {\r\n        return <Route key={route.path} path={route.path} component={route.component} />;\r\n      }),\r\n      // hideNav: window.innerWidth,\r\n      // sidebarWidth: sidebarWidth,\r\n      // textDisplay: \"inline-flex\",\r\n      // sideNavDispaly: \"0px\",\r\n      // hideToolTip: window.innerWidth <= 760,\r\n      // mainSectionLeft: this.isLoggedOn() ? sidebarWidth : 0,\r\n    };\r\n  }\r\n\r\n  isLoggedOn = () => localStorage.getItem(\"access_token\") !== null;\r\n  loggedInUser = () => localStorage.getItem(\"loggedInUser\");\r\n  componentWillMount() {\r\n    //themeService(\"retro\");\r\n    localStorage.setItem(\"theme\", this.state.theme);\r\n    if (\r\n      !this.isLoggedOn() &&\r\n      !this.props.history.location.pathname.includes(\"confirmreset\") &&\r\n      !this.props.history.location.pathname.includes(\"resetPassword\")\r\n    ) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topBarVisible } = this.state;\r\n    // const loginScreen = (\r\n    //   <div className=\"App-container\">\r\n    //     <div className=\"App-login\">\r\n    //       <LoginContainer />\r\n    //     </div>\r\n    //   </div>\r\n    //);\r\n\r\n    let switchComp = (\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginContainer} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n\r\n        {/* <Route path=\"/diagnostics\" component={Diagnostics} /> */}\r\n        {/* <Route path=\"/forgotPassword\" component={ForgotPassword} />\r\n        <Route path=\"/confirmreset/:id\" component={VerifyResetPass} />\r\n        <Route path=\"/resetPassword\" component={ResetPassword} /> */}\r\n        {this.state.routeComponent}\r\n      </Switch>\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        {/* <SocketIO /> */}\r\n        {topBarVisible && <TopBarContainer />}\r\n        <div className=\"main-content-area\">{switchComp}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MainPage);\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\actions\\ajaxStatusAction.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\languageHelperReducer.js",["631"],"import * as types from \"../ActionTypes/actionTypes.js\";\r\n\r\nexport default function(\r\n  state = {\r\n    actionType: \"\",\r\n    language: localStorage.getItem(\"language\") ? localStorage.getItem(\"language\") : \"en\",\r\n  },\r\n  action,\r\n) {\r\n  switch (action.type) {\r\n    case types.SET_LANGUAGE_CHANGE:\r\n      return {\r\n        ...state,\r\n        language: action.language,\r\n        actionType: action.type,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\reducer\\forgotPasswordReducer.js",["632"],"import * as types from \"../ActionTypes/actionTypes.js\";\r\n\r\nexport default function(\r\n  state = {\r\n    actionType: \"\",\r\n    userToResetPass: null,\r\n    response: \"\",\r\n    errorMessage: \"\",\r\n    isFetching: \"\",\r\n  },\r\n  action,\r\n) {\r\n  switch (action.type) {\r\n    case types.VERIFY_URL_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isSuccess: false,\r\n        errorMessage: \"\",\r\n        actionType: action.type,\r\n      };\r\n    case types.VERIFY_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMessage: \"\",\r\n        isSuccess: true,\r\n        userToResetPass: action.response,\r\n        actionType: action.type,\r\n      };\r\n    case types.VERIFY_URL_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMessage: \"Password reset token is invalid or has expired.\",\r\n        isSuccess: false,\r\n        actionType: action.type,\r\n      };\r\n    case types.EMAIL_RESET_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isSuccess: false,\r\n        errorMessage: \"\",\r\n        actionType: action.type,\r\n      };\r\n    case types.EMAIL_RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMessage: \"\",\r\n        isSuccess: true,\r\n        response: action.response,\r\n        actionType: action.type,\r\n      };\r\n    case types.EMAIL_RESET_PASSWORD_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMessage: action.response || \"Unable to Send Email or Email Address not found\",\r\n        isSuccess: false,\r\n        actionType: action.type,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\ActionTypes\\actionTypes.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\serverEndpoint.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\reducer.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\TopBar\\TopBar.jsx",["633","634","635","636","637","638","639","640"],"import React, { Component } from \"react\";\r\nimport { Container, Col, Label, Button, FormGroup } from \"reactstrap\";\r\nimport moment from \"moment\";\r\n//import logo from \"../../logo.png\";\r\nimport { CRUDFunction } from \"reduxCURD/container\";\r\n//import TIMPS_Logo from \"../../TIMPS_Logo.png\";\r\n\r\nimport TopBarView from \"./TopBarView\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport * as types from \"reduxRelated/ActionTypes/actionTypes.js\";\r\nimport { getAppMockupsTypes } from \"reduxRelated/actions/diagnosticsActions\";\r\nimport { setDynamicWords } from \"Language/DynamicLanguage\";\r\nimport { languageService } from \"../../Language/language.service\";\r\n//import TIMPS_Logo_old from \"../../TIMPS_Logo_old.png\";\r\nimport { themeService } from \"../../theme/service/activeTheme.service\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// const iconToShow = {\r\n//   default: TIMPS_Logo_old,\r\n//   retro: tekterkking,\r\n// };\r\nclass TopBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarVisible: true,\r\n      topBarVisible: true,\r\n      userLoggedOn: false,\r\n      routes: [],\r\n      user: this.loggedInUser(),\r\n      isCheckedIn: false,\r\n      attendanceBtnTxt: \"\",\r\n      userSession: {},\r\n      currentAttendance: {},\r\n      sessionTime: 0,\r\n      lastSession: 0,\r\n      showTimer: true,\r\n      timer: \"\",\r\n      intervalHandler: {},\r\n      checkOutTimeLimit: 60000,\r\n      sessionLimit: 14,\r\n      isSessionLocked: false,\r\n      toggleView: \"none\",\r\n    };\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.AttendanceBtnHandler = this.AttendanceBtnHandler.bind(this);\r\n    this.showToastError = this.showToastError.bind(this);\r\n    this.showToastInfo = this.showToastInfo.bind(this);\r\n    this.timeFormat = this.timeFormat.bind(this);\r\n    this.handelClick = this.handelClick.bind(this);\r\n  }\r\n  handelClick() {\r\n    this.setState({ toggleView: \"block\" });\r\n  }\r\n  showToastInfo(message) {\r\n    toast.warn(message, {\r\n      position: toast.POSITION.TOP_LEFT,\r\n    });\r\n  }\r\n\r\n  showToastError(message, error) {\r\n    toast.error(message + \": \" + error, {\r\n      position: toast.POSITION.TOP_LEFT,\r\n    });\r\n  }\r\n  AttendanceBtnHandler() {\r\n    if (this.state.isCheckedIn) {\r\n      let totalTime = moment() - moment(this.state.currentAttendance.checkInTime);\r\n      if (totalTime < this.state.checkOutTimeLimit) {\r\n        this.showToastError(languageService(\"Please Wait \"), languageService(\"Unable to checkout before 1m\"));\r\n      } else {\r\n        let checkOutStatus = \"Web\";\r\n        let checkOutTime = new Date();\r\n        this.props.onCheckOut({\r\n          checkOutStatus: checkOutStatus,\r\n          checkOutTime: checkOutTime,\r\n          attendanceId: this.state.currentAttendance._id,\r\n        });\r\n      }\r\n    } else {\r\n      let checkInStatus = \"Web\";\r\n      let checkInTime = new Date();\r\n      this.props.onCheckIn({\r\n        checkInStatus: checkInStatus,\r\n        checkInTime: checkInTime,\r\n        userId: this.state.user._id,\r\n      });\r\n    }\r\n  }\r\n\r\n  isLoggedOn = () => localStorage.getItem(\"access_token\") !== null;\r\n  loggedInUser = () => localStorage.getItem(\"loggedInUser\");\r\n\r\n  componentWillMount() {\r\n    if (this.isLoggedOn()) {\r\n      let user = localStorage.getItem(\"loggedInUser\");\r\n      this.setState({ user: JSON.parse(user) });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalHandler);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let lang = localStorage.getItem(\"language\");\r\n    let user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    if (user != null) this.props.getAppMockupsTypes(\"DynamicLanguage_\" + (lang ? lang : \"\"));\r\n    if (!this.isLoggedOn) {\r\n      this.setState({\r\n        sidebarVisible: false,\r\n        topBarVisible: true,\r\n        userLoggedOn: this.isLoggedOn(),\r\n      });\r\n    } else {\r\n      if (user != null) {\r\n        this.setState({ user: user, userLoggedOn: this.isLoggedOn() });\r\n        //  this.props.onAttendanceStatus(user._id)\r\n      }\r\n    }\r\n    function is_touch_device() {\r\n      try {\r\n        document.createEvent(\"TouchEvent\");\r\n        return true;\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    }\r\n    //console.log(is_touch_device());\r\n    is_touch_device() ? localStorage.setItem(\"touch-device\", true) : localStorage.setItem(\"touch-device\", false);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // if (\r\n    //   this.props.diagnosticsActionType !== prevProps.diagnosticsActionType &&\r\n    //   this.props.diagnosticsActionType == \"DYNAMIC_LANGUAGE_GET_SUCCESS\"\r\n    // ) {\r\n    //   setDynamicWords(this.props.dynamicLanguageList[0] ? this.props.dynamicLanguageList[0].opt1 : null);\r\n    // }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // if (this.props.actionType !== nextProps.actionType && nextProps.actionType === types.ATTENDANCE_GET_SUCCESS) {\r\n    //   if (nextProps.attendance.checkOutTime) {\r\n    //     let checkIn = nextProps.attendance.checkInTime;\r\n    //     let checkOut = nextProps.attendance.checkOutTime;\r\n    //     let totalTime = moment(checkOut) - moment(checkIn);\r\n    //     this.setState({\r\n    //       isCheckedIn: false,\r\n    //       attendanceBtnTxt: \"Check In\",\r\n    //       showTimer: false,\r\n    //       lastSession: totalTime,\r\n    //     });\r\n    //   } else if (nextProps.attendance.checkInTime) {\r\n    //     let timeDifference = moment() - moment(nextProps.attendance.checkInTime);\r\n    //     this.setState({\r\n    //       isCheckedIn: true,\r\n    //       attendanceBtnTxt: \"Check Out\",\r\n    //       sessionTime: timeDifference,\r\n    //       showTimer: true,\r\n    //     });\r\n    //     this.startTimer(nextProps.attendance);\r\n    //   } else {\r\n    //     this.setState({\r\n    //       isCheckedIn: false,\r\n    //       attendanceBtnTxt: \"Check In\",\r\n    //       showTimer: false,\r\n    //       lastSession: \"00:00:00\",\r\n    //     });\r\n    //   }\r\n    //   this.setState({ currentAttendance: nextProps.attendance });\r\n    // }\r\n    // if (this.props.actionType !== nextProps.actionType && nextProps.actionType === types.ATTENDANCE_CHECKOUT_SUCCESS) {\r\n    //   this.setState({ userSession: nextProps.userSession });\r\n    //   let checkIn = nextProps.userSession.checkInTime;\r\n    //   let checkOut = nextProps.userSession.checkOutTime;\r\n    //   let totalTime = moment(checkOut) - moment(checkIn);\r\n    //   clearInterval(this.state.intervalHandler);\r\n    //   this.setState({\r\n    //     isCheckedIn: false,\r\n    //     attendanceBtnTxt: \"Check In\",\r\n    //     showTimer: false,\r\n    //     lastSession: totalTime,\r\n    //   });\r\n    //   this.setState({ isSessionLocked: false });\r\n    //   this.props.onAttendanceSummary({ user: this.state.user._id, days: 60 });\r\n    // }\r\n    // if (this.props.actionType !== nextProps.actionType && nextProps.actionType === types.ATTENDANCE_CHECKIN_SUCCESS) {\r\n    //   let timeDifference = moment() - moment(nextProps.attendance.checkInTime);\r\n    //   this.setState({ currentAttendance: nextProps.attendance });\r\n    //   this.setState({\r\n    //     isCheckedIn: true,\r\n    //     attendanceBtnTxt: \"Check Out\",\r\n    //     showTimer: true,\r\n    //     sessionTime: timeDifference,\r\n    //   });\r\n    //   this.startTimer(nextProps.attendance);\r\n    // }\r\n    if (this.props.loginActionType !== nextProps.loginActionType && nextProps.loginActionType === types.LOGOUT_SUCCESS) {\r\n      this.setState({ userLoggedOn: false, sessionTime: 0 });\r\n      //    clearInterval(this.state.intervalHandler);\r\n    }\r\n    if (this.props.loginActionType !== nextProps.loginActionType && nextProps.loginActionType === types.LOGOUT_FAILURE) {\r\n      //      clearInterval(this.state.intervalHandler);\r\n      this.setState({ userLoggedOn: false, sessionTime: 0 });\r\n    }\r\n    if (this.props.loginActionType !== nextProps.loginActionType && nextProps.loginActionType === types.LOGIN_SUCCESS) {\r\n      let user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n      let lang = localStorage.getItem(\"language\");\r\n      this.props.getAppMockupsTypes(\"DynamicLanguage_\" + (lang ? lang : \"\"));\r\n      this.setState({ user: user, userLoggedOn: true });\r\n      // this.props.onAttendanceStatus(user._id);\r\n    }\r\n  }\r\n\r\n  startTimer(record) {\r\n    if (this.state.intervalHandler) {\r\n      clearInterval(this.state.intervalHandler);\r\n    }\r\n    let forTimer = moment().diff(record.checkInTime);\r\n    if (parseInt(forTimer / (1000 * 60 * 60)) >= this.state.sessionLimit) {\r\n      this.setState({ isSessionLocked: true });\r\n    } else {\r\n      this.setState({ isSessionLocked: false });\r\n      let timerInterval = () => {\r\n        forTimer = forTimer + 1000;\r\n        this.setState({ timer: this.timeFormat(forTimer) });\r\n      };\r\n      let intervalHandler = setInterval(timerInterval, 1000);\r\n      this.setState({ intervalHandler: intervalHandler });\r\n    }\r\n  }\r\n\r\n  timeFormat(time) {\r\n    let milliseconds = parseInt((time % 1000) / 100),\r\n      seconds = parseInt((time / 1000) % 60),\r\n      minutes = parseInt((time / (1000 * 60)) % 60),\r\n      hours = parseInt((time / (1000 * 60 * 60)) % 24);\r\n    hours = hours < 10 ? \"0\" + hours : hours;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n    if (hours >= this.state.sessionLimit) {\r\n      clearInterval(this.state.intervalHandler);\r\n      this.setState({ isSessionLocked: true });\r\n    } else return hours + \":\" + minutes + \":\" + seconds;\r\n  }\r\n  render() {\r\n    // console.log(\"TobBar\", this.props.language);\r\n    const { user } = this.state;\r\n    const loggedUser = this.loggedInUser();\r\n    return (\r\n      <div>\r\n        <TopBarView\r\n          onAttendanceClick={this.AttendanceBtnHandler}\r\n          attendanceBtnTxt={this.state.attendanceBtnTxt}\r\n          sessionTime={this.state.sessionTime}\r\n          isTimer={this.state.showTimer}\r\n          lastSession={this.state.lastSession}\r\n          userName={user}\r\n          //logo={themeService(iconToShow)}\r\n          user={loggedUser}\r\n          userLoggedOn={this.state.userLoggedOn}\r\n          timer={this.state.timer}\r\n          isSessionLocked={this.state.isSessionLocked}\r\n          language={this.props.language}\r\n          sidebarToggle={this.props.sidebarToggle}\r\n          hamBurgerVisible={this.state.userLoggedOn}\r\n          hideToolTip={this.props.hideToolTip}\r\n          toggleView={this.state.toggleView}\r\n          handelClick={this.handelClick}\r\n          toggleRight={this.props.toggleRight}\r\n          history={this.props.history}\r\n        //notifications={this.props.notifications}\r\n        />\r\n        <ToastContainer autoClose={10000} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet variables = {\r\n  languageHelperReducer: {\r\n    language: \"\",\r\n  },\r\n  //diagnosticsReducer: { dynamicLanguageList: [] },\r\n  loginReducer: { user: null },\r\n  //notificationReducer: { notifications: [] },\r\n};\r\n\r\nlet actionOptions = {\r\n  create: false,\r\n  update: false,\r\n  read: false,\r\n  delete: false,\r\n  others: { getAppMockupsTypes },\r\n};\r\nlet TopBarContainer = CRUDFunction(TopBar, \"TopBar\", actionOptions, variables, [\r\n  \"languageHelperReducer\",\r\n  //\"diagnosticsReducer\",\r\n  \"loginReducer\",\r\n  //\"notificationReducer\",\r\n]);\r\n\r\nexport default withRouter(TopBarContainer);\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\routes\\routes.js",["641"],"import User from \"../components/User/User\";\r\nimport UserDetails from \"../components/UserModule/UserDetails\";\r\nimport DailyLogging from \"../components/DailyLogging/DailyLogging\";\r\nimport StatusExport from \"../Pages/StatusExport/StatusExport\";\r\nimport Team from \"../Pages/Team/Team\";\r\nimport CreateUser from \"../components/UserModule/CreateUser\";\r\nimport EditUser from \"../components/UserModule/EditUser\";\r\nimport SessionExportContainer from \"../Pages/SessionExport/SessionExport\";\r\n\r\nlet route = [\r\n  //{ path: \"/user\", component: User },\r\n  { path: \"/usermodule\", component: UserDetails },\r\n  { path: \"/createuser\", component: CreateUser },\r\n  { path: \"/edituser/:id\", component: EditUser },\r\n  { path: \"/statusExport\", component: StatusExport },\r\n  { path: \"/sessionExport\", component: SessionExportContainer },\r\n  { path: \"/team\", component: Team },\r\n  { path: \"/\", component: DailyLogging },\r\n];\r\nexport default route;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\types.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\containers\\LoginContainer.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\containers\\LogOutContainer.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Language\\language.service.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\theme\\service\\activeTheme.service.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\actions\\loginActions.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\TopBar\\TopBarView.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\UserModule\\CreateUser.js",["642","643","644","645","646","647"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import { addUsers } from \"../redux/user\"\r\n\r\nimport { useRef } from \"react\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { button } from \"../Common/Forms/formsMiscItems\";\r\n\r\nexport function CreateUser(props) {\r\n  const history = useHistory();\r\n  const { createUserAction, getGroups, groups, users, getUsersAction } = props;\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n    getUsersAction();\r\n  }, []);\r\n\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    mobile: \"\",\r\n    userGroup: 0,\r\n    group_id: \"\",\r\n    group_name: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { name, email, password, mobile, group_id, userGroup, group_name } = state;\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    let id = 0;\r\n    let newGroup_id = \"\";\r\n\r\n    if (name === \"group_id\") {\r\n      for (const group of groups) {\r\n        if (group.name == value) {\r\n          id = group._id;\r\n          newGroup_id = group.group_id;\r\n        }\r\n      }\r\n      setState({ ...state, group_name: value, group_id: newGroup_id, userGroup: id });\r\n    } else {\r\n      setState({ ...state, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let emailCheck = false;\r\n\r\n    for (const myUser of users) {\r\n      if (myUser.email == email) {\r\n        emailCheck = true;\r\n      }\r\n    }\r\n    if (!name || !email || !password || !mobile || !group_id || !userGroup) {\r\n      setError(\"Please Input All Values\");\r\n    } else if (emailCheck) {\r\n      setError(\"Email Already Exists\");\r\n    } else if (window.confirm(\"Are You Sure?\")) {\r\n      createUserAction(state);\r\n      if (props.userErrorMessage) {\r\n        setError(props.userErrorMessage);\r\n      } else {\r\n        setError(\"\");\r\n        setState({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          mobile: \"\",\r\n          group_id: \"\",\r\n          userGroup: 0,\r\n          group_name: \"\",\r\n        });\r\n\r\n        history.push(\"/usermodule\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"status-main-wrapper\">\r\n      {/* {JSON.stringify(groups)} */}\r\n\r\n      <div className=\"main-wrapper\">\r\n        <div className=\"user-wrapper\">\r\n          <h2>Create User</h2>\r\n\r\n          <button className=\"create-button\" onClick={() => history.push(\"/usermodule\")}>\r\n            Go Back\r\n          </button>\r\n        </div>\r\n        {error && <h3 style={{ color: \"red\" }}>{error}</h3>}\r\n        <div className=\"table-wrapper\">\r\n          <form className=\"realform\" onSubmit={handleSubmit}>\r\n            <div className=\"field-wrapper\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input id=\"name\" className=\"form-input\" value={name} name=\"name\" onChange={handleChange} type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"field-wrapper\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input id=\"email\" className=\"form-input\" value={email} name=\"email\" onChange={handleChange} type=\"email\" />\r\n            </div>\r\n\r\n            <div className=\"field-wrapper\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input id=\"password\" className=\"form-input\" value={password} name=\"password\" onChange={handleChange} type=\"password\" />\r\n            </div>\r\n\r\n            <div className=\"field-wrapper\">\r\n              <label htmlFor=\"mobile\">Phone</label>\r\n              <input id=\"mobile\" className=\"form-input\" value={mobile} name=\"mobile\" onChange={handleChange} type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"field-wrapper\">\r\n              <label htmlFor=\"group_id\">User Group</label>\r\n              <select id=\"group_id\" className=\"form-select\" placeholder=\"Select\" value={group_name} name=\"group_id\" onChange={handleChange}>\r\n                <option>Select</option>\r\n                {groups.map((group) => {\r\n                  return <option key={group._id}>{group.name}</option>;\r\n                })}\r\n              </select>\r\n            </div>\r\n            <button className=\"create-button\" type=\"submit\">\r\n              Confirm\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst createUserAction = curdActions.createUser;\r\nconst getUsersAction = curdActions.getUsers;\r\n\r\nlet actionOptions = {\r\n  create: false,\r\n  update: false,\r\n  read: true,\r\n  delete: false,\r\n  others: { createUserAction, getUsersAction },\r\n};\r\nlet variableList = {\r\n  userReducer: {\r\n    user: {},\r\n    users: [],\r\n  },\r\n};\r\n\r\nlet myReducer = [\"userReducer\"];\r\nconst CreateuserContainer = CRUDFunction(CreateUser, \"group\", actionOptions, variableList, myReducer, \"userGroup\");\r\n\r\nexport default CreateuserContainer;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\UserModule\\EditUser.js",["648","649","650","651","652","653","654","655","656","657","658","659","660"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n// import { fetchSingleUser } from \"../redux/user\"\r\n// import { updateOldUser } from \"../redux/user\"\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\n\r\nimport { button } from \"../Common/Forms/formsMiscItems\";\r\nimport UpdatePassword from \"./UpdatePassword\";\r\n\r\nfunction EditUser(props) {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const { user, updateUserAction, getUserAction, getGroups, Groups } = props;\r\n\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    mobile: \"\",\r\n    group_id: \"\",\r\n    userGroup: 0,\r\n  });\r\n\r\n  const [passText, setPassText] = useState(\"Update Password\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const handleDisplay = () => {\r\n    setDisplay((old) => !old);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (display === false) setPassText(\"Update Password\");\r\n    else {\r\n      setPassText(\"Cancel\");\r\n    }\r\n  }, [display]);\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUserAction(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      {\r\n        console.log(user.hashedPassword);\r\n      }\r\n      let userGroupName = \"\";\r\n      for (const group of Groups) {\r\n        if (group.group_id == user.group_id) {\r\n          userGroupName = group.name;\r\n        }\r\n      }\r\n      setState({\r\n        email: user.email,\r\n        name: user.name,\r\n        mobile: user.mobile,\r\n        group_id: user.group_id,\r\n        userGroup: user.userGroup,\r\n        group_name: userGroupName,\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { name, email, mobile, group_id, userGroup, group_name } = state;\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    let id = 0;\r\n    let newGroup_id = \"\";\r\n    if (name === \"group_id\") {\r\n      for (const group of Groups) {\r\n        if (group.name == value) {\r\n          id = group._id;\r\n          newGroup_id = group.group_id;\r\n        }\r\n      }\r\n      setState({ ...state, group_name: value, group_id: newGroup_id, userGroup: id });\r\n    } else {\r\n      setState({ ...state, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setError(\"\");\r\n\r\n    if (display) {\r\n      console.log(\"in password\");\r\n\r\n      if (password === newPassword) {\r\n        if (!name || !email || !mobile || !group_id || !userGroup || !password || !newPassword) {\r\n          setError(\"Please Input All Values\");\r\n        } else if (window.confirm(\"Are You Sure?\")) {\r\n          console.log({ ...state, password: password });\r\n\r\n          updateUserAction({ ...state, password: password }, id);\r\n          console.log(user);\r\n\r\n          if (props.userErrorMessage) {\r\n            setError(props.userErrorMessage);\r\n          } else {\r\n            setError(\"\");\r\n            setState({\r\n              email: \"\",\r\n              name: \"\",\r\n              mobile: \"\",\r\n              group_id: \"\",\r\n              userGroup: 0,\r\n              group_name: \"\",\r\n            });\r\n\r\n            history.push(\"/usermodule\");\r\n          }\r\n        }\r\n      } else {\r\n        setError(\"Passwords Must Match\");\r\n      }\r\n    } else {\r\n      console.log(\" not in password\");\r\n\r\n      if (!name || !email || !mobile || !group_id || !userGroup) {\r\n        setError(\"Please Input All Values\");\r\n      } else if (window.confirm(\"Are You Sure?\")) {\r\n        console.log(state);\r\n\r\n        updateUserAction(state, id);\r\n        console.log(user);\r\n\r\n        if (props.userErrorMessage) {\r\n          setError(props.userErrorMessage);\r\n        } else {\r\n          setError(\"\");\r\n          setState({\r\n            email: \"\",\r\n            name: \"\",\r\n            mobile: \"\",\r\n            group_id: \"\",\r\n            userGroup: 0,\r\n            group_name: \"\",\r\n          });\r\n\r\n          history.push(\"/usermodule\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // return (\r\n  //   <div className=\"form-div\">\r\n  //     <h2>Edit User</h2>\r\n  //     {error && <h3 style={{ color: 'red' }}>{error}</h3>}\r\n  //     <form onSubmit={handleSubmit}>\r\n  //       <div className=\"form-wrapper\">\r\n  //         <div className=\"field-wrapper\"><label>Name</label>\r\n\r\n  //           <input value={name} name='name' onChange={handleChange} type='text' /></div>\r\n\r\n  //         <div className=\"field-wrapper\"><label>Email</label>\r\n\r\n  //           <input disabled='disabled' value={email} name='email' onChange={handleChange} type='email' /></div>\r\n\r\n  //         <div className=\"field-wrapper\"><label>Password</label>\r\n\r\n  //           <input value={password} name='password' onChange={handleChange} type='password' /></div>\r\n\r\n  //         <div className=\"field-wrapper\"><label>Phone</label>\r\n\r\n  //           <input value={mobile} name='mobile' onChange={handleChange} type='text' /></div>\r\n\r\n  //         <div className=\"field-wrapper\"><label>User Group</label>\r\n  //           <select placeholder=\"Select\" value={group_name} name='group_id' onChange={handleChange} >\r\n  //             <option >Select</option>\r\n  //             {Groups.map(group => {\r\n  //               return (<option>{group.name}</option>)\r\n  //             })}\r\n  //           </select>\r\n  //         </div>\r\n  //         <button className=\"create-button\" type='submit' >Confirm</button>\r\n  //       </div>\r\n  //     </form>\r\n  //     <button className=\"create-button\" onClick={() => history.push('/usermodule')}>Go Back</button>\r\n\r\n  //   </div>\r\n\r\n  // )\r\n\r\n  return (\r\n    <div className=\"status-main-wrapper\">\r\n      {/* {JSON.stringify(groups)} */}\r\n\r\n      <div className=\"main-wrapper\">\r\n        <div className=\"user-wrapper\">\r\n          <h2>Edit User</h2>\r\n\r\n          <button className=\"create-button\" onClick={() => history.push(\"/usermodule\")}>\r\n            Go Back\r\n          </button>\r\n        </div>\r\n        {error && <h3 style={{ color: \"red\" }}>{error}</h3>}\r\n        <div className=\"table-wrapper\">\r\n          <form className=\"realform\" onSubmit={handleSubmit}>\r\n            <div className=\"field-wrapper\">\r\n              <label>Name</label>\r\n\r\n              <input className=\"form-input\" value={name} name=\"name\" onChange={handleChange} type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"field-wrapper\">\r\n              <label>Email</label>\r\n\r\n              <input className=\"form-input\" disabled=\"disabled\" value={email} name=\"email\" onChange={handleChange} type=\"email\" />\r\n            </div>\r\n\r\n            {/* <div className=\"field-wrapper\"><label>Password</label>\r\n\r\n            <input type=\"hidden\" className=\"form-input\" onChange={handleChange} /></div> */}\r\n\r\n            <div className=\"field-wrapper\">\r\n              <label>Phone</label>\r\n\r\n              <input className=\"form-input\" value={mobile} name=\"mobile\" onChange={handleChange} type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"field-wrapper\">\r\n              <label>User Group</label>\r\n              <select className=\"form-select\" placeholder=\"Select\" value={group_name} name=\"group_id\" onChange={handleChange}>\r\n                <option>Select</option>\r\n                {Groups.map((group) => {\r\n                  return <option>{group.name}</option>;\r\n                })}\r\n              </select>\r\n            </div>\r\n\r\n            {/* {display && <UpdatePassword newPassword={newPassword} setNewPassword={setNewPassword} password={password} setPassword={setPassword} />}\r\n\r\n            <div className=\"feild-wrapper\">\r\n\r\n              <button type=\"button\" onClick={handleDisplay} className=\"create-button\">{passText}</button>\r\n            </div> */}\r\n\r\n            <br></br>\r\n\r\n            <button className=\"create-button\" type=\"submit\">\r\n              Confirm\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     userData: state.user\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     fetchSingleUser: (id) => dispatch(fetchSingleUser(id)),\r\n//     updateOldUser: (user, id) => dispatch(updateOldUser(user, id))\r\n//   }\r\n// }\r\n\r\nconst updateUserAction = curdActions.updateUser;\r\nconst getUserAction = curdActions.getUser;\r\n\r\nlet actionOptions = {\r\n  create: false,\r\n  update: false,\r\n  read: true,\r\n  delete: false,\r\n  others: { updateUserAction, getUserAction },\r\n};\r\nlet variableList = {\r\n  userReducer: { user: {} },\r\n};\r\n\r\nlet myReducer = [\"userReducer\"];\r\nconst EditUserContainer = CRUDFunction(EditUser, \"Group\", actionOptions, variableList, myReducer, \"userGroup\");\r\n\r\nexport default EditUserContainer;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\UserModule\\UserDetails.js",["661","662","663","664","665","666","667","668","669","670","671","672","673"],"//import { fetchUsers } from \"../redux/user\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import { deleteUser } from \"../redux/user\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport React, { Component } from \"react\";\r\nimport permissionCheck from \"../../utils/permissionCheck\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\nimport { loggedInUser } from \"../../utils/util\";\r\nimport \"./usermodulestyle.css\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { useRef } from \"react\";\r\nimport UserList from \"../User/UserList/UserList\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { button } from \"../Common/Forms/formsMiscItems\";\r\n\r\nconst Users = (props) => {\r\n  const history = useHistory();\r\n  //const { onChange, userData, fetchUsers, deleteUser } = props\r\n\r\n  const prevActionType = props.actionType;\r\n  const prevActionTypeRef = useRef(prevActionType);\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // const handleDelete = (id) => {\r\n  //   if (window.confirm(\"Are You Sure?\")) {\r\n  //     deleteUser(id)\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   fetchUsers()\r\n  // }, [])\r\n\r\n  let currentUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n\r\n  useEffect(() => {\r\n    props.getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setUsers(props.users);\r\n  }, [props.users]);\r\n\r\n  useEffect(() => {\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"USERS_READ_SUCCESS\") {\r\n      setUsers(props.users);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"USER_DELETE_SUCCESS\") {\r\n      window.alert(\"User Deleted\");\r\n      handleDeleteUser(props.user._id);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"USER_CREATE_SUCCESS\") {\r\n      props.getUsers();\r\n      window.alert(\"User Created\");\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType) {\r\n      prevActionTypeRef.current = props.actionType;\r\n    }\r\n  }, [props.actionType]);\r\n\r\n  const handleDelete = (user) => {\r\n    props.deleteUser(user, user._id);\r\n  };\r\n\r\n  const handleDeleteUser = (id) => {\r\n    // Remove the team at the specified index from the teams list\r\n    const copyUsers = [...users];\r\n    let updatedUsers = copyUsers.filter((u) => u._id !== id);\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  return (\r\n    <div className=\"status-main-wrapper\">\r\n      <div className=\"main-wrapper\">\r\n        <div className=\"user-wrapper\">\r\n          <h2>User List</h2>\r\n          <button className=\"create-button\" onClick={() => history.push(\"/createuser\")}>\r\n            Create User\r\n          </button>\r\n        </div>\r\n\r\n        {props.errorMessage && <h2 style={{ color: \"red\" }}>{props.errorMessage}</h2>}\r\n\r\n        <div className=\"table-wrapper\">\r\n          <table className=\"table table-striped table-responsive\">\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th>Name </th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.users.map((user) => {\r\n                return (\r\n                  <tr style={{ height: \"40px\" }}>\r\n                    <td>{user.name} </td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      {currentUser._id != user._id && (\r\n                        <div className=\"action-class\">\r\n                          <span className=\"action-item\" onClick={() => handleDelete(user)}>\r\n                            {\" \"}\r\n                            Delete\r\n                          </span>\r\n                          <span className=\"action-item\" onClick={() => history.push(`/edituser/${user._id}`)}>\r\n                            Edit\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <p style={{ color: 'red' }}>{JSON.stringify(props.users[22].userGroupObj.name)}</p> */}\r\n\r\n      {/* <Row>\r\n        <Col md={4}>\r\n          <UserList userLIst={props.users} />\r\n        </Col>\r\n\r\n      </Row>\r\n      <button className=\"create-button\" onClick={() => history.push('/createuser')}>Create User</button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// let actionOptions = {\r\n//   create: true,\r\n//   update: true,\r\n//   read: true,\r\n//   delete: true,\r\n//   others: {}\r\n// }\r\n\r\nconst UserDetails = CRUDFunction(Users, \"user\", null, null, null, \"users\");\r\nexport default UserDetails;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\User\\User.jsx",["674","675"],"import React, { Component } from \"react\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport permissionCheck from \"../../utils/permissionCheck\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\nimport { loggedInUser } from \"../../utils/util\";\r\nimport UserList from \"./UserList/UserList\";\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    this.handleEvent = this.handleEvent.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let viewUserCheck = permissionCheck(\"USER\", \"view\");\r\n    if (!viewUserCheck) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    const currentUser = isJSON(loggedInUser());\r\n    if (currentUser) {\r\n      this.setState({\r\n        selectedUserId: currentUser._id,\r\n        addUser: false,\r\n        currentUser: currentUser,\r\n      });\r\n    }\r\n    this.props.getUsers();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevState.name !== this.state.name) {\r\n      this.handler();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() { }\r\n\r\n  // Prototype methods, Bind in Constructor (ES2015)\r\n  handleEvent() { }\r\n\r\n  // Class Properties (Stage 3 Proposal)\r\n  handler = () => {\r\n    this.setState();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <Row>\r\n          <Col md={4}>\r\n            <UserList userLIst={this.props.users} />\r\n          </Col>\r\n          <Col md={4}>Staff Profile</Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//export default CRUDFunction(User, \"user\", null, null, null, \"users\");\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\DailyLogging.jsx",["676","677","678","679","680","681","682","683","684","685","686"],"import React, { Component } from \"react\";\r\nimport { loggedInUser } from \"../../utils/util\";\r\nimport { InputDateField, Label, InputFieldCustom, TextAreaField, SelectField } from \"../FormInputs/InputFields\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Icon from \"react-icons-kit\";\r\nimport { pmsThemeColors } from \"../../style/basic/basicColors\";\r\nimport { check } from \"react-icons-kit/metrize/check\";\r\nimport { cross } from \"react-icons-kit/metrize/cross\";\r\nimport { themeService } from \"../../theme/service/activeTheme.service\";\r\nimport { withPlus } from \"react-icons-kit/entypo/withPlus\";\r\nimport { refresh } from \"react-icons-kit/metrize/refresh\";\r\nimport { play } from \"react-icons-kit/metrize/play\";\r\nimport { stop } from \"react-icons-kit/metrize/stop\";\r\nimport { defaultFormVal, projects } from \"./DailyLoggingVars\";\r\nimport { Tooltip } from \"reactstrap\";\r\nimport { zonedTimeToUtc, utcToZonedTime, format } from \"date-fns-tz\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { getTimezone, updateTimezone, editLocation } from \"./DailyLoggingVars\";\r\nimport { timezoneList, timezoneListAlias } from \"./DailyLoggingVars\";\r\nimport Times from \"./Times\";\r\n\r\nimport {\r\n  handleAddSessionState,\r\n  resetOrEditMethod,\r\n  cancelMethod,\r\n  saveSession,\r\n  loadFormRelatedState,\r\n  getSessions,\r\n  getActiveSession,\r\n  editMode,\r\n  convertTimezone,\r\n} from \"./DailyLoggingMethods\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\nimport SessionsList from \"./SessionsList/SessionsList\";\r\nimport \"./style.css\";\r\nimport { filtersMethod } from \"./FilterMethods/filterMethods\";\r\nimport FilterArea from \"./FilterMethods/FilterArea\";\r\nimport permissionCheck from \"../../utils/permissionCheck\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { UserSelectArea } from \"./FilterMethods/UserSelectArea\";\r\n\r\nconst filterValues = {\r\n  Day: { from: moment().startOf(\"d\"), to: moment().endOf(\"d\") },\r\n  Week: { from: moment().startOf(\"w\"), to: moment().endOf(\"w\") },\r\n  Month: { from: moment().startOf(\"month\"), to: moment().endOf(\"month\") },\r\n};\r\nclass DailyLogging extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      form: { ...defaultFormVal },\r\n      addMode: false,\r\n      editMode: false,\r\n      changeInForm: false,\r\n      selectedSession: null,\r\n      editExistingSession: null,\r\n      filterMode: \"Week\",\r\n      range: filterValues[\"Week\"],\r\n      userSelectAllowed: false,\r\n      time: new Date(),\r\n      sessionClicked: false,\r\n      timezone: getTimezone(),\r\n    };\r\n    this.timeInterval = null;\r\n    this.toggle = this.toggle.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleAddClick = this.handleAddClick.bind(this);\r\n    this.handleActions = this.handleActions.bind(this);\r\n    this.handleEditClick = this.handleEditClick.bind(this);\r\n    this.handleFilterClick = this.handleFilterClick.bind(this);\r\n    this.handleFilterMoveClick = this.handleFilterMoveClick.bind(this);\r\n    this.handleUserSelect = this.handleUserSelect.bind(this);\r\n    this.handleTimeChange = this.handleTimeChange.bind(this);\r\n    this.loggedInUser = isJSON(loggedInUser());\r\n  }\r\n\r\n  handleFilterMoveClick(direction) {\r\n    let dateRange = { ...this.state.range };\r\n    let dateLogic = {\r\n      Day: \"d\",\r\n      Week: \"w\",\r\n      Month: \"month\",\r\n    };\r\n    if (direction == 1) {\r\n      // right\r\n      dateRange.from.add(1, dateLogic[this.state.filterMode]);\r\n      dateRange.to.add(1, dateLogic[this.state.filterMode]);\r\n    } else {\r\n      // left\r\n      dateRange.from.subtract(1, dateLogic[this.state.filterMode]);\r\n      dateRange.to.subtract(1, dateLogic[this.state.filterMode]);\r\n    }\r\n    this.fetchFromServer(this.state.selectedUser, dateRange);\r\n    this.setState({ range: dateRange });\r\n  }\r\n  handleFilterClick(filter) {\r\n    let dateRange = filterValues[filter];\r\n    this.fetchFromServer(this.state.selectedUser, dateRange);\r\n    this.setState({\r\n      filterMode: filter,\r\n      range: dateRange,\r\n    });\r\n  }\r\n  handleAddClick() {\r\n    if (!this.state.addMode) {\r\n      this.setState(handleAddSessionState());\r\n    }\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      tooltipOpen: !this.state.tooltipOpen,\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    this.loggedInUser = isJSON(loggedInUser());\r\n    if (this.loggedInUser) {\r\n      getSessions(this.loggedInUser._id, this.state.range, this.props.getTaskSessions);\r\n      getActiveSession(this.loggedInUser._id, this.state.range, this.props.getTaskSession);\r\n\r\n      this.multipleUserSelectionMethod(this.loggedInUser);\r\n      this.setState({\r\n        selectedUser: this.loggedInUser._id,\r\n      });\r\n    }\r\n\r\n    this.timeInterval = setInterval(() => {\r\n      this.setState({\r\n        time: new Date(),\r\n      });\r\n      updateTimezone(getTimezone());\r\n    }, 40000);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.actionType === \"TASKSESSION_READ_SUCCESS\" && this.props.actionType !== prevProps.actionType) {\r\n      if (this.props.taskSession) {\r\n        this.setState({\r\n          sessionClicked: true,\r\n        });\r\n      } else if (!this.props.taskSession) {\r\n        this.setState({\r\n          sessionClicked: false,\r\n        });\r\n      }\r\n    }\r\n    if (this.props.actionType === \"TASKSESSION_CREATE_SUCCESS\" && this.props.actionType !== prevProps.actionType) {\r\n      let stateToSet = cancelMethod();\r\n      stateToSet.selectedUser = this.loggedInUser._id;\r\n      this.setState(stateToSet);\r\n      this.fetchFromServer(this.loggedInUser._id);\r\n    }\r\n    if (this.props.actionType === \"TASKSESSION_UPDATE_SUCCESS\" && this.props.actionType !== prevProps.actionType) {\r\n      let stateToSet = cancelMethod();\r\n      stateToSet.selectedUser = this.loggedInUser._id;\r\n      this.setState(stateToSet);\r\n      this.fetchFromServer(this.loggedInUser._id);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeInterval) {\r\n      clearInterval(this.timeInterval);\r\n    }\r\n  }\r\n\r\n  multipleUserSelectionMethod(loggedInUser) {\r\n    if (loggedInUser && loggedInUser._id) {\r\n      let permCheck = permissionCheck(\"USER\", \"manager_view\");\r\n      if (permCheck) {\r\n        this.props.getUsers();\r\n        this.setState({\r\n          userSelectAllowed: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchFromServer(userId, range) {\r\n    if (userId) {\r\n      getSessions(userId, range ? range : this.state.range, this.props.getTaskSessions);\r\n    }\r\n  }\r\n  handleChange(value, name, blur) {\r\n    let form = { ...this.state.form };\r\n    form[name] = value;\r\n    if (name === \"checkin\") {\r\n      if (form.checkout < form.checkin) form.checkout = form.checkin;\r\n    }\r\n    this.setState({\r\n      form: form,\r\n      changeInForm: true,\r\n    });\r\n  }\r\n\r\n  handleTimeChange(e) {\r\n    if (e.target.value != \"Select Timezone\") {\r\n      updateTimezone(e.target.value);\r\n      this.setState({\r\n        timezone: e.target.value,\r\n      });\r\n\r\n      console.log(getTimezone());\r\n\r\n      if (this.state.addMode || this.state.editMode) {\r\n        this.setState(cancelMethod);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleActions(mode) {\r\n    if (mode > 0) {\r\n      console.log(\"In overall edit\", this.props.taskSession);\r\n\r\n      let stateToSet = loadFormRelatedState(this.state);\r\n\r\n      console.log(\"State in overall\", stateToSet);\r\n\r\n      if (mode === 1) {\r\n        if (stateToSet.form.timed === true) {\r\n          if (\r\n            stateToSet.form.checkin !== this.state.selectedSession.checkin ||\r\n            stateToSet.form.checkout !== this.state.selectedSession.checkout\r\n          )\r\n            stateToSet.form = {\r\n              ...stateToSet.form,\r\n              timed: false,\r\n            };\r\n        }\r\n\r\n        console.log(\"Added\", stateToSet);\r\n\r\n        stateToSet.form.timezone = getTimezone();\r\n\r\n        convertTimezone(stateToSet, getTimezone());\r\n\r\n        // //updating timezone on addition or edit\r\n        editLocation(getTimezone());\r\n\r\n        saveSession(stateToSet, this.loggedInUser, this.props.createTaskSession, this.props.updateTaskSession);\r\n      } else if (mode === 2 && this.state.selectedSession !== null) {\r\n        stateToSet.form.timezone = this.state.selectedSession.timezone;\r\n        console.log(\"Reset or Edit\", this.state.selectedSession);\r\n\r\n        resetOrEditMethod(stateToSet, this.state.selectedSession);\r\n      } else if (mode === 3) {\r\n        console.log(\"Cancel\", this.state.selectedSession);\r\n\r\n        stateToSet = cancelMethod();\r\n      }\r\n\r\n      //start session\r\n      else if (mode === 4) {\r\n        this.setState({\r\n          sessionClicked: true,\r\n        });\r\n\r\n        stateToSet.form = {\r\n          ...stateToSet.form,\r\n          timed: true,\r\n        };\r\n\r\n        stateToSet.form.checkin = utcToZonedTime(new Date(), getTimezone());\r\n        stateToSet.form.checkout = null;\r\n\r\n        console.log(stateToSet);\r\n\r\n        stateToSet.form.timezone = getTimezone();\r\n\r\n        convertTimezone(stateToSet, getTimezone());\r\n\r\n        //updating timezone on addition or edit\r\n        editLocation(getTimezone());\r\n\r\n        saveSession(stateToSet, this.loggedInUser, this.props.createTaskSession, this.props.updateTaskSession);\r\n      }\r\n\r\n      //stop session\r\n      else if (mode === 5 && this.props.taskSession.timed && !this.props.taskSession.checkout) {\r\n        this.setState({\r\n          sessionClicked: false,\r\n        });\r\n\r\n        console.log(\"IN STOP\", this.props.taskSession);\r\n        stateToSet.form = { ...this.props.taskSession };\r\n\r\n        stateToSet.form.checkin = utcToZonedTime(new Date(this.props.taskSession.checkin), getTimezone());\r\n\r\n        stateToSet.form.checkout = utcToZonedTime(new Date(), getTimezone());\r\n\r\n        stateToSet.form.timezone = getTimezone();\r\n\r\n        convertTimezone(stateToSet, getTimezone());\r\n\r\n        //updating timezone on addition or edit\r\n        editLocation(getTimezone());\r\n\r\n        saveSession(stateToSet, this.loggedInUser, this.props.createTaskSession, this.props.updateTaskSession);\r\n      }\r\n\r\n      console.log(\"After perfroming action\", this.props.taskSession);\r\n\r\n      this.setState(stateToSet);\r\n\r\n      getActiveSession(this.loggedInUser._id, this.state.range, this.props.getTaskSession);\r\n    }\r\n  }\r\n\r\n  handleEditClick(session) {\r\n    let stateToSet = loadFormRelatedState(this.state);\r\n    editMode(stateToSet, session);\r\n    this.setState(stateToSet);\r\n  }\r\n  handleUserSelect(user_id) {\r\n    this.setState({\r\n      selectedUser: user_id,\r\n    });\r\n    this.fetchFromServer(user_id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col className=\"task-area\" md={12}>\r\n          <Times\r\n            timezone={getTimezone()}\r\n            time={this.state.time}\r\n            show={this.state.sessionClicked}\r\n            taskSession={this.props.taskSession}\r\n          ></Times>\r\n        </Col>\r\n\r\n        <Col className=\"task-area\" md={12}>\r\n          <div className=\"session-first\">\r\n            <h2>Task Sessions</h2>\r\n            <Row>\r\n              <select value={this.state.timezone} onChange={this.handleTimeChange} className=\"form-select-session\">\r\n                <option>Select Timezone</option>\r\n                {timezoneList.map((timezone, index) => {\r\n                  return <option value={timezoneList[index]}>{timezone}</option>;\r\n                })}\r\n              </select>\r\n            </Row>\r\n\r\n            <div className=\"session-first\">\r\n              {/* for timed session  play */}\r\n\r\n              <span\r\n                style={{\r\n                  ...themeService(dailyStyles.iconStyle),\r\n                  color: \"green\",\r\n                  color: this.state.sessionClicked ? \"grey\" : \"green\",\r\n                  cursor: this.state.sessionClicked ? \"not-allowed\" : \"pointer\",\r\n                }}\r\n                onClick={async (e) => {\r\n                  await getActiveSession(this.loggedInUser._id, this.state.range, this.props.getTaskSession);\r\n                  if (!this.props.taskSession) {\r\n                    this.handleActions(4);\r\n                  }\r\n                }}\r\n                id=\"Start\"\r\n              >\r\n                <Icon icon={play} size={35} />\r\n              </span>\r\n\r\n              {/* for timed session  stop */}\r\n              <span\r\n                style={{\r\n                  ...themeService(dailyStyles.iconStyle),\r\n                  color: \"#610016\",\r\n\r\n                  color: this.state.sessionClicked ? \"#610016\" : \"grey\",\r\n                  cursor: this.state.sessionClicked ? \"pointer\" : \"not-allowed\",\r\n                }}\r\n                onClick={async (e) => {\r\n                  await getActiveSession(this.loggedInUser._id, this.state.range, this.props.getTaskSession);\r\n\r\n                  if (this.props.taskSession) {\r\n                    this.handleActions(5);\r\n                  }\r\n                }}\r\n                id=\"Stop\"\r\n              >\r\n                <Icon icon={stop} size={35} />\r\n              </span>\r\n\r\n              <span className=\"add-click\" onClick={this.handleAddClick}>\r\n                <Icon icon={withPlus} size={42} />\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {(this.state.addMode || this.state.editMode) && (\r\n            <CheckinOutArea\r\n              handleChange={this.handleChange}\r\n              changeInForm={this.state.changeInForm}\r\n              form={this.state.form}\r\n              handleActions={this.handleActions}\r\n              tooltipOpen={this.state.tooltipOpen}\r\n              toggle={this.toggle}\r\n              selectedSession={this.state.selectedSession}\r\n            />\r\n          )}\r\n        </Col>\r\n\r\n        <Col className=\"task-area\" md={12}>\r\n          <div className=\"session-first\">\r\n            <h2>Task Sessions List</h2>\r\n\r\n            <div>\r\n              {this.state.userSelectAllowed && (\r\n                <UserSelectArea\r\n                  className=\"form-select\"\r\n                  onUserSelectChange={this.handleUserSelect}\r\n                  selectedUser={this.state.selectedUser}\r\n                  userList={this.props.users}\r\n                  label=\"User\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <br></br>\r\n\r\n          <FilterArea\r\n            handleFilterClick={this.handleFilterClick}\r\n            filterMode={this.state.filterMode}\r\n            dateRange={this.state.range}\r\n            handleFilterMoveClick={this.handleFilterMoveClick}\r\n          />\r\n          <SessionsList\r\n            sessionList={this.props.taskSessions}\r\n            handleEditClick={this.handleEditClick}\r\n            editable={this.loggedInUser && this.loggedInUser._id === this.state.selectedUser}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nlet variableList = {\r\n  userReducer: { users: [] },\r\n};\r\nconst getUsers = curdActions.getUsers;\r\nlet actionOptions = {\r\n  create: true,\r\n  update: true,\r\n  read: true,\r\n  delete: true,\r\n  others: { getUsers },\r\n};\r\nlet reds = [\"userReducer\"];\r\nlet DailyLoggingContainer = CRUDFunction(DailyLogging, \"taskSession\", actionOptions, variableList, reds);\r\nexport default DailyLoggingContainer;\r\n\r\nexport function CheckinOutArea(props) {\r\n  return (\r\n    <div>\r\n      <InputDateField\r\n        label=\"Check-In\"\r\n        changeHandler={(date, blurValue) => {\r\n          props.handleChange(date, \"checkin\", blurValue);\r\n        }}\r\n        value={props.form.checkin}\r\n        dayTimePickerProps={{ disableClock: true }}\r\n        style={{ display: \"inline-block\" }}\r\n      />\r\n      <TextAreaField\r\n        label=\"Task\"\r\n        changeHandler={(e, blurValue) => {\r\n          props.handleChange(e.target.value, \"task\", blurValue);\r\n        }}\r\n        value={props.form.task}\r\n        style={{ display: \"inline-block\" }}\r\n        inputStyle={{ width: \"300px\" }}\r\n      />\r\n      <SelectField\r\n        label=\"Project\"\r\n        options={projects}\r\n        value={props.form.project}\r\n        changeHandler={(e, blurValue) => {\r\n          console.log(e);\r\n          props.handleChange(e.target.value, \"project\", blurValue);\r\n        }}\r\n      />\r\n      <InputDateField\r\n        label=\"Check-Out\"\r\n        changeHandler={(date, blurValue) => {\r\n          props.handleChange(date, \"checkout\", blurValue);\r\n        }}\r\n        value={props.form.checkout}\r\n        dayTimePickerProps={{ disableClock: true }}\r\n        style={{ display: \"inline-block\", margin: \"0px 15px\" }}\r\n      />\r\n      <span\r\n        style={{\r\n          ...themeService(dailyStyles.iconStyle),\r\n          color: props.changeInForm ? pmsThemeColors.third : \"grey\",\r\n          cursor: props.changeInForm ? \"pointer\" : \"not-allowed\",\r\n        }}\r\n        onClick={(e) => {\r\n          if (props.changeInForm) props.handleActions(1);\r\n        }}\r\n        id=\"check\"\r\n        data-testid=\"create\"\r\n      >\r\n        <Icon icon={check} size={24} />\r\n      </span>\r\n      {/* <Tooltip placement=\"top\" isOpen={props.tooltipOpen} target=\"check\" toggle={props.toggle}>\r\n        Check In\r\n      </Tooltip> */}\r\n      <span\r\n        style={{ ...themeService(dailyStyles.iconStyle), color: pmsThemeColors.third }}\r\n        onClick={(e) => {\r\n          props.handleActions(2);\r\n        }}\r\n        id=\"refresh\"\r\n        data-testid=\"refresh\"\r\n      >\r\n        <Icon icon={refresh} size={24} />\r\n      </span>\r\n      {/* <Tooltip placement=\"top\" isOpen={props.tooltipOpen} target=\"refresh\" toggle={props.toggle}>\r\n        Refresh\r\n      </Tooltip> */}\r\n      <span\r\n        style={{ ...themeService(dailyStyles.iconStyle), color: \"#610016\" }}\r\n        onClick={(e) => {\r\n          props.handleActions(3);\r\n        }}\r\n        id=\"Cancel\"\r\n        data-testid=\"cancel\"\r\n      >\r\n        <Icon icon={cross} size={24} />\r\n      </span>\r\n\r\n      {/* <Tooltip placement=\"top\" isOpen={props.tooltipOpen} target=\"Cancel\" toggle={props.toggle}>\r\n        Cancel\r\n      </Tooltip> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst dailyStyles = {\r\n  iconStyle: { ps19: { padding: \"0px 5px\", cursor: \"pointer\" } },\r\n  taskAreaStyle: { ps19: { background: pmsThemeColors.fourth, margin: \"15px\", padding: \"10px\" } },\r\n  headingthird: { ps19: { textAlign: \"left\", padding: \"0px 15px\" } },\r\n};\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\StatusExport\\StatusExport.jsx",["687","688","689","690","691","692","693","694","695"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { MyButton, button } from \"../../components/Common/Forms/formsMiscItems\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { actionOptions } from \"../../reduxCURD/actionOptions\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { downloadCsv } from \"../../utils/downloadCsv\";\r\nimport { dataFormatters } from \"../../utils/dateFormatters\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { StatusContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const StatusExport = (props) => {\r\n  const status = useContext(StatusContext);\r\n\r\n  const [statusExports, setStatusExports] = useState([]);\r\n\r\n  const prevActionType = props.actionType;\r\n  const prevActionTypeRef = useRef(prevActionType);\r\n  const handleExport = (qName) => {\r\n    props.getStatusExports(`/exportsummrystatus?${qName}=true`);\r\n  };\r\n  useEffect(() => {\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"STATUSEXPORTS_READ_SUCCESS\") {\r\n      setStatusExports(props.statusExports);\r\n\r\n      setStatusExports((prevData) =>\r\n        prevData.map((obj) => ({\r\n          ...obj,\r\n          PlannedorUnplanned: \"Unplanned\",\r\n        })),\r\n      );\r\n      //loadWorkBook(props.statusExports);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType) {\r\n      prevActionTypeRef.current = props.actionType;\r\n    }\r\n  }, [props.actionType]);\r\n\r\n  //exporting the xlsx file\r\n  const loadWorkBook = (data) => {\r\n    let exportDate = \"\";\r\n    if (data && data[0]) {\r\n      exportDate = data[0].Date;\r\n\r\n      // Check if data is not empty before proceeding\r\n      if (data.length > 0) {\r\n        let ws = XLSX.utils.json_to_sheet(data);\r\n\r\n        // Check if ws is a valid object\r\n        if (ws && typeof ws === \"object\") {\r\n          ws[\"!cols\"] = [{ wch: 10 }, { wch: 15 }, { wch: 20 }, { wch: 25 }, { wch: 70 }];\r\n\r\n          const wb = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(wb, ws, \"Daily Summary\");\r\n          XLSX.writeFileXLSX(wb, `TeamStatus${exportDate}.xlsx`);\r\n        } else {\r\n          console.error(\"Invalid worksheet object\");\r\n        }\r\n      } else {\r\n        console.error(\"Data is empty\");\r\n      }\r\n    } else {\r\n      exportDate = dataFormatters.dateFormatter(new Date());\r\n      console.error(\"Data is undefined or empty\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value, id } = e.target;\r\n\r\n    let newStatusExports = [...statusExports];\r\n\r\n    newStatusExports[id] = { ...newStatusExports[id], [name]: value };\r\n\r\n    setStatusExports([...newStatusExports]);\r\n  };\r\n\r\n  const addRow = (e) => {\r\n    setStatusExports([\r\n      ...statusExports,\r\n      { Date: statusExports[0].Date, Member: \"\", Project: \"\", TaskSummary: \"\", Team: \"\", PlannedorUnplanned: \"Unplanned\" },\r\n    ]);\r\n\r\n    console.log(JSON.stringify(statusExports));\r\n  };\r\n\r\n  const deleteRow = (e) => {\r\n    let { name, value, id } = e.target;\r\n    const data = [...statusExports];\r\n    data.splice(id, 1);\r\n    setStatusExports([...data]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Row>\r\n        <Col className=\"task-area\" md={12}>\r\n          <h3> Export Summary Data </h3>\r\n          <button  onClick={(e) => handleExport(\"today\")}>Today</button >\r\n          <button  onClick={(e) => handleExport(\"yesterday\")}>Yesterday</button >\r\n        </Col>\r\n      </Row> */}\r\n\r\n      <div className=\"status-main-wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <h2> Export Summary Data </h2>\r\n          <div className=\"export-button-wrapper\">\r\n            <button className=\"create-button\" onClick={(e) => handleExport(\"today\")}>\r\n              Today\r\n            </button>\r\n            <button className=\"create-button\" onClick={(e) => handleExport(\"yesterday\")}>\r\n              Yesterday\r\n            </button>\r\n          </div>\r\n          {props.statusExports[0] && (\r\n            <button className=\"create-button\" onClick={(e) => loadWorkBook(props.statusExports)}>\r\n              Export Data\r\n            </button>\r\n          )}\r\n          {props.statusExports[0] && (\r\n            <div className=\"table-wrapper\">\r\n              <table className=\"table table-striped table-responsive\">\r\n                <thead className=\"table-head\">\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Member</th>\r\n                    <th>Project</th>\r\n                    <th>Task Summary</th>\r\n                    <th>Team </th>\r\n                    <th>Planned/UnPlanned</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {statusExports.map((status, index) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{status.Date}</td>\r\n                        <td>\r\n                          <input className=\"export-input\" value={status.Member} id={index} onChange={handleChange} name=\"Member\" />\r\n                        </td>\r\n                        <td>\r\n                          <input className=\"export-input\" value={status.Project} id={index} onChange={handleChange} name=\"Project\" />\r\n                        </td>\r\n                        <td>\r\n                          <textarea\r\n                            className=\"export-input-task\"\r\n                            value={status.TaskSummary}\r\n                            id={index}\r\n                            onChange={handleChange}\r\n                            name=\"TaskSummary\"\r\n                          ></textarea>\r\n                        </td>\r\n                        <td>\r\n                          <input className=\"export-input\" value={status.Team} id={index} onChange={handleChange} name=\"Team\" />\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            className=\"export-input\"\r\n                            value={status.PlannedorUnplanned}\r\n                            name=\"PlannedorUnplanned\"\r\n                            id={index}\r\n                            onChange={handleChange}\r\n                          >\r\n                            <option>UnPlanned</option>\r\n                            <option>Planned</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <button className=\"del-row-but\" id={index} onClick={deleteRow}>\r\n                            X\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {statusExports[0] && (\r\n        <button className=\"create-button\" onClick={addRow}>\r\n          Add Row\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst StatusExportContainer = CRUDFunction(StatusExport, \"statusExport\", actionOptions, null, null, \"taskSession\");\r\nexport default StatusExportContainer;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\Team\\Team.jsx",["696","697","698","699","700","701","702","703"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { actionOptions } from \"../../reduxCURD/actionOptions\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport CreateTeam from \"./CreateTeam\";\r\nimport \"./TeamsComponent.css\"; // Import the CSS file\r\nimport TeamMemberSelector from \"./TeamMemberSelector\";\r\nimport EditTeam from \"./EditTeam\";\r\n\r\nexport const Team = (props) => {\r\n  const currentUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n  const prevActionType = props.actionType;\r\n  const prevActionTypeRef = useRef(prevActionType);\r\n\r\n  const [teams, setTeams] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const [newTeamFormOpen, setNewTeamFormOpen] = useState(false);\r\n  const [editTeamFormOpen, setEditTeamFormOpen] = useState(false);\r\n  const [newTeam, setNewTeam] = useState({\r\n    teamLead: \"\",\r\n    team: [],\r\n    teamName: \"\",\r\n    project: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getTeams();\r\n    props.getUsers();\r\n  }, []);\r\n  useEffect(() => {\r\n    setUsers(props.users);\r\n  }, [props.users]);\r\n\r\n  useEffect(() => {\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"TEAMS_READ_SUCCESS\") {\r\n      setTeams(props.teams);\r\n    }\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"TEAM_CREATE_SUCCESS\") {\r\n      setTeams([...teams, props.team]);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"TEAM_UPDATE_SUCCESS\") {\r\n      confirmEditTeam(props.team);\r\n    }\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"TEAM_DELETE_SUCCESS\") {\r\n      handleDeleteTeam(props.team._id);\r\n    }\r\n    if (prevActionTypeRef.current !== props.actionType) {\r\n      prevActionTypeRef.current = props.actionType;\r\n    }\r\n  }, [props.actionType]);\r\n\r\n  const handleTeamLeadChange = (event) => {\r\n    if (!props.users) return;\r\n    let usersToSave = props.users.filter((u) => u.email !== event.target.value);\r\n    let selectedTeam = newTeam.team.filter((tu) => tu.email !== event.target.value);\r\n    let teamLead = props.users.find((u) => u.email === event.target.value);\r\n    setUsers(usersToSave);\r\n    setNewTeam({ ...newTeam, teamLead: { name: teamLead.name, id: teamLead._id, email: teamLead.email }, team: selectedTeam });\r\n  };\r\n\r\n  const handleUsersChange = (selectedUsers) => {\r\n    let usersToSave = props.users\r\n      .filter((u) => selectedUsers.find((su) => su === u.email))\r\n      .map((u) => ({ name: u.name, id: u._id, email: u.email }));\r\n    setNewTeam({ ...newTeam, team: usersToSave });\r\n  };\r\n\r\n  const handleTeamNameChange = (event) => {\r\n    setNewTeam({ ...newTeam, teamName: event.target.value });\r\n  };\r\n\r\n  const handleProjectChange = (event) => {\r\n    setNewTeam({ ...newTeam, project: event.target.value });\r\n  };\r\n\r\n  const handleCreateClick = () => {\r\n    setNewTeam({\r\n      teamLead: \"\",\r\n      team: [],\r\n      teamName: \"\",\r\n      project: \"\",\r\n    });\r\n    setEditTeamFormOpen(false);\r\n    setNewTeamFormOpen(true);\r\n  };\r\n  const handleCreateTeam = () => {\r\n    props.createTeam(newTeam);\r\n    // Add new team to the teams list\r\n    // setTeams([...teams, newTeam]);\r\n    // Clear the new team form\r\n    setNewTeam({\r\n      teamLead: \"\",\r\n      team: [],\r\n      teamName: \"\",\r\n      project: \"\",\r\n    });\r\n    // Close the new team form\r\n    setNewTeamFormOpen(false);\r\n  };\r\n\r\n  const confirmEditTeam = (updatedTeam) => {\r\n    const oldTeams = [...teams];\r\n\r\n    const updatedTeams = oldTeams.map((team) => (team._id === updatedTeam._id ? updatedTeam : team));\r\n\r\n    setTeams([...updatedTeams]);\r\n  };\r\n\r\n  const handleEditTeam = (team) => {\r\n    setEditTeamFormOpen(false);\r\n    setNewTeam((prevNewTeam) => ({\r\n      ...prevNewTeam,\r\n      _id: team._id,\r\n      teamLead: team.teamLead,\r\n      team: team.team,\r\n      teamName: team.teamName,\r\n      project: team.project,\r\n    }));\r\n\r\n    setNewTeamFormOpen(false);\r\n    setEditTeamFormOpen(true);\r\n  };\r\n\r\n  const handleConfirmEdit = () => {\r\n    props.updateTeam(newTeam, newTeam._id);\r\n\r\n    setNewTeam({\r\n      teamLead: \"\",\r\n      team: [],\r\n      teamName: \"\",\r\n      project: \"\",\r\n    });\r\n\r\n    setEditTeamFormOpen(false);\r\n  };\r\n\r\n  const handleDeleteTeam = (teamId) => {\r\n    // Remove the team at the specified index from the teams list\r\n    const cpyTeams = [...teams];\r\n    let updatedTeams = cpyTeams.filter((t) => t._id !== teamId);\r\n    setTeams(updatedTeams);\r\n  };\r\n\r\n  const deleteTeam = (teamId) => {\r\n    props.deleteTeam(teamId);\r\n  };\r\n  return (\r\n    <div className=\"status-main-wrapper\">\r\n      <div className=\"main-wrapper\">\r\n        <h2>Teams</h2>\r\n        {props.teams.length !== 0 && (\r\n          <div className=\"table-wrapper\">\r\n            <table className=\"table table-striped table-responsive\">\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                    Team Name\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                    Team Lead\r\n                  </th>\r\n\r\n                  <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {props.teams.map((team, index) => (\r\n                  <tr style={{ height: \"40px\" }}>\r\n                    <td>{team.teamName} </td>\r\n                    <td>{team.teamLead && team.teamLead.name}</td>\r\n                    <td>\r\n                      {\r\n                        <div className=\"action-class\">\r\n                          <span\r\n                            data-testid=\"Delete\"\r\n                            className=\"action-item\"\r\n                            onClick={(e) => {\r\n                              console.log(\"Delete\");\r\n                              deleteTeam({ _id: team._id });\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </span>\r\n\r\n                          <span\r\n                            className=\"action-item\"\r\n                            onClick={(e) => {\r\n                              handleEditTeam(team);\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </span>\r\n                        </div>\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n        <div className=\"teams-container\">\r\n          {/* Create new team form */}\r\n          {newTeamFormOpen ? (\r\n            <CreateTeam\r\n              newTeam={newTeam}\r\n              handleTeamLeadChange={handleTeamLeadChange}\r\n              users={props.users}\r\n              handleUsersChange={handleUsersChange}\r\n              handleCreateTeam={handleCreateTeam}\r\n              handleProjectChange={handleProjectChange}\r\n              handleTeamNameChange={handleTeamNameChange}\r\n              projects={projects}\r\n              setNewTeamFormOpen={setNewTeamFormOpen}\r\n            />\r\n          ) : (\r\n            <button className=\"create-button\" onClick={handleCreateClick}>\r\n              Create New Team\r\n            </button>\r\n          )}\r\n\r\n          {editTeamFormOpen && (\r\n            <EditTeam\r\n              newTeam={newTeam}\r\n              handleTeamLeadChange={handleTeamLeadChange}\r\n              users={props.users}\r\n              handleUsersChange={handleUsersChange}\r\n              handleConfirmEdit={handleConfirmEdit}\r\n              handleProjectChange={handleProjectChange}\r\n              handleTeamNameChange={handleTeamNameChange}\r\n              projects={projects}\r\n              setEditTeamFormOpen={setEditTeamFormOpen}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nlet variableList = {\r\n  userReducer: {\r\n    users: [],\r\n  },\r\n};\r\nactionOptions.others.getUsers = curdActions.getUsers;\r\nconst TeamContainer = CRUDFunction(Team, \"team\", actionOptions, variableList, [\"userReducer\"]);\r\nexport default TeamContainer;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\SessionExport\\SessionExport.jsx",["704","705","706","707","708","709","710","711","712","713"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { MyButton, button } from \"../../components/Common/Forms/formsMiscItems\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { UserSelectArea } from \"../../components/DailyLogging/FilterMethods/UserSelectArea\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { downloadCsv } from \"../../utils/downloadCsv\";\r\nimport { dataFormatters } from \"../../utils/dateFormatters\";\r\nimport * as XLSX from \"xlsx\";\r\nimport FilterArea from \"../../components/DailyLogging/FilterMethods/FilterArea\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { SelectField } from \"../../components/FormInputs/InputFields\";\r\nimport { isLoggedOn } from \"../../utils/util\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\nimport { loggedInUser } from \"../../utils/util\";\r\nconst filterValues = {\r\n  Day: { from: moment().startOf(\"d\"), to: moment().endOf(\"d\") },\r\n  Week: { from: moment().startOf(\"w\"), to: moment().endOf(\"w\") },\r\n  Month: { from: moment().startOf(\"month\"), to: moment().endOf(\"month\") },\r\n};\r\n\r\nconst SessionExport = (props) => {\r\n  const [filterMode, setFilterMode] = useState(\"Week\");\r\n  const [range, setRange] = useState(filterValues[\"Week\"]);\r\n  //const [sessions, setSession] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState([]);\r\n  const [filterBy, setFilterBy] = useState(\"Team\");\r\n\r\n  const prevActionType = props.actionType;\r\n  const prevActionTypeRef = useRef(prevActionType);\r\n\r\n  useEffect(() => {\r\n    props.getTeams();\r\n    props.getUsers();\r\n    const loggedUser = isJSON(loggedInUser());\r\n    // fetchFromServer(range);\r\n    if (loggedUser) {\r\n      setSelectedUser(loggedUser._id);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"SESSIONEXPORTS_READ_SUCCESS\") {\r\n      // setSessionExports(props.SessionExports)\r\n      // setSessionExports(prevData => (\r\n      //   prevData.map(obj => ({\r\n      //     ...obj,\r\n      //     PlannedorUnplanned: \"Unplanned\"\r\n      //   }))\r\n      // ));\r\n      loadWorkBook(props.SessionExports);\r\n      //setSession(props.SessionExports);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType) {\r\n      prevActionTypeRef.current = props.actionType;\r\n    }\r\n  }, [props.actionType]);\r\n\r\n  function handleExportClick() {\r\n    fetchFromServer(range, filterBy, selectedUser);\r\n  }\r\n  //exporting the xlsx file\r\n  const loadWorkBook = (data) => {\r\n    let exportDate = \"\";\r\n    exportDate = dataFormatters.dateFormatter(new Date());\r\n    const formattedFromDate = range.from.format(\"MMMM D, YYYY\");\r\n    const formattedToDate = range.to.format(\"MMMM D, YYYY\");\r\n    let header = { Date: `${formattedFromDate} to ${formattedToDate}`, \"Summary Type\": filterBy };\r\n\r\n    header[filterBy === \"Team\" ? \"Team Lead's Name\" : \"User's Name\"] = props.users.find((u) => u._id === selectedUser).name;\r\n\r\n    let ws = XLSX.utils.json_to_sheet([header]);\r\n    XLSX.utils.sheet_add_json(ws, data, { origin: -1 });\r\n\r\n    ws[\"!cols\"] = [{ wch: 40 }, { wch: 35 }, { wch: 35 }, { wch: 30 }, { wch: 70 }];\r\n\r\n    const wb = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Summary\");\r\n    XLSX.writeFileXLSX(wb, `TeamStatus${exportDate}.xlsx`);\r\n  };\r\n\r\n  function handleFilterMoveClick(direction) {\r\n    let dateRange = { ...range };\r\n    let dateLogic = {\r\n      Day: \"d\",\r\n      Week: \"w\",\r\n      Month: \"month\",\r\n    };\r\n    if (direction == 1) {\r\n      // right\r\n      dateRange.from.add(1, dateLogic[filterMode]);\r\n      dateRange.to.add(1, dateLogic[filterMode]);\r\n    } else {\r\n      // left\r\n      dateRange.from.subtract(1, dateLogic[filterMode]);\r\n      dateRange.to.subtract(1, dateLogic[filterMode]);\r\n    }\r\n    //fetchFromServer(dateRange);\r\n\r\n    setRange(dateRange);\r\n  }\r\n  function handleFilterClick(filter) {\r\n    let dateRange = filterValues[filter];\r\n    //fetchFromServer(dateRange);\r\n\r\n    setFilterMode(filter);\r\n    setRange(dateRange);\r\n  }\r\n\r\n  function handleFilterByChange(filter) {\r\n    //fetchFromServer(dateRange);\r\n\r\n    setFilterBy(filter);\r\n  }\r\n\r\n  function convertToTeam(users, teams) {\r\n    let usersToReturn = [];\r\n    teams.forEach((t) => {\r\n      let found = users.find((u) => u.email === t.teamLead.email);\r\n      if (found) {\r\n        usersToReturn.push(found);\r\n      }\r\n    });\r\n\r\n    return usersToReturn;\r\n  }\r\n\r\n  function fetchFromServer(Range, FilterBy, SelectedUser) {\r\n    getSessions(Range ? Range : range, FilterBy ? FilterBy : filterBy, SelectedUser ? SelectedUser : selectedUser, props.getSessionExports);\r\n  }\r\n\r\n  function getSessions(range, FilterBy, SelectedUser, method) {\r\n    let query = \"\";\r\n\r\n    if (range) {\r\n      var jsonArray = encodeURIComponent(JSON.stringify(range));\r\n      query = query + \"?range=\" + jsonArray;\r\n    }\r\n\r\n    if (FilterBy && range) {\r\n      query = query + \"&filterBy=\" + FilterBy;\r\n    }\r\n\r\n    if (FilterBy && range && SelectedUser) {\r\n      query = query + \"&selectedUser=\" + SelectedUser;\r\n    }\r\n    method(`/exportsessionstatus/${query}`);\r\n  }\r\n\r\n  function handleUserSelect(user_id) {\r\n    setSelectedUser(user_id);\r\n\r\n    //this.fetchFromServer(user_id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"status-main-wrapper\">\r\n      <div className=\"form-wrapper\">\r\n        <h2> Export Session Summary Data </h2>\r\n\r\n        <button className=\"create-button\" onClick={handleExportClick}>\r\n          Export Data\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"form-wrapper\">\r\n        <h2> Filter Area</h2>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div style={{ width: \"20%\" }}>\r\n            <UserSelectArea\r\n              className=\"form-select\"\r\n              onUserSelectChange={handleUserSelect}\r\n              selectedUser={selectedUser}\r\n              customStyle={{ width: \"200px\" }}\r\n              userList={filterBy === \"Team\" ? convertToTeam(props.users, props.teams) : props.users}\r\n              label={filterBy === \"Team\" ? \"Team Lead\" : filterBy}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              width: \"60%\",\r\n            }}\r\n          >\r\n            <select value={filterBy} onChange={(e) => handleFilterByChange(e.target.value)} className=\"form-select-session\">\r\n              <option value={\"Team\"}>Filter By Team</option>;<option value={\"User\"}>Filter By User</option>;\r\n            </select>\r\n          </div>\r\n\r\n          <div style={{ width: \"20%\" }}>\r\n            <FilterArea\r\n              handleFilterClick={handleFilterClick}\r\n              filterMode={filterMode}\r\n              dateRange={range}\r\n              customStyle={{ textAlign: \"right\" }}\r\n              handleFilterMoveClick={handleFilterMoveClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet variableList = {\r\n  userReducer: { users: [] },\r\n  teamReducer: { teams: [] },\r\n};\r\nconst getUsers = curdActions.getUsers;\r\nconst getTeams = curdActions.getTeams;\r\nlet actionOptions = {\r\n  create: true,\r\n  update: true,\r\n  read: true,\r\n  delete: true,\r\n  others: { getUsers, getTeams },\r\n};\r\nlet reds = [\"userReducer\", \"teamReducer\"];\r\n\r\nconst SessionExportContainer = CRUDFunction(SessionExport, \"SessionExport\", actionOptions, variableList, reds, \"taskSession\");\r\nexport default SessionExportContainer;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Login\\LoginPage.js",["714","715","716","717","718","719"],"import React from \"react\";\r\nimport LoginView from \"./LoginView.js\";\r\nimport { Row } from \"reactstrap\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as types from \"../../reduxRelated/ActionTypes/actionTypes.js\";\r\nimport { languageService } from \"../../Language/language.service.js\";\r\n//import PropTypes from 'prop-types';\r\nimport { themeService } from \"theme/service/activeTheme.service\";\r\nimport { CommonModalStyle, ButtonStyle } from \"style/basic/commonControls\";\r\nimport { retroColors } from \"style/basic/basicColors.js\";\r\nimport { pmsThemeColors } from \"../../style/basic/basicColors\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      captchaResponse: \"\",\r\n      captchaLoaded: false,\r\n    };\r\n    this.InputChangeHandler = this.InputChangeHandler.bind(this);\r\n    this.SubmitButtonHandler = this.SubmitButtonHandler.bind(this);\r\n    this.forgotPasswordHandle = this.forgotPasswordHandle.bind(this);\r\n    this.showToastInfo = this.showToastInfo.bind(this);\r\n    this.showToastError = this.showToastError.bind(this);\r\n    this._handleKeyPress = this._handleKeyPress.bind(this);\r\n    this.onCaptchaExpired = this.onCaptchaExpired.bind(this);\r\n    this.onCaptchaLoad = this.onCaptchaLoad.bind(this);\r\n    this.onCaptchaVerification = this.onCaptchaVerification.bind(this);\r\n  }\r\n  onCaptchaVerification(response) {\r\n    this.setState({ captchaResponse: response });\r\n  }\r\n  onCaptchaExpired() {\r\n    this.setState({ captchaResponse: \"\" });\r\n  }\r\n  onCaptchaLoad() {\r\n    this.setState({ captchaLoaded: true });\r\n  }\r\n  InputChangeHandler(e) {\r\n    let typeOfInput = e.target.name;\r\n    let inputValueChanged = e.target.value;\r\n    let user = this.state.user;\r\n    let CopyOfuser = { ...user };\r\n\r\n    if (typeOfInput === \"email\") {\r\n      CopyOfuser.email = inputValueChanged;\r\n      this.setState({\r\n        user: CopyOfuser,\r\n      });\r\n    } else if (typeOfInput === \"password\") {\r\n      CopyOfuser.password = inputValueChanged;\r\n      this.setState({\r\n        user: CopyOfuser,\r\n      });\r\n    }\r\n  }\r\n\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.SubmitButtonHandler();\r\n    }\r\n  };\r\n  SubmitButtonHandler() {\r\n    //  console.log(\"Submit Button hit\");\r\n    //  this.showToastInfo(\"Submit Button Clicked!\");\r\n    /*  const  {captchaResponse,captchaLoaded} = this.state;\r\n      if(!captchaLoaded){\r\n          this.showToastError(\"reCAPTCHA Verification\",new Error(\"You need to verify reCAPTCHA!\"));\r\n          return ;\r\n      }\r\n      if(captchaResponse===\"\"){\r\n        this.showToastError(\"reCAPTCHA Verification\",new Error(\"Please click on reCAPTCHA! 'I'm not a robot\"));\r\n        return ;\r\n      }*/\r\n    let user = this.state.user;\r\n    if (this.state.user.email !== \"\" && this.state.user.password !== \"\") {\r\n      //  console.log(user);\r\n      this.props.onLoginClick(user);\r\n    }\r\n  }\r\n\r\n  forgotPasswordHandle() {\r\n    this.props.history.push(\"/forgotPassword\");\r\n  }\r\n\r\n  showToastInfo(message) {\r\n    toast.warn(message, {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n    });\r\n  }\r\n\r\n  showToastError(message, error) {\r\n    toast.error(message + \": \" + error, {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let loggedInUser = localStorage.getItem(\"loggedInUser\");\r\n    if (loggedInUser) {\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"loggedInUser\");\r\n      localStorage.removeItem(\"permissions\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.actionType !== nextProps.actionType && nextProps.actionType === types.LOGIN_SUCCESS) {\r\n      if (localStorage.getItem(\"loggedInUser\")) {\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        localStorage.removeItem(\"access_token\");\r\n        localStorage.removeItem(\"loggedInUser\");\r\n        localStorage.removeItem(\"permissions\");\r\n        this.showToastError(languageService(\"Retry\"), languageService(\"Problem connecting to server\"));\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    if (this.props.actionType !== nextProps.actionType && nextProps.actionType === types.LOGIN_FAILURE) {\r\n      // console.log(nextProps.errorMessage)\r\n      // alert('sdfsdfsdfsdfsdfsdf')\r\n      if (nextProps.errorMessage.status) {\r\n        this.showToastError(languageService(\"Error\"), languageService(nextProps.errorMessage.message));\r\n      } else {\r\n        this.showToastError(languageService(\"Retry\"), languageService(\"Server is not accessible, Please retry in few seconds...\"));\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App-container\">\r\n        <div\r\n          className=\"App-login\"\r\n\r\n        >\r\n          <Row>\r\n            <LoginView\r\n              isFetching={this.props.isFetching}\r\n              onInputChange={this.InputChangeHandler}\r\n              submitHandle={this.SubmitButtonHandler}\r\n              inputValue={this.state.user}\r\n              onKeyPress={this._handleKeyPress}\r\n              clickForgotPasswordHandle={this.forgotPasswordHandle}\r\n              recaptchaCallbacks={{\r\n                verifyCallback: this.onCaptchaVerification,\r\n                onloadCallback: this.onCaptchaLoad,\r\n                expiredCallback: this.onCaptchaExpired,\r\n              }}\r\n            />\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\container.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Language\\DynamicLanguage.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\actions\\diagnosticsActions.js",["720"],"import * as types from \"../ActionTypes/actionTypes.js\";\r\nimport { CALL_API } from \"../middleware/api\";\r\n// Not IS USE\r\nexport function getDiagnosticsList(ts) {\r\n  const options = { headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" }, method: \"GET\" };\r\n  let endpoint = \"list/pull/\";\r\n  let actions = [types.DIAGNOSTICS_LISTS_GET_REQUEST, types.DIAGNOSTICS_LISTS_GET_SUCCESS, types.DIAGNOSTICS_LISTS_GET_FAILURE];\r\n  if (ts) {\r\n    endpoint = \"list/pull/\" + ts;\r\n    actions = [types.DIAGNOSTICS_LIST_GET_REQUEST, types.DIAGNOSTICS_LIST_GET_SUCCESS, types.DIAGNOSTICS_LIST_GET_FAILURE];\r\n  }\r\n  return {\r\n    [CALL_API]: {\r\n      endpoint: endpoint,\r\n      authenticated: true,\r\n      config: options,\r\n      types: actions,\r\n    },\r\n  };\r\n}\r\n\r\nexport function getAppMockupsTypes(listName) {\r\n  const options = { headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" }, method: \"GET\" };\r\n  let endpoint = \"applicationlookups/getlist/\" + listName;\r\n  let actions = [\"ERROR : NO CORRECT LIST ACTION\", \"ERROR : NO CORRECT LIST ACTION\", \"ERROR : NO CORRECT LIST ACTION\"];\r\n  let subdivisionActions = [types.SUBDIVISION_LIST_GET_REQUEST, types.SUBDIVISION_LIST_GET_SUCCESS, types.SUBDIVISION_LIST_GET_FAILURE];\r\n  let assetTypeActions = [types.ASSETTYPE_LIST_GET_REQUEST, types.ASSETTYPE_LIST_GET_SUCCESS, types.ASSETTYPE_LIST_GET_FAILURE];\r\n  let classListActions = [types.CLASS_LIST_GET_REQUEST, types.CLASS_LIST_GET_SUCCESS, types.CLASS_LIST_GET_FAILURE];\r\n  let trackTypeListActions = [types.TRACKTYPE_LIST_GET_REQUEST, types.TRACKTYPE_LIST_GET_SUCCESS, types.TRACKTYPE_LIST_GET_FAILURE];\r\n  let appSettingsListActions = [types.GET_APPSETTINS_DATA_REQUEST, types.GET_APPSETTINS_DATA_SUCCESS, types.GET_APPSETTINS_DATA_FAILURE];\r\n  let testAppFormsActions = [types.GET_TESTS_APPFORMS_REQUEST, types.GET_TESTS_APPFORMS_SUCCESS, types.GET_TESTS_APPFORMS_FAILURE];\r\n\r\n  let dynamicLanguageListActions = [\r\n    types.DYNAMIC_LANGUAGE_GET_REQUEST,\r\n    types.DYNAMIC_LANGUAGE_GET_SUCCESS,\r\n    types.DYNAMIC_LANGUAGE_GET_FAILURE,\r\n  ];\r\n  let globalUserLoggingActions = [\r\n    types.GLOBAL_USER_LOGGING_GET_REQUEST,\r\n    types.GLOBAL_USER_LOGGING_GET_SUCCESS,\r\n    types.GLOBAL_USER_LOGGING_GET_FAILURE,\r\n  ];\r\n  switch (listName) {\r\n    case \"Subdivision\":\r\n      actions = subdivisionActions;\r\n      break;\r\n    case \"assetType\":\r\n      actions = assetTypeActions;\r\n      break;\r\n    case \"Class\":\r\n      actions = classListActions;\r\n      break;\r\n    case \"TrackType\":\r\n      actions = trackTypeListActions;\r\n      break;\r\n    case \"DynamicLanguage_en\":\r\n      actions = dynamicLanguageListActions;\r\n      break;\r\n    case \"DynamicLanguage_es\":\r\n      actions = dynamicLanguageListActions;\r\n      break;\r\n    case \"DynamicLanguage_fr\":\r\n      actions = dynamicLanguageListActions;\r\n      break;\r\n    case \"GlobalUserLocLogging\":\r\n      actions = globalUserLoggingActions;\r\n      break;\r\n    case \"AppSettings\":\r\n      actions = appSettingsListActions;\r\n      break;\r\n    case \"assetTypeTests\":\r\n      actions = testAppFormsActions;\r\n    default:\r\n      actions = [\"ERROR : NO CORRECT LIST ACTION\", \"ERROR : NO CORRECT LIST ACTION\", \"ERROR : NO CORRECT LIST ACTION\"];\r\n      break;\r\n  }\r\n\r\n  return {\r\n    [CALL_API]: {\r\n      endpoint: endpoint,\r\n      authenticated: true,\r\n      config: options,\r\n      types: actions,\r\n    },\r\n  };\r\n}\r\n\r\nexport function getTestsAppForm(listName) {\r\n  const options = { headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" }, method: \"GET\" };\r\n  let endpoint = \"applicationlookups/\" + listName;\r\n  let testAppFormsActions = [types.GET_TESTS_APPFORMS_REQUEST, types.GET_TESTS_APPFORMS_SUCCESS, types.GET_TESTS_APPFORMS_FAILURE];\r\n\r\n  return {\r\n    [CALL_API]: {\r\n      endpoint: endpoint,\r\n      authenticated: true,\r\n      config: options,\r\n      types: testAppFormsActions,\r\n    },\r\n  };\r\n}\r\nexport function updateTestsAppForm(form, toRemove) {\r\n  const options = {\r\n    headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" },\r\n    method: \"PUT\",\r\n    body: JSON.stringify(form),\r\n  };\r\n  let endpoint = \"applicationlookups/\" + form._id;\r\n\r\n  let testAppFormsActions = toRemove\r\n    ? [types.DELETE_TESTS_APPFORM_REQUEST, types.DELETE_TESTS_APPFORM_SUCCESS, types.DELETE_TESTS_APPFORM_FAILURE]\r\n    : [types.UPDATE_TESTS_APPFORM_REQUEST, types.UPDATE_TESTS_APPFORM_SUCCESS, types.UPDATE_TESTS_APPFORM_FAILURE];\r\n\r\n  return {\r\n    [CALL_API]: {\r\n      endpoint: endpoint,\r\n      authenticated: true,\r\n      config: options,\r\n      types: testAppFormsActions,\r\n    },\r\n  };\r\n}\r\n\r\nexport function setGeoLocationAppMockupsType(geoLoc) {\r\n  const options = {\r\n    headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" },\r\n    method: \"PUT\",\r\n    body: JSON.stringify(geoLoc),\r\n  };\r\n  let actions = [\r\n    types.SET_GEOLOGGING_GLOBAL_SETTING_REQUEST,\r\n    types.SET_GEOLOGGING_GLOBAL_SETTING_SUCCESS,\r\n    types.SET_GEOLOGGING_GLOBAL_SETTING_FAILURE,\r\n  ];\r\n\r\n  return {\r\n    [CALL_API]: {\r\n      endpoint: \"applicationlookups/globalGeoLogging\",\r\n      authenticated: true,\r\n      config: options,\r\n      types: actions,\r\n    },\r\n  };\r\n}\r\n\r\nexport function setNewDynamicLangWord(langAdd) {\r\n  //console.log(langAdd)\r\n  const options = {\r\n    headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" },\r\n    method: \"POST\",\r\n    body: JSON.stringify(langAdd),\r\n  };\r\n  let actions = [types.ADD_LANGUAGE_CHANGE_REQUEST, types.ADD_LANGUAGE_CHANGE_SUCCESS, types.ADD_LANGUAGE_CHANGE_FAILURE];\r\n\r\n  return {\r\n    [CALL_API]: {\r\n      endpoint: \"applicationlookups/language\",\r\n      authenticated: true,\r\n      config: options,\r\n      types: actions,\r\n    },\r\n  };\r\n}\r\n\r\nexport function setEditDynamicLangWord(langEdit) {\r\n  const options = {\r\n    headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" },\r\n    method: \"PUT\",\r\n    body: JSON.stringify(langEdit),\r\n  };\r\n  let actions = [types.EDIT_LANGUAGE_CHANGE_REQUEST, types.EDIT_LANGUAGE_CHANGE_SUCCESS, types.EDIT_LANGUAGE_CHANGE_FAILURE];\r\n\r\n  return {\r\n    [CALL_API]: {\r\n      endpoint: \"applicationlookups/languageedit\",\r\n      authenticated: true,\r\n      config: options,\r\n      types: actions,\r\n    },\r\n  };\r\n}\r\n\r\nexport function removeDynamicLangWord(langDelete) {\r\n  const options = {\r\n    headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" },\r\n    method: \"DELETE\",\r\n    body: JSON.stringify(langDelete),\r\n  };\r\n  let actions = [types.DELETE_LANGUAGE_CHANGE_REQUEST, types.DELETE_LANGUAGE_CHANGE_SUCCESS, types.DELETE_LANGUAGE_CHANGE_FAILURE];\r\n\r\n  return {\r\n    [CALL_API]: {\r\n      endpoint: \"applicationlookups/languagedelete\",\r\n      authenticated: true,\r\n      config: options,\r\n      types: actions,\r\n    },\r\n  };\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Login\\Logout.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Language\\Dictionery.js",["721"],"import React from \"react\";\r\n\r\nexport const words = {\r\n  Welcome: { en: \"Welcome\", es: \"Bienvenidoc\", fr: \"Bienvenue\" },\r\n  Dashboard: { en: \"Dashboard\", es: \"Tablero\", fr: \"Tableau de bord\" },\r\n  Issues: { en: \"Issues\", es: \"Cuestiones\", fr: \"Problèmes\" },\r\n  Info: { en: \"Info\", es: \"Información\", fr: \"Info\" },\r\n  Priority: { en: \"Priority\", es: \"Prioridad\", fr: \"Priorité\" },\r\n  High: { en: \"High\", es: \"Alto\", fr: \"Haute\" },\r\n  Site: { en: \"Site\", es: \"Sitio\", fr: \"Site\" },\r\n  Track: { en: \"Track\", es: \"Pista\", fr: \"Piste\" },\r\n  User: { en: \"User\", es: \"Usuario\", fr: \"Utilisateur\" },\r\n  Marked: { en: \"Marked\", es: \"Marcado\", fr: \"Marqué\" },\r\n  Resolved: { en: \"Resolved\", es: \"Resuelto\", fr: \"Résolu\" },\r\n  Defect: { en: \"Defect\", es: \"Defecto\", fr: \"Défaut\" },\r\n  Inspections: { en: \"Inspections\", es: \"Inspecciones\", fr: \"Inspections\" },\r\n  Not: { en: \"Not\", es: \"No\", fr: \"ne pas\" },\r\n  Started: { en: \"Started\", es: \"Empezado\", fr: \"Commencé\" },\r\n  Today: { en: \"Today\", es: \"Hoy\", fr: \"Aujourd'hui\" },\r\n  Logout: { en: \"Logout\", es: \"Cerrar sesión\", fr: \"Se déconnecter\" },\r\n  Finished: { en: \"Finished\", es: \"Terminado\", fr: \"Fini\" },\r\n  In: { en: \"In\", es: \"En\", fr: \"Dans\" },\r\n  progress: { en: \"progress\", es: \"Progreso\", fr: \"le progrès\" },\r\n  Start: { en: \"Start\", es: \"comienzo\", fr: \"Début\" },\r\n  Time: { en: \"Time\", es: \"Hora\", fr: \"Temps\" },\r\n  Finish: { en: \"Finish\", es: \"Terminar\", fr: \"terminer\" },\r\n  Status: { en: \"Status\", es: \"Estado\", fr: \"Statut\" },\r\n  Issue: { en: \"Issue\", es: \"Problema\", fr: \"Problème\" },\r\n  Reported: { en: \"Reported\", es: \"Informado\", fr: \"Signalé\" },\r\n  Low: { en: \"Low\", es: \"Bajo\", fr: \"Faible\" },\r\n  Medium: { en: \"Medium\", es: \"Medio\", fr: \"Moyen\" },\r\n  On: { en: \"On\", es: \"en\", fr: \"Sur\" },\r\n  Rail: { en: \"Rail\", es: \"Vía o riel\", fr: \"Rail\" },\r\n  Ties: { en: \"Ties\", es: \"durmiente\", fr: \"Liens\" },\r\n  Switch: { en: \"Switch\", es: \"Cambiar\", fr: \"Aiguillage\" },\r\n  Line: { en: \"Line\", es: \"Línea\", fr: \"Ligne\" },\r\n  Stone: { en: \"Stone\", es: \"Piedra\", fr: \"Calcul\" },\r\n  Xing: { en: \"Xing\", es: \"crucero\", fr: \"Xing\" },\r\n  Platform: { en: \"Platform\", es: \"Plataforma\", fr: \"Plate-forme\" },\r\n  Speed: { en: \"Speed\", es: \"Velocidad\", fr: \"La vitesse\" },\r\n  Change: { en: \"Change\", es: \"Cambio\", fr: \"Changement\" },\r\n  Gas: { en: \"Gas\", es: \"Gas\", fr: \"Gaz\" },\r\n  Pipeline: { en: \"Pipeline\", es: \"Tubería\", fr: \"Pipeline\" },\r\n  Norristone: { en: \"Norristone\", es: \"Norristone\", fr: \"Norristone\" },\r\n  Station: { en: \"Station\", es: \"Estación\", fr: \"Station\" },\r\n  Assets: { en: \"Assets\", es: \"Bienes\", fr: \"Les atouts\" },\r\n  id: { en: \"id\", es: \"identificacion\", fr: \"id\" },\r\n  Actions: { en: \"Actions\", es: \"Acciones\", fr: \"Actions\" },\r\n  trackType: { en: \"trackType\", es: \"tipo de pista\", fr: \"trackType\" },\r\n  class: { en: \"class\", es: \"clase\", fr: \"classe\" },\r\n  trackNumber: { en: \"trackNumber\", es: \"número de pista\", fr: \"numéro de piste\" },\r\n  Company: { en: \"Company\", es: \"Empresa\", fr: \"Compagnie\" },\r\n  Contact: { en: \"Contact\", es: \"Contacto\", fr: \"Contact\" },\r\n  Templates: { en: \"Templates\", es: \"Plantilla\", fr: \"Modèles\" },\r\n  Zone: { en: \"Zone\", es: \"zona\", fr: \"Zone\" },\r\n  Foul: { en: \"Foul\", es: \"Ocupar\", fr: \"Faute\" },\r\n  Inspector: { en: \"Inspector\", es: \"Inspector\", fr: \"Inspecteur\" },\r\n  Total: { en: \"Total\", es: \"Total\", fr: \"Total\" },\r\n  Watchmen: { en: \"Watchmen\", es: \"Vigilantes\", fr: \"Gardiens\" },\r\n  Last: { en: \"Last\", es: \"Última\", fr: \"Dernier\" },\r\n  Next: { en: \"Next\", es: \"siguiente\", fr: \"Suivant\" },\r\n  Special: { en: \"Special\", es: \"especial\", fr: \"Spécial\" },\r\n  Generic: { en: \"Generic\", es: \"Genérico\", fr: \"Générique\" },\r\n  \"Staff List\": { en: \"Staff List\", es: \"lista de personal\", fr: \"Liste du personnel\" },\r\n  Setup: { en: \"Setup\", es: \"Preparar\", fr: \"Installer\" },\r\n  password: { en: \"password\", es: \"Contraseña\", fr: \"mot de passe\" },\r\n  Group: { en: \"Group\", es: \"Grupo\", fr: \"Groupe\" },\r\n  Departments: { en: \"Departments\", es: \"Departamentos\", fr: \"Départements\" },\r\n  Subdivision: { en: \"Subdivision\", es: \"Subdivisión\", fr: \"Subdivision\" },\r\n  Submit: { en: \"Submit\", es: \"Enviar\", fr: \"Soumettre\" },\r\n  Email: { en: \"Email\", es: \"Email\", fr: \"Email\" },\r\n  email: { en: \"Email\", es: \"Email\", fr: \"Email\" },\r\n  Maintenance: { en: \"Maintenance\", es: \"Mantenimiento\", fr: \"Entretien\" },\r\n  Work: { en: \"Work\", es: \"trabajo\", fr: \"Travail\" },\r\n  Order: { en: \"Order\", es: \"orden\", fr: \"Commande\" },\r\n  Due: { en: \"Due\", es: \"Debido\", fr: \"Dû\" },\r\n  Created: { en: \"Created\", es: \"Creado\", fr: \"Créé\" },\r\n  Plan: { en: \"Plan\", es: \"plan\", fr: \"Plan\" },\r\n  Execution: { en: \"Execution\", es: \"Ejecución\", fr: \"Exécution\" },\r\n  Action: { en: \"Action\", es: \"Accion\", fr: \"Action\" },\r\n\r\n  Summary: { en: \"Summary\", es: \"Resumen\", fr: \"Résumé\" },\r\n  Heading: { en: \"Heading\", es: \"encabezado\", fr: \"Titre\" },\r\n  Planned: { en: \" Planned\", es: \"planeado\", fr: \" Prévu\" },\r\n  Pending: { en: \"Pending\", es: \"Cerrado\", fr: \"En attente\" },\r\n  Closed: { en: \"Closed\", es: \"Cerrado\", fr: \"Fermé\" },\r\n  Name: { en: \"Name\", es: \"Nombre\", fr: \"Nom\" },\r\n  \"Issues Summary\": { en: \"Issues Summary\", es: \"Resumen de problemas\", fr: \"Résumé des problèmes\" },\r\n  \"Inspections Summary\": { en: \"Inspections Summary\", es: \"Resumen de inspecciones\", fr: \"Résumé des inspections\" },\r\n  \"Issues Reported\": { en: \"Issues Reported\", es: \"Problemas reportados\", fr: \"Problèmes signalés\" },\r\n  \"Total Issues\": { en: \"Total Issues\", es: \"Total de problemas\", fr: \"Nombre total de problèmes\" },\r\n  \"Low Priority\": { en: \"Low Priority\", es: \"Baja prioridad\", fr: \"Priorité basse\" },\r\n  \"Medium Priority\": { en: \"Medium Priority\", es: \"Prioridad media\", fr: \"Priorité moyenne\" },\r\n  \"High Priority\": { en: \"High Priority\", es: \"Alta prioridad\", fr: \"Haute priorité\" },\r\n  \"Marked On Site\": { en: \"Marked On Site\", es: \"Marcado en el sitio\", fr: \"Marqué sur place\" },\r\n  \"Total Inspections\": { en: \"Total Inspections\", es: \"Total inspecciones\", fr: \"Inspections totales\" },\r\n  \"Not Started\": { en: \"Not Started\", es: \"No empezado\", fr: \"Pas commencé\" },\r\n  \"Inspection Run Name\": { en: \"Inspection Run Name\", es: \"Nombre de inspección\", fr: \"Nom du cycle d'inspection\" },\r\n  \"Start Time\": { en: \"Start Time\", es: \"Hora de inicio\", fr: \"Heure de début\" },\r\n  \"Finish Time\": { en: \"Finish Time\", es: \"Hora de terminó\", fr: \"Heure de fin\" },\r\n  \"In Progress\": { en: \"In Progress\", es: \"En progreso\", fr: \"En cours\" },\r\n  \"Track ID\": { en: \"Track ID\", es: \"Número de vía\", fr: \"ID de piste\" },\r\n  Audio: { en: \"Audio\", es: \"Audio\", fr: \"l'audio\" },\r\n  Description: { en: \"Description\", es: \"Descripción\", fr: \"Description\" },\r\n  \"Maintenance Summary\": { en: \"Maintenance Summary\", es: \"Resumen de mantenimiento\", fr: \"Résumé de la maintenance\" },\r\n  \"Maintenance Request\": { en: \"Maintenance Request\", es: \"Peticion de mantenimiento\", fr: \"Demande d'entretien\" },\r\n  \"Not Planned\": { en: \"Not Planned\", es: \"No estaba planeado\", fr: \"Pas prévu\" },\r\n  \"Date Created\": { en: \"Date Created\", es: \"Fecha de creación\", fr: \"date créée\" },\r\n  \"Plan Date\": { en: \"Plan Date\", es: \"Fecha del plan\", fr: \"Date du plan\" },\r\n  \"Execution Date\": { en: \"Execution Date\", es: \"Fecha ejecución\", fr: \"Date d'éxecution\" },\r\n  \"Date Closed\": { en: \"Date Closed\", es: \"Fecha de cierre\", fr: \"Date de fermeture\" },\r\n  \"Asset Id\": { en: \"Asset Id\", es: \"Identificación del activo\", fr: \"ID d'élément\" },\r\n  \"Fix Type\": { en: \"Fix Type\", es: \"Tipo de arreglo\", fr: \"Type de correction\" },\r\n  \"Fix Images\": { en: \"Fix Images\", es: \"Reparar Imágenes\", fr: \"Corriger les images\" },\r\n  \"Safety Briefing\": { en: \"Safety Briefing\", es: \"Instrucción de seguridad\", fr: \"Briefing de sécurité\" },\r\n  Safety: { en: \"Safety\", es: \"La seguridad\", fr: \"sécurité\" },\r\n  \"Asset Id \": { en: \"Asset Id\", es: \"Identificación del activo\", fr: \"ID d'élément\" },\r\n  \"Start (milepost)\": { en: \"Start (milepost)\", es: \"Comienzo (placa kilométrica)\", fr: \"Début (milepost)\" },\r\n  \"End (milepost)\": { en: \"End (milepost)\", es: \"Fin (placa kilométrica)\", fr: \"Fin (milepost)\" },\r\n  \"Length (milepost)\": { en: \"Length (milepost)\", es: \"Longitud (placa kilométrica)\", fr: \"Longueur (milepost)\" },\r\n  Runs: { en: \"Runs\", es: \"Carreras\", fr: \"Tournées\" },\r\n  Run: { en: \"Run\", es: \"correr\", fr: \"Tourner\" },\r\n  Staff: { en: \"Staff\", es: \"Personal\", fr: \"Personnel\" },\r\n  Team: { en: \"Team\", es: \"Equipo\", fr: \"Équipe\" },\r\n  \"Inspection Run Planning\": { en: \"Inspection Run Planning\", es: \"Plan de inspección\", fr: \"Planification des cycles d'inspection\" },\r\n  \"Company Name\": { en: \"Company Name\", es: \"Nombre de empresa\", fr: \"Nom de la compagnie\" },\r\n  \"Contact Email\": { en: \"Contact Email\", es: \"Correo de contacto\", fr: \"Email du contact\" },\r\n  \"Inspection Run Summary\": {\r\n    en: \"Inspection Run Summary\",\r\n    es: \"Resumen de la ejecución de la inspección\",\r\n    fr: \"Résumé du cycle d'inspection\",\r\n  },\r\n  \"Inspection Run Plans\": { en: \"Inspection Run Plans\", es: \"Planes de ejecución de inspección\", fr: \"Plans d'exécution d'inspection\" },\r\n  \"Inspection Plan\": { en: \"Inspection Plan\", es: \"Plan de inspección\", fr: \"Plan d'inspection\" },\r\n  \"Add Plan\": { en: \"Add Plan\", es: \"Añadir plan\", fr: \"Ajouter un plan\" },\r\n  \"Total Templates\": { en: \"Total Templates\", es: \"Plantillas totales\", fr: \"Total des modèles\" },\r\n  \"Crew Groups\": { en: \"Crew Groups\", es: \"Grupos de tripulación\", fr: \"Groupes d'équipage\" },\r\n  \"Road Masters\": { en: \"Road Masters\", es: \"Road Masters\", fr: \"Maîtres de la route\" },\r\n  \"Staff Profile\": { en: \"Staff Profile\", es: \"Perfil del personal\", fr: \"Profil du personnel\" },\r\n  \"Add New Staff\": { en: \"Add New Staff\", es: \"Añadir nuevo personal\", fr: \"Ajouter un nouveau personnel\" },\r\n  \"Generic Email\": { en: \"Generic Email\", es: \"Correo genérico\", fr: \"Courriel générique\" },\r\n  Phone: { en: \"Phone\", es: \"Teléfono\", fr: \"Téléphone\" },\r\n  Mobile: { en: \"Mobile\", es: \"teléfono celular\", fr: \"Mobile\" },\r\n  \"Confirm Password\": { en: \"Confirm Password\", es: \"Confirmar contraseña\", fr: \"Confirmez le mot de passe\" },\r\n  \"Add Run\": { en: \"Add Run\", es: \"Añadir Run\", fr: \"Ajouter une course\" },\r\n  \"Run ID\": { en: \"Run ID\", es: \"ID de ejecución\", fr: \"ID d'exécution\" },\r\n  \"Run Name\": { en: \"Run Name\", es: \"Nombre de ejecución\", fr: \"Nom de la course\" },\r\n  \"Add Asset\": { en: \"Add Asset\", es: \"Añadir activo\", fr: \"Ajouter un élément\" },\r\n  \"Add Inspection\": { en: \"Add Inspection\", es: \"Añadir Plan de inspección\", fr: \"Ajouter une inspection\" },\r\n  \"Update Inspection\": { en: \"Update Inspection\", es: \"Plan de trabajo de actualización\", fr: \"Inspection des mises à jour\" },\r\n  Update: { en: \"Update\", es: \"Actualizar\", fr: \"Mise à jour\" },\r\n  \"Day Of Week / Year\": { en: \"Day Of Week / Year\", es: \"Día de la semana / año\", fr: \"Jour de la semaine / année\" },\r\n  Title: { en: \"Title\", es: \"Título\", fr: \"Titre\" },\r\n  Close: { en: \"Close\", es: \"Cerrar\", fr: \"proche\" },\r\n  \"Add New Run\": { en: \"Add New Run\", es: \"Añadir nuevo del funcionamiento\", fr: \"Ajouter une nouvelle course\" },\r\n  \"Edit Run\": { en: \"Edit Run\", es: \"Ejecutar\", fr: \"Modifier l'exécution\" },\r\n  \"Set Password\": { en: \"Set Password\", es: \"Configurar la clave\", fr: \"Définir le mot de passe\" },\r\n  \"Hide Password\": { en: \"Hide Password\", es: \"Contraseña oculta\", fr: \"Masquer le mot de passe\" },\r\n  \"Add New Asset\": { en: \"Add New Asset\", es: \"Añadir nuevo activo\", fr: \"Ajouter un nouvel élément\" },\r\n  \"Edit Asset\": { en: \"Edit Asset\", es: \"Editar Activo\", fr: \"Modifier l'élément\" },\r\n  \"Asset Attributes\": { en: \"Asset Attributes\", es: \"Atributos de los activos\", fr: \"Attributs des actifs\" },\r\n  Login: { en: \"Login\", es: \"Niciar sesión\", fr: \"S'identifier\" },\r\n  \"Sign in\": { en: \"Sign in\", es: \"Registrarse\", fr: \"se connecter\" },\r\n  Proceed: { en: \"Proceed\", es: \"Continuar\", fr: \"Procéder\" },\r\n  \"This email address is invalid\": {\r\n    en: \"This email address is invalid\",\r\n    es: \"Esta dirección de correo electrónico no es válida.\",\r\n    fr: \"Cette adresse e-mail n'est pas valide\",\r\n  },\r\n  \"Log Out\": { en: \"Log Out\", es: \"Cerrar sesión\", fr: \"Se déconnecter\" },\r\n  \"Select Date(s)\": { en: \"Select Date(s)\", es: \"Seleccionar fecha (s)\", fr: \"Sélectionnez la (les) date (s)\" },\r\n  Reset: { en: \"Reset\", es: \"Reiniciar\", fr: \"Réinitialiser\" },\r\n  Cancel: { en: \"Cancel\", es: \"Cancelar\", fr: \"Annuler\" },\r\n  Ok: { en: \"Ok\", es: \"Aceptar\", fr: \"D'accord\" },\r\n  \"Work Zone\": { en: \"Work Zone\", es: \"Zona de trabajo\", fr: \"Zone de travail\" },\r\n  \"Foul Time\": { en: \"Foul Time\", es: \"Tiempo de falta\", fr: \"Mauvais temps\" },\r\n  View: { en: \"View\", es: \"Ver\", fr: \"Vue\" },\r\n  \"MP Start\": { en: \"MP Start\", es: \"MP Inicio\", fr: \"Début MP\" },\r\n  \"MP End\": { en: \"MP End\", es: \"MP Final\", fr: \"Fin MP\" },\r\n  \"Run Description\": { en: \"Run Description\", es: \"Ejecutar Descripción\", fr: \"Description de l'exécution\" },\r\n  \"Add Range\": { en: \"Add Range\", es: \"Agregar rango\", fr: \"Ajouter une plage\" },\r\n  \"Add New Run Range\": { en: \"Add New Run Range\", es: \"Agregar nuevo rango de ejecución\", fr: \"Ajouter une nouvelle plage de tir\" },\r\n  \"Edit Run Range\": { en: \"Edit Run Range\", es: \"Editar rango de ejecución\", fr: \"Modifier la plage de tir\" },\r\n  \"Station Start\": { en: \"Station Start\", es: \"Inicio de estacion\", fr: \"Début de la station\" },\r\n  \"Station End\": { en: \"Station End\", es: \"Fin de estacion\", fr: \"Fin de la station\" },\r\n  Tracks: { en: \"Tracks\", es: \"Vía\", fr: \"Des pistes\" },\r\n  \"Select Line\": { en: \"Select Line\", es: \"Seleccionar linea\", fr: \"Sélectionnez une ligne\" },\r\n  \"Available Inspectors\": { en: \"Available Inspectors\", es: \"Inspectores disponibles\", fr: \"Inspecteurs disponibles\" },\r\n  Confirm: { en: \"Confirm\", es: \"Confirmar\", fr: \"Confirmer\" },\r\n  Remove: { en: \"Remove\", es: \"Retirar\", fr: \"Retirer\" },\r\n  Monday: { en: \"Monday\", es: \"Lunes\", fr: \"Lundi\" },\r\n  Tuesday: { en: \"Tuesday\", es: \"Martes\", fr: \"Mardi\" },\r\n  Wednesday: { en: \"Wednesday\", es: \"Miércoles\", fr: \"Mercredi\" },\r\n  Thursday: { en: \"Thursday\", es: \"Jueves\", fr: \"Jeudi\" },\r\n  Friday: { en: \"Friday\", es: \"Viernes\", fr: \"Vendredi\" },\r\n  Saturday: { en: \"Saturday\", es: \"Sábado\", fr: \"samedi\" },\r\n  Sunday: { en: \"Sunday\", es: \"Domingo\", fr: \"dimanche\" },\r\n  \"Last Inspection\": { en: \"Last Inspection\", es: \"Última inspección\", fr: \"Dernière inspection\" },\r\n  \"Next Inspection\": { en: \"Next Inspection\", es: \"Próxima inspección\", fr: \"Prochaine inspection\" },\r\n  \"Inspection Run Plan Detail\": {\r\n    en: \"Inspection Run Plan Detail\",\r\n    es: \"Detalle del plan de ejecución de inspección\",\r\n    fr: \"Détail du plan d'exécution d'inspection\",\r\n  },\r\n  \"Task List\": { en: \"Task List\", es: \"Lista de tareas\", fr: \"Liste de tâches\" },\r\n  Task: { en: \"Task\", es: \"Tarea\", fr: \"Tâche\" },\r\n  \"Add Special Task\": { en: \"Add Special Task\", es: \"Añadir tarea especial\", fr: \"Ajouter une tâche spéciale\" },\r\n  \"Edit Task\": { en: \"Edit Task\", es: \"Editar tarea\", fr: \"Modifier la tâche\" },\r\n  Notes: { en: \"Notes\", es: \"Notas\", fr: \"Remarques\" },\r\n  Image: { en: \"Image\", es: \"Imagen\", fr: \"Image\" },\r\n  \"Select Existing Images\": {\r\n    en: \"Select Existing Images\",\r\n    es: \"Seleccione las imágenes existentes\",\r\n    fr: \"Sélectionnez les images existantes\",\r\n  },\r\n  Location: { en: \"Location\", es: \"Ubicación\", fr: \"Emplacement\" },\r\n  \"Asset Type\": { en: \"Asset Type\", es: \"Tipo de activo\", fr: \"Type d'actif\" },\r\n  \"Location Latitude\": { en: \"Location Latitude\", es: \"Latitud de ubicación\", fr: \"Latitude de l'emplacement\" },\r\n  \"Maintenance Detail\": { en: \"Maintenance Detail\", es: \"Detalle de mantenimiento\", fr: \"Détail de la maintenance\" },\r\n  \"Maintenance Work Order\": {\r\n    en: \"Maintenance Work Order\",\r\n    es: \"De orden de trabajo de mantenimiento\",\r\n    fr: \"Bon de travail de maintenance\",\r\n  },\r\n  \"Created at\": { en: \"Created at\", es: \"Creado en\", fr: \"Créé à\" },\r\n  \"Created by\": { en: \"Created by\", es: \"Creado por\", fr: \"Créé par\" },\r\n  Source: { en: \"Source\", es: \"Fuente\", fr: \"La source\" },\r\n  \"Assigned To\": { en: \"Assigned To\", es: \"Asignado a\", fr: \"Assigné à\" },\r\n  \"Work Order\": { en: \"Work Order\", es: \"Orden de trabajo\", fr: \"Demande de service\" },\r\n  \"Closed date\": { en: \"Closed date\", es: \"Fecha cerrada\", fr: \"Date de fermeture\" },\r\n  \"Maintenance Estimate\": { en: \"Maintenance Estimate\", es: \"Estimado de mantenimiento\", fr: \"Estimation de la maintenance\" },\r\n  LABOR: { en: \"LABOR\", es: \"LABOR\", fr: \"LA MAIN D'OEUVRE\" },\r\n  \"Required Crew Skill\": { en: \"Required Crew Skill\", es: \"Habilidad de tripulación requerida\", fr: \"Compétence requise pour l'équipage\" },\r\n  CREW: { en: \"CREW\", es: \"PERSONAL\", fr: \"ÉQUIPAGE\" },\r\n  \"Please enter valid email address\": {\r\n    en: \"Please enter valid email address\",\r\n    es: \"Por favor ingrese una dirección de correo electrónico válida\",\r\n    fr: \"Veuillez saisir une adresse e-mail valide\",\r\n  },\r\n  \"Password Required\": { en: \"Password Required\", es: \"Se requiere contraseña\", fr: \"Mot de passe requis\" },\r\n  \"Work Plan\": { en: \"Work Plan\", es: \"El plan de trabajo\", fr: \"Plan de travail\" },\r\n  Tasks: { en: \"Tasks\", es: \"Tareas\", fr: \"Tâches\" },\r\n  \"Problem connecting to server\": {\r\n    en: \"Problem connecting to server\",\r\n    es: \"Problema al conectarse al servidor\",\r\n    fr: \"Problème de connexion au serveur\",\r\n  },\r\n  \"Failed to Create User !\": {\r\n    en: \"Failed to Create User !\",\r\n    es: \"Error al crear el usuario!\",\r\n    fr: \"Échec de la création de l'utilisateur!\",\r\n  },\r\n  Error: { en: \"Error\", es: \"Error\", fr: \"Erreur\" },\r\n  \"Failed to Delete User!\": {\r\n    en: \"Failed to Delete User!\",\r\n    es: \"Error al eliminar el usuario!\",\r\n    fr: \"Échec de la suppression de l'utilisateur!\",\r\n  },\r\n  \"Unable to checkout before 1m\": {\r\n    en: \"Unable to checkout before 1m\",\r\n    es: \"No se puede pagar antes de 1m\",\r\n    fr: \"Impossible de passer à la caisse avant 1 m\",\r\n  },\r\n  \"Please Wait \": { en: \"Please Wait \", es: \"Por favor espera \", fr: \"S'il vous plaît, attendez \" },\r\n  \"Track Assets\": { en: \"Track Assets\", es: \"Seguimiento de los activos\", fr: \"Suivre les actifs\" },\r\n  \"Inspection Created Successfully !\": {\r\n    en: \"Inspection Created Successfully !\",\r\n    es: \"Plan de trabajo creado con éxito!\",\r\n    fr: \"Inspection créée avec succès!\",\r\n  },\r\n  \"Inspection Deleted Successfully !\": {\r\n    en: \"Inspection Deleted Successfully !\",\r\n    es: \"Plan de trabajo eliminado con éxito!\",\r\n    fr: \"Inspection supprimée avec succès!\",\r\n  },\r\n  \"Inspection Updated Successfully !\": {\r\n    en: \"Inspection Updated Successfully !\",\r\n    es: \"Plan de trabajo actualizado con éxito!\",\r\n    fr: \"Inspection mise à jour avec succès!\",\r\n  },\r\n  \"Task Updated Successfully!\": {\r\n    en: \"Task Updated Successfully!\",\r\n    es: \"Tarea actualizada con éxito!\",\r\n    fr: \"Tâche mise à jour avec succès!\",\r\n  },\r\n  \"Task Created Successfully!\": { en: \"Task Created Successfully!\", es: \"Tarea creada con éxito!\", fr: \"Tâche créée avec succès!\" },\r\n  \"Task Deleted Successfully\": { en: \"Task Deleted Successfully\", es: \"Tarea eliminada con éxito\", fr: \"Tâche supprimée avec succès\" },\r\n  \"User Successfully Updated !\": {\r\n    en: \"User Successfully Updated !\",\r\n    es: \"Usuario actualizado correctamente!\",\r\n    fr: \"Utilisateur mis à jour avec succès!\",\r\n  },\r\n  \"Password Updated !\": { en: \"Password Updated !\", es: \"Contraseña actualiza !\", fr: \"Mot de passe mis à jour !\" },\r\n  \"User Created Successfully !\": {\r\n    en: \"User Created Successfully !\",\r\n    es: \"Usuario creado con éxito!\",\r\n    fr: \"L'utilisateur a été créé avec succès!\",\r\n  },\r\n  \"Track Added Successfully !\": {\r\n    en: \"Track Added Successfully !\",\r\n    es: \"La pista se ha añadido correctamente!\",\r\n    fr: \"Piste ajoutée avec succès!\",\r\n  },\r\n  \"Track Deleted Successfully !\": {\r\n    en: \"Track Deleted Successfully !\",\r\n    es: \"Pista eliminada con éxito!\",\r\n    fr: \"Piste supprimée avec succès!\",\r\n  },\r\n  \"Track Updated Successfully !\": {\r\n    en: \"Track Updated Successfully !\",\r\n    es: \"Seguimiento actualizado con éxito!\",\r\n    fr: \"Suivi mis à jour avec succès!\",\r\n  },\r\n  \"Track Assets Updated Successfully!\": {\r\n    en: \"Track Assets Updated Successfully!\",\r\n    es: \"Seguimiento de los activos actualizados con éxito!\",\r\n    fr: \"Suivi des actifs mis à jour avec succès!\",\r\n  },\r\n  \"User Availability\": { en: \"User Availability\", es: \"Disponibilidad del usuario\", fr: \"Disponibilité des utilisateurs\" },\r\n  \"Add Break!\": { en: \"Add Break!\", es: \"Añadir Break!\", fr: \"Ajoutez une pause!\" },\r\n  \"Please provide mobile\": { en: \"Please provide mobile\", es: \"Por favor proporcione móvil\", fr: \"Veuillez fournir un mobile\" },\r\n  \"Please enter complete mobile number\": {\r\n    en: \"Please enter complete mobile number.\",\r\n    es: \"Por favor, introduzca el número de móvil completo.\",\r\n    fr: \"Veuillez saisir le numéro de portable complet.\",\r\n  },\r\n  \"Add New Maintenance\": { en: \"Add New Maintenance\", es: \"Agregar nuevo mantenimiento\", fr: \"Ajouter une nouvelle maintenance\" },\r\n  \"Edit Maintenance\": { en: \"Edit Maintenance\", es: \"Editar mantenimiento\", fr: \"Modifier la maintenance\" },\r\n  \"Maintenance Attributes\": { en: \"Maintenance Attributes\", es: \"Atributos de mantenimiento\", fr: \"Attributs de maintenance\" },\r\n  \"Due Date\": { en: \"Due Date\", es: \"Fecha de vencimiento\", fr: \"Date d'échéance\" },\r\n  Latitude: { en: \"Latitude\", es: \"Latitud\", fr: \"Latitude\" },\r\n  Longitude: { en: \"Longitude\", es: \"Longitud\", fr: \"Longitude\" },\r\n  \"Location Longitude\": { en: \"Location Longitude\", es: \"Longitud de ubicación\", fr: \"Localisation Longitude\" },\r\n  \"GPS Latitude\": { en: \"GPS Latitude\", es: \"GPS Latitud\", fr: \"Latitude GPS\" },\r\n  \"GPS Longitude\": { en: \"GPS Longitude\", es: \"Longitud GPS\", fr: \"Longitude GPS\" },\r\n  Milepost: { en: \"Milepost\", es: \"Mojón\", fr: \"Millage\" },\r\n  \"Location Attributes\": { en: \"Location Attributes\", es: \"Atributos de ubicación\", fr: \"Attributs d'emplacement\" },\r\n  \"Future Inspection\": { en: \"Upcoming\", es: \"Próximo\", fr: \"A venir\" },\r\n  \"Mark Work Order Complete\": {\r\n    en: \"Mark Work Order Complete\",\r\n    es: \"Marcar orden de trabajo completada\",\r\n    fr: \"Marquer l'ordre de travail comme terminé\",\r\n  },\r\n  \"Add Work Order\": { en: \"Add Work Order\", es: \"Añadir\", fr: \"Ajouter un bon de travail\" },\r\n  \"Work Orders\": { en: \"Work Orders\", es: \"Órdenes de trabajo\", fr: \"Bons de travail\" },\r\n  \"Run List\": { en: \"Run List\", es: \"Lista de ejecución\", fr: \"Liste des courses\" },\r\n  \"Select Close Date For Work Order\": {\r\n    en: \"Select Close Date For Work Order\",\r\n    es: \"Seleccione la fecha de cierre de la orden de trabajo\",\r\n    fr: \"Sélectionnez la date de clôture pour l'ordre de travail\",\r\n  },\r\n  \"to work orders\": { en: \"to work orders\", es: \"a la orden de trabajo\", fr: \"aux bons de travail\" },\r\n  \"Tasks List\": { en: \"Tasks List\", es: \"Lista de tareas\", fr: \"Liste des tâches\" },\r\n  \"Inspection Detail\": { en: \"Inspection Detail\", es: \"Detalle de inspección\", fr: \"Détail d'inspection\" },\r\n  \"Asset ID\": { en: \"Asset ID\", es: \"ID de activo\", fr: \"ID d'élément\" },\r\n  \"Locations Issue Overview\": {\r\n    en: \"Locations Issue Overview\",\r\n    es: \"Descripción general del problema de ubicaciones\",\r\n    fr: \"Présentation des problèmes liés aux emplacements\",\r\n  },\r\n  \"Locations Inspection Overview\": {\r\n    en: \"Locations Inspection Overview\",\r\n    es: \"Descripción general de la inspección de ubicaciones\",\r\n    fr: \"Aperçu de l'inspection des emplacements\",\r\n  },\r\n  \"Last Inspection Date\": { en: \"Last Inspection Date\", es: \"Fecha de última inspección\", fr: \"Date de la dernière inspection\" },\r\n  Overdue: { en: \"Overdue\", es: \"Atrasada\", fr: \"En retard\" },\r\n  Missed: { en: \"Missed\", es: \"Perdido\", fr: \"Manqué\" },\r\n  Multiple: { en: \"Multiple\", es: \"Múltiple\", fr: \"Plusieurs\" },\r\n  Sun: { en: \"Sun\", es: \"dom\", fr: \"Soleil\" },\r\n  Mon: { en: \"Mon\", es: \"lun\", fr: \"lun\" },\r\n  Tue: { en: \"Tue\", es: \"mar\", fr: \"Mar\" },\r\n  Wed: { en: \"Wed\", es: \"mié\", fr: \"mer\" },\r\n  Thu: { en: \"Thu\", es: \"jue\", fr: \"jeu\" },\r\n  Fri: { en: \"Fri\", es: \"vie\", fr: \"ven\" },\r\n  Sat: { en: \"Sat\", es: \"sáb\", fr: \"Sam\" },\r\n  List: { en: \"List\", es: \"Lista\", fr: \"liste\" },\r\n  Calendar: { en: \"Calendar\", es: \"Calendario\", fr: \"Calendrier\" },\r\n  January: { en: \"January\", es: \"enero\", fr: \"janvier\" },\r\n  February: { en: \"February\", es: \"febrero\", fr: \"février\" },\r\n  March: { en: \"March\", es: \"marzo\", fr: \"Mars\" },\r\n  April: { en: \"April\", es: \"abril\", fr: \"avril\" },\r\n  May: { en: \"May\", es: \"Mayo\", fr: \"Peut\" },\r\n  June: { en: \"June\", es: \"junio\", fr: \"juin\" },\r\n  July: { en: \"July\", es: \"julio\", fr: \"juillet\" },\r\n  August: { en: \"August\", es: \"agosto\", fr: \"août\" },\r\n  September: { en: \"September\", es: \"septiembre\", fr: \"septembre\" },\r\n  October: { en: \"October\", es: \"octubre\", fr: \"octobre\" },\r\n  November: { en: \"November\", es: \"noviembre\", fr: \"novembre\" },\r\n  December: { en: \"December\", es: \"diciembre\", fr: \"décembre\" },\r\n  \"Add Task\": { en: \"Add Task\", es: \"Agregar tarea\", fr: \"Ajouter une tâche\" },\r\n  Forms: { en: \"Forms\", es: \"Formas\", fr: \"Formulaire\" },\r\n  Units: { en: \"Units\", es: \"Unidades\", fr: \"Unités\" },\r\n  \"End Time\": { en: \"End Time\", es: \"Hora de finalización\", fr: \"Heure de fin\" },\r\n  \"Asset Name\": { en: \"Asset Name\", es: \"Nombre de activo\", fr: \"Nom de l'élément\" },\r\n  \"Please provide\": { en: \"Please provide\", es: \"Por favor proporcione\", fr: \"Veuillez fournir\" },\r\n  \"Please provide Notes\": { en: \"Please provide Notes\", es: \"Por favor proporcione notas\", fr: \"Veuillez fournir des notes\" },\r\n  \"Please provide Description\": {\r\n    en: \"Please provide Description\",\r\n    es: \"Por favor proporcione Descripción\",\r\n    fr: \"Veuillez fournir une description\",\r\n  },\r\n  \"Upload New File\": { en: \"Upload New File\", es: \"Subir nuevo archivo\", fr: \"Télécharger un nouveau fichier\" },\r\n  \"Select Location\": { en: \"Select Location\", es: \"Seleccionar ubicación\", fr: \"Sélectionnez l'emplacement\" },\r\n  \"Work Location\": { en: \"Work Location\", es: \"Ubicación de trabajo\", fr: \"Lieu de travail\" },\r\n  \"Rotate anti-clockwise\": { en: \"Rotate anti-clockwise\", es: \"Girar en sentido antihorario\", fr: \"Tourner dans le sens anti-horaire\" },\r\n  \"Rotate clockwise\": { en: \"Rotate clockwise\", es: \"Rotar las agujas del reloj\", fr: \"Le sens des aiguilles d'une montre\" },\r\n  \"Assets List View\": { en: \"Assets List View\", es: \"Vista de lista de activos\", fr: \"Affichage de la liste des actifs\" },\r\n  \"Please Select at least one Asset\": {\r\n    en: \"Please Select at least one Asset\",\r\n    es: \"Seleccione al menos un activo\",\r\n    fr: \"Veuillez sélectionner au moins un élément\",\r\n  },\r\n  \"No Form Exist\": { en: \"No Form Exist\", es: \"No existe forma\", fr: \"Aucune forme n'existe\" },\r\n  \"Date and Time\": { en: \"Date and Time\", es: \"Fecha y hora\", fr: \"Date et l'heure\" },\r\n  \"Description of Work Assignment\": {\r\n    en: \"Description of Work Assignment\",\r\n    es: \"Descripción de la asignación de trabajo\",\r\n    fr: \"Description de l'affectation des travaux\",\r\n  },\r\n  next: { en: \"Next\", es: \"Siguiente\", fr: \"Prochain\" },\r\n  previous: { en: \"Previous\", es: \"Anterior\", fr: \"Précédent\" },\r\n  prev: { en: \"Previous\", es: \"Anterior\", fr: \"Précédent\" },\r\n  Page: { en: \"Page\", es: \"Página\", fr: \"Page\" },\r\n  of: { en: \"of\", es: \"de\", fr: \"de\" },\r\n  rows: { en: \"rows\", es: \"filas\", fr: \"Lignes\" },\r\n  \"No rows found\": { en: \"No rows found\", es: \"No se encontraron filas\", fr: \"Aucune ligne trouvée\" },\r\n  \"jump to page\": { en: \"jump to page\", es: \"saltar a la página\", fr: \"aller à la page\" },\r\n  \"rows per page\": { en: \"rows per page\", es: \"saltar a la página\", fr: \"lignes par page\" },\r\n  \"Loading...\": { en: \"Loading...\", es: \"Cargando...\", fr: \"Chargement...\" },\r\n  \"Fixed On Site\": { en: \"Fixed On Site\", es: \"Fijo en el sitio\", fr: \"Fixé sur place\" },\r\n  Select: { en: \"Select\", es: \"Seleccione\", fr: \"Sélectionner\" },\r\n  Selected: { en: \"Selected\", es: \"Seleccionada\", fr: \"Choisi\" },\r\n  Upcoming: { en: \"Upcoming\", es: \"Próxima\", fr: \"A venir\" },\r\n  Fixed: { en: \"Fixed\", es: \"Fija\", fr: \"Fixé\" },\r\n  Open: { en: \"Open\", es: \"Abierto\", fr: \"Ouvert\" },\r\n  Detail: { en: \"Detail\", es: \"Detalle\", fr: \"Détail\" },\r\n  Reason: { en: \"Reason\", es: \"Razón\", fr: \"Raison\" },\r\n  Normal: { en: \"Normal\", es: \"Normal\", fr: \"Ordinaire\" },\r\n  Planning: { en: \"Planning\", es: \"Planificación\", fr: \"Planification\" },\r\n  Documents: { en: \"Documents\", es: \"Documentos\", fr: \"Des documents\" },\r\n  Upload: { en: \"Upload\", es: \"Subir\", fr: \"Télécharger\" },\r\n  Attributes: { en: \"Attributes\", es: \"Atributos\", fr: \"Les attributs\" },\r\n  Rotate: { en: \"Rotate\", es: \"Girar\", fr: \"Tourner\" },\r\n  clockwise: { en: \"clockwise\", es: \"agujas del reloj\", fr: \"sens horaire\" },\r\n  \"anti clockwise\": { en: \"anti clockwise\", es: \"antihorario\", fr: \"anti-horaire\" },\r\n  \"In progress\": { en: \"In progress\", es: \"En progreso\", fr: \"En cours\" },\r\n  \"View Detail\": { en: \"View Detail\", es: \"Ver Detalle\", fr: \"Voir les détails\" },\r\n  \"Fixed on Site\": { en: \"Fixed on Site\", es: \"Fijo en el sitio\", fr: \"Fixé sur site\" },\r\n  \"Create MR\": { en: \"Create MR\", es: \"Crear MR\", fr: \"Créer MR\" },\r\n  \"Enter Description\": { en: \"Enter Description\", es: \"Ingrese la descripción\", fr: \"Entrez la description\" },\r\n  \"Maintenance Type\": { en: \"Maintenance Type\", es: \"Tipo de mantenimiento\", fr: \"Type d'entretien\" },\r\n  \"Track Chart\": { en: \"Track Chart\", es: \"Gráfico de seguimiento\", fr: \"Graphique de suivi\" },\r\n  \"Created By\": { en: \"Created By\", es: \"Creado por\", fr: \"Créé par\" },\r\n  \"Closed Date\": { en: \"Closed Date\", es: \"Fecha de cierre\", fr: \"Date de fermeture\" },\r\n  \"Add Maintenance Work Order\": {\r\n    en: \"Add Maintenance Work Order\",\r\n    es: \"Agregar orden de trabajo de mantenimiento\",\r\n    fr: \"Ajouter un ordre de travail de maintenance\",\r\n  },\r\n  \"Edit Maintenance Work Order\": {\r\n    en: \"Edit Maintenance Work Order\",\r\n    es: \"Editar orden de trabajo de mantenimiento\",\r\n    fr: \"Modifier l'ordre de travail de maintenance\",\r\n  },\r\n  \"Add Maintenance Requests\": {\r\n    en: \"Add Maintenance Requests\",\r\n    es: \"Agregar solicitudes de mantenimiento\",\r\n    fr: \"Ajouter des demandes de maintenance\",\r\n  },\r\n  \"Work Order No\": { en: \"Work Order No\", es: \"Orden de trabajo no\", fr: \"Bon de travail No\" },\r\n  \"No Option Selected\": { en: \"No Option Selected\", es: \"Ninguna opción seleccionada\", fr: \"Aucune option sélectionnée\" },\r\n  \"Confirm Deletion\": { en: \"Confirm Deletion\", es: \"Confirmar la eliminación\", fr: \"Confirmer la suppression\" },\r\n  \"Old data\": { en: \"Old data\", es: \"Datos antiguos\", fr: \"Anciennes données\" },\r\n  \"Previous Data\": { en: \"Previous Data\", es: \"Datos anteriores\", fr: \"Données précédentes\" },\r\n  \"Deleted Data\": { en: \"Deleted Data\", es: \"Datos eliminados\", fr: \"Données supprimées\" },\r\n  \"Updated Data\": { en: \"Updated Data\", es: \"Datos actualizados\", fr: \"Données mises à jour\" },\r\n  \"Estimate History\": { en: \"Estimate History\", es: \"Historia estimada\", fr: \"Estimer l'historique\" },\r\n  \"Add Maintenance Work To add this Maintenance Plan to a new Work Order, click + icon on the right, OR to add this to an existing Work Order for\": {\r\n    en:\r\n      \"Add Maintenance Work To add this Maintenance Plan to a new Work Order, click + icon on the right, OR to add this to an existing Work Order for\",\r\n    es:\r\n      \"Agregar trabajo de mantenimiento Para agregar este plan de mantenimiento a una nueva orden de trabajo, haga clic en el ícono + a la derecha, O para agregarlo a una orden de trabajo existente para\",\r\n    fr:\r\n      \"Ajouter des travaux de maintenance Pour ajouter ce plan de maintenance à un nouvel ordre de travail, cliquez sur l'icône + à droite, OU pour l'ajouter à un ordre de travail existant pour\",\r\n  },\r\n  \"click on 'Select' link under 'Actions' column below OR press 'Cancel' to go back\": {\r\n    en: \"click on 'Select' link under 'Actions' column below OR press 'Cancel' to go back\",\r\n    es: \"haga clic en el enlace 'Seleccionar' en la columna 'Acciones' a continuación O presione 'Cancelar' para volver\",\r\n    fr: \"cliquez sur le lien «Sélectionner» dans la colonne «Actions» ci-dessous OU appuyez sur «Annuler» pour revenir en arrière\",\r\n  },\r\n  \"Need Help\": { en: \"Need Help\", es: \"Necesitas ayuda\", fr: \"Besoin d'aide\" },\r\n  \"New data\": { en: \"New data\", es: \"Nuevos datos\", fr: \"Nouvelles données\" },\r\n  \"Time Stamp\": { en: \"Time Stamp\", es: \"Sello de tiempo\", fr: \"Horodatage\" },\r\n  \"Created Successfully\": { en: \"Created Successfully\", es: \"Creado con éxito\", fr: \"Créé avec succès\" },\r\n  \"Deleted Successfully\": { en: \"Deleted Successfully\", es: \"Borrado exitosamente\", fr: \"Supprimé avec succès\" },\r\n  \"You cannot delete this Run\": {\r\n    en: \"You cannot delete this Run\",\r\n    es: \"No puedes eliminar esta ejecución\",\r\n    fr: \"Vous ne pouvez pas supprimer cette course\",\r\n  },\r\n  \"No Data Available or Selected\": {\r\n    en: \"No Data Available or Selected\",\r\n    es: \"No hay datos disponibles o seleccionados\",\r\n    fr: \"Aucune donnée disponible ou sélectionnée\",\r\n  },\r\n  \"Are you sure you want to delete\": {\r\n    en: \"Are you sure you want to delete?\",\r\n    es: \"estas seguro que quieres borrarlo?\",\r\n    fr: \"Etes-vous sûr que vous voulez supprimer?\",\r\n  },\r\n  \"All ranges in this run will also be deleted\": {\r\n    en: \"All ranges in this run will also be deleted\",\r\n    es: \"Todos los rangos de esta ejecución también se eliminarán.\",\r\n    fr: \"Toutes les plages de cette exécution seront également supprimées\",\r\n  },\r\n  \"All the children asset in the selected asset will also be deleted\": {\r\n    en: \"All the children asset in the selected asset will also be deleted\",\r\n    es: \"Todos los elementos secundarios del elemento seleccionado también se eliminarán.\",\r\n    fr: \"Tous les éléments enfants de l'élément sélectionné seront également supprimés\",\r\n  },\r\n  New: { en: \"New\", es: \"Nuevo\", fr: \"Nouveau\" },\r\n  Warning: { en: \"Warning\", es: \"Advertencia\", fr: \"avertissement\" },\r\n  Added: { en: \"Added\", es: \"Adicional\", fr: \"Ajoutée\" },\r\n  Changed: { en: \"Changed\", es: \"Cambiada\", fr: \"Modifié\" },\r\n  Deleted: { en: \"Deleted\", es: \"Eliminada\", fr: \"Supprimé\" },\r\n  Asset: { en: \"Asset\", es: \"Activo\", fr: \"Actif\" },\r\n  Note: { en: \"Note\", es: \"Nota\", fr: \"Remarque\" },\r\n  End: { en: \"End\", es: \"Final\", fr: \"Fin\" },\r\n  Type: { en: \"Type\", es: \"Tipo\", fr: \"Type\" },\r\n  Execute: { en: \"Execute\", es: \"Ejecutar\", fr: \"Exécuter\" },\r\n  Request: { en: \"Request\", es: \"Solicitud\", fr: \"Demande\" },\r\n  Settings: { en: \"Settings\", es: \"Configuraciones\", fr: \"Réglages\" },\r\n  Lists: { en: \"Lists\", es: \"Liza\", fr: \"Listes\" },\r\n  Frequency: { en: \"Frequency\", es: \"Frecuencia\", fr: \"La fréquence\" },\r\n  Password: { en: \"Password\", es: \"Contraseña\", fr: \"Mot de passe\" },\r\n  Department: { en: \"Department\", es: \"Departamento\", fr: \"département\" },\r\n  Value: { en: \"Value\", es: \"Valor\", fr: \"Valeur\" },\r\n  Data: { en: \"Data\", es: \"Datos\", fr: \"Les données\" },\r\n  Hi: { en: \"Hi\", es: \"Hola\", fr: \"salut\" },\r\n  Forgot: { en: \"Forgot\", es: \"Olvidó\", fr: \"Oublié\" },\r\n  \"User Deleted !\": { en: \"User Deleted !\", es: \"Usuario eliminado !\", fr: \"Utilisateur supprimé!\" },\r\n  \"Adjust Availability Hours\": {\r\n    en: \"Adjust Availability Hours\",\r\n    es: \"Ajustar horas de disponibilidad\",\r\n    fr: \"Ajuster les heures de disponibilité\",\r\n  },\r\n  \"GPS Location Recording of Users In System\": {\r\n    en: \"GPS Location Recording of Users In System\",\r\n    es: \"Grabación de ubicación GPS de usuarios en el sistema\",\r\n    fr: \"Enregistrement de la position GPS des utilisateurs dans le système\",\r\n  },\r\n  \"Are you sure you want to delete ?\": {\r\n    en: \"Are you sure you want to delete ?\",\r\n    es: \"Estas seguro que quieres borrarlo ?\",\r\n    fr: \"Etes-vous sûr que vous voulez supprimer ?\",\r\n  },\r\n  \"Assigned Location\": { en: \"Assigned Location\", es: \"Lugar asignado\", fr: \"Emplacement attribué\" },\r\n  \"Select one\": { en: \"Select one\", es: \"Seleccione uno\", fr: \"Sélectionnez un\" },\r\n  \"Asset type\": { en: \"Asset type\", es: \"Tipo de activo\", fr: \"Type d'actif\" },\r\n  \"Total plans\": { en: \"Total plans\", es: \"Planes totales\", fr: \"Total des plans\" },\r\n  \"Assign To\": { en: \"Assign To\", es: \"Asignar a\", fr: \"Affecter à\" },\r\n  \"Start Date\": { en: \"Start Date\", es: \"Fecha de inicio\", fr: \"Date de début\" },\r\n  \"Select Date\": { en: \"Select Date\", es: \"Seleccione fecha\", fr: \"Sélectionner une date\" },\r\n  \"Repeat after days\": { en: \"Repeat after days\", es: \"Repita despues de dias\", fr: \"Répéter après des jours\" },\r\n  \"Maintenance Types\": { en: \"Maintenance Types\", es: \"Tipos de mantenimiento\", fr: \"Types de maintenance\" },\r\n  \"Crew Skills\": { en: \"Crew Skills\", es: \"Habilidades de la tripulación\", fr: \"Compétences de l'équipage\" },\r\n  \"Equipment Types\": { en: \"Equipment Types\", es: \"Tipos de equipamiento\", fr: \"Types d'équipement\" },\r\n  \"Material Types\": { en: \"Material Types\", es: \"Tipos de materiales\", fr: \"Types de matériaux\" },\r\n  \"Close Date\": { en: \"Close Date\", es: \"Fecha de cierre\", fr: \"Date de clôture\" },\r\n  \"Defect Codes\": { en: \"Defect Codes\", es: \"Códigos de defectos\", fr: \"Codes de défaut\" },\r\n  \"Show Inactive\": { en: \"Show Inactive\", es: \"Mostrar inactivo\", fr: \"Afficher inactif\" },\r\n  \"How Many\": { en: \"How Many\", es: \"Cuántos\", fr: \"Combien\" },\r\n  \"Start Day\": { en: \"Start Day\", es: \"Día de inicio\", fr: \"Commence jour\" },\r\n  \"End Day\": { en: \"End Day\", es: \"Día final\", fr: \"Jour de fin\" },\r\n  \"Start Location\": { en: \"Start Location\", es: \"Lugar de inicio\", fr: \"Lieu de départ\" },\r\n  \"End Location\": { en: \"End Location\", es: \"Ubicación final\", fr: \"Emplacement final\" },\r\n  \"Select Assets\": { en: \"Select Assets\", es: \"Seleccionar activos\", fr: \"Sélectionnez les actifs\" },\r\n  Resource: { en: \"Resource\", es: \"Recurso\", fr: \"Ressource\" },\r\n  Popup: { en: \"Popup\", es: \"Surgir\", fr: \"Notification\" },\r\n  PLATES: { en: \"PLATES\", es: \"PLATOS\", fr: \"PLAQUES\" },\r\n  BOLTS: { en: \"BOLTS\", es: \"PERNOS\", fr: \"BOULONS\" },\r\n  Create: { en: \"Create\", es: \"Crear\", fr: \"Créer\" },\r\n  briefing: { en: \"briefing\", es: \"instrucciones\", fr: \"Compte rendu\" },\r\n  workers: { en: \"workers\", es: \"trabajadoras\", fr: \"travailleurs\" },\r\n  comments: { en: \"comments\", es: \"comentarios\", fr: \"commentaires\" },\r\n  days: { en: \"Days\", es: \"dias\", fr: \"journées\" },\r\n  Signature: { en: \"Signature\", es: \"Firma\", fr: \"Signature\" },\r\n  Briefings: { en: \"Briefings\", es: \"Reuniones informativas\", fr: \"Briefings\" },\r\n  Briefing: { en: \"Briefing\", es: \"Instrucciones\", fr: \"Compte rendu\" },\r\n  Number: { en: \"Number\", es: \"Número\", fr: \"Nombre\" },\r\n  \"Image display area\": { en: \"Image display area\", es: \"Área de visualización de imagen\", fr: \"Zone d'affichage de l'image\" },\r\n  \"Track Managers\": { en: \"Track Managers\", es: \"Seguimiento de gerentes\", fr: \"Gestionnaires de piste\" },\r\n  \"Track Manager\": { en: \"Track Manager\", es: \"Gerente de pista\", fr: \"Gestionnaire de piste\" },\r\n  \"Team Member\": { en: \"Team Member\", es: \"Miembro del equipo\", fr: \"Membre de l'équipe\" },\r\n  \"Inspection Deleted Successfully\": {\r\n    en: \"Inspection Deleted Successfully\",\r\n    es: \"Inspección eliminada exitosamente\",\r\n    fr: \"Inspection supprimée avec succès\",\r\n  },\r\n  \"Inspection Updated Successfully\": {\r\n    en: \"Inspection Updated Successfully\",\r\n    es: \"Inspección actualizada exitosamente\",\r\n    fr: \"Inspection mise à jour avec succès\",\r\n  },\r\n  \"Asset Removed Successfully\": { en: \"Asset Removed Successfully\", es: \"Activo eliminado con éxito\", fr: \"L'élément a bien été supprimé\" },\r\n  \"Team Detail\": { en: \"Team Detail\", es: \"Detalle del equipo\", fr: \"Détail de l'équipe\" },\r\n  \"Milepost start must be less than or equal to Milepost End\": {\r\n    en: \"Milepost start must be less than or equal to Milepost End\",\r\n    es: \"Milepost start debe ser menor o igual que Milepost End\",\r\n    fr: \"Le début de Milepost doit être inférieur ou égal à Milepost End\",\r\n  },\r\n  \"Add Estimate\": { en: \"Add Estimate\", es: \"Añadir presupuesto\", fr: \"Ajouter une estimation\" },\r\n  \"Milepost start must be less than Milepost End\": {\r\n    en: \"Milepost start must be less than Milepost End\",\r\n    es: \"El inicio de Milepost debe ser inferior al final de Milepost\",\r\n    fr: \"Le début de Milepost doit être inférieur à Milepost End\",\r\n  },\r\n  \"Milepost Start\": { en: \"MP Start\", es: \"MP comienzo\", fr: \"Début MP\" },\r\n  \"Milepost End\": { en: \"MP End\", es: \"MP Final\", fr: \"Fin MP\" },\r\n  \"Select Execution Date For Work Order\": {\r\n    en: \"Select Execution Date For Work Order\",\r\n    es: \"Seleccione la fecha de ejecución para la orden de trabajo\",\r\n    fr: \"Sélectionnez la date d'exécution pour l'ordre de travail\",\r\n  },\r\n  \"SWITCH NUMBER\": { en: \"SWITCH NUMBER\", es: \"NÚMERO DE INTERRUPTOR\", fr: \"NUMÉRO DE COMMUTATEUR\" },\r\n  \"Email sent, please check your email\": {\r\n    en: \"Email sent, please check your email\",\r\n    es: \"Correo electrónico enviado, por favor revise su correo electrónico\",\r\n    fr: \"Email envoyé, veuillez vérifier votre email\",\r\n  },\r\n  \"Unable to Send Email or Email Address not found\": {\r\n    en: \"Unable to Send Email or Email Address not found\",\r\n    es: \"No se puede enviar correo electrónico o dirección de correo electrónico no encontrada\",\r\n    fr: \"Impossible d'envoyer l'e-mail ou l'adresse e-mail introuvable\",\r\n  },\r\n  \"SPLIT RAILS\": { en: \"SPLIT RAILS\", es: \"RIELES DIVIDIDOS\", fr: \"RAILS SPLIT\" },\r\n  \"View Change Log\": { en: \"View Change Log\", es: \"Ver registro de cambios\", fr: \"Voir la log des modifications\" },\r\n  \"Hide Inactive\": { en: \"Hide Inactive\", es: \"Ocultar inactivo\", fr: \"Masquer inactif\" },\r\n  \"Run Id\": { en: \"Run Id\", es: \"ID de ejecución\", fr: \"ID d'exécution\" },\r\n  \"created at\": { en: \"created at\", es: \"Creado en\", fr: \"créé à\" },\r\n  \"Run Location\": { en: \"Run Location\", es: \"Ejecutar ubicación\", fr: \"Emplacement de la course\" },\r\n  \"This field is required\": { en: \"This field is required\", es: \"este campo es requerido\", fr: \"Ce champ est requis\" },\r\n  \"Please Select Valid Location\": {\r\n    en: \"Please Select Valid Location\",\r\n    es: \"Por favor, seleccione una ubicación válida\",\r\n    fr: \"Veuillez sélectionner un emplacement valide\",\r\n  },\r\n  \"Please enter reason for closing\": {\r\n    en: \"Please enter reason for closing\",\r\n    es: \"Por favor, introduzca el motivo del cierre\",\r\n    fr: \"Veuillez saisir la raison de la fermeture\",\r\n  },\r\n  \"Length must be greater or equal to\": {\r\n    en: \"Length must be greater or equal to\",\r\n    es: \"La longitud debe ser mayor o igual a\",\r\n    fr: \"La longueur doit être supérieure ou égale à\",\r\n  },\r\n  \"Length must be less or equal to\": {\r\n    en: \"Length must be less or equal to\",\r\n    es: \"La longitud debe ser menor o igual a\",\r\n    fr: \"La longueur doit être inférieure ou égale à\",\r\n  },\r\n  \"Must be greater or equal to\": { en: \"Must be greater or equal to\", es: \"Debe ser mayor o igual a\", fr: \"Doit être supérieur ou égal à\" },\r\n  \"Must be less or equal to\": { en: \"Must be less or equal to\", es: \"Debe ser menor o igual a\", fr: \"Doit être inférieur ou égal à\" },\r\n  \"Must be equal to\": { en: \"Must be equal to\", es: \"Debe ser igual a\", fr: \"Doit être égal à\" },\r\n  \"doesn't match, please verify\": {\r\n    en: \"doesn't match, please verify\",\r\n    es: \"no coincide, por favor verifique\",\r\n    fr: \"ne correspond pas, veuillez vérifier\",\r\n  },\r\n  \"Number is not valid\": { en: \"Number is not valid\", es: \"El número no es válido.\", fr: \"Le numéro n'est pas valide\" },\r\n  \"Validation failed\": { en: \"Validation failed\", es: \"Validación fallida\", fr: \"Validation échouée\" },\r\n  \"Unable to Create\": { en: \"Unable to Create\", es: \"Incapaz de crear\", fr: \"Incapable de créer\" },\r\n  \"Unable to Delete\": { en: \"Unable to Delete\", es: \"No se puede eliminar\", fr: \"Impossible de supprimer\" },\r\n  \"Error Occurred\": { en: \"Error Occurred\", es: \"Se produjo un error\", fr: \"Erreur est survenue\" },\r\n  \"Inspection recurs at day\": {\r\n    en: \"Inspection recurs at day\",\r\n    es: \"La inspección se repite en el día.\",\r\n    fr: \"L'inspection se répète le jour\",\r\n  },\r\n  \"Inspection due at day\": { en: \"Inspection due at day\", es: \"Inspección por día\", fr: \"Inspection due le jour\" },\r\n  \"Must be performed once within\": {\r\n    en: \"Must be performed once within\",\r\n    es: \"Debe realizarse una vez dentro\",\r\n    fr: \"Doit être effectué une fois dans\",\r\n  },\r\n  \"Must be performed once in days\": {\r\n    en: \"Must be performed once in days\",\r\n    es: \"Debe realizarse una vez en días\",\r\n    fr: \"Doit être effectué une fois tous les jours\",\r\n  },\r\n  \"Add Team Member\": { en: \"Add Team Member\", es: \"Agregar miembro del equipo\", fr: \"Ajouter un membre de l'équipe\" },\r\n  \"Run Detail\": { en: \"Run Detail\", es: \"Detalle de ejecución\", fr: \"Détail de l'exécution\" },\r\n  \"Maintenance List\": { en: \"Maintenance List\", es: \"Lista de mantenimiento\", fr: \"Liste de maintenance\" },\r\n  \"Add User\": { en: \"Add User\", es: \"Agregar usuario\", fr: \"Ajouter un utilisateur\" },\r\n  \"Select Document\": { en: \"Select Document\", es: \"Seleccionar documento\", fr: \"Sélectionnez un document\" },\r\n  \"Selected Document\": { en: \"Selected Document\", es: \"Documento seleccionado\", fr: \"Document sélectionné\" },\r\n  \"Upload Document\": { en: \"Upload Document\", es: \"Subir documento\", fr: \"Télécharger le document\" },\r\n  \"Forgot Password\": { en: \"Forgot Password\", es: \"Se te olvidó tu contraseña\", fr: \"Mot de passe oublié\" },\r\n  \"Select Image\": { en: \"Select Image\", es: \"Seleccionar imagen\", fr: \"Sélectionnez une image\" },\r\n  \"Upload Image\": { en: \"Upload Image\", es: \"Cargar imagen\", fr: \"Télécharger l'image\" },\r\n  \"Unable to Create Run\": { en: \"Unable to Create Run\", es: \"Ejecutar creado correctamente\", fr: \"Impossible de créer une analyse\" },\r\n  \"Run Created Successfully\": { en: \"Run Created Successfully\", es: \"Ejecutar creado correctamente\", fr: \"Exécution créée avec succès\" },\r\n  \"Inspection Created Successfully\": {\r\n    en: \"Inspection Created Successfully\",\r\n    es: \"Inspección creada con éxito\",\r\n    fr: \"Inspection créée avec succès\",\r\n  },\r\n  \"Work Order Number\": { en: \"Work Order Number\", es: \"Número de Orden de Trabajo\", fr: \"Numéro de bon de travail\" },\r\n  \"Update Attribute\": { en: \"Update Attribute\", es: \"Actualizar atributo\", fr: \"Mettre à jour l'attribut\" },\r\n  \"Selected Image\": { en: \"Selected Image\", es: \"Imagen seleccionada\", fr: \"Image sélectionnée\" },\r\n  \"Unable to Delete Run\": { en: \"Unable to Delete Run\", es: \"No se puede eliminar Ejecutar\", fr: \"Impossible de supprimer l'analyse\" },\r\n  \"Run Deleted Successfully\": {\r\n    en: \"Run Deleted Successfully\",\r\n    es: \"Ejecutar eliminado correctamente\",\r\n    fr: \"Exécution supprimée avec succès\",\r\n  },\r\n  \"Please provide Title\": { en: \"Please provide Title\", es: \"Por favor proporcione el título\", fr: \"Veuillez fournir le titre\" },\r\n  \"Work Orders List\": { en: \"Work Orders List\", es: \"Lista de órdenes de trabajo\", fr: \"Liste des bons de travail\" },\r\n  \"Create Maintenance Request\": {\r\n    en: \"Create Maintenance Request\",\r\n    es: \"Crear solicitud de mantenimiento\",\r\n    fr: \"Créer une demande de maintenance\",\r\n  },\r\n  \"Update Inspection Plan\": { en: \"Update Inspection Plan\", es: \"Actualizar plan de inspección\", fr: \"Mettre à jour le plan d'inspection\" },\r\n  \"Start must be less than or equal to end\": {\r\n    en: \"Start must be less than or equal to end\",\r\n    es: \"El inicio debe ser menor o igual que el final\",\r\n    fr: \"Le début doit être inférieur ou égal à la fin\",\r\n  },\r\n  \"Options Preset\": { en: \"Options Preset\", es: \"Opciones preestablecidas\", fr: \"Options prédéfinies\" },\r\n  \"Days between Inspections\": { en: \"Days between Inspections\", es: \"Días entre inspecciones\", fr: \"Jours entre les inspections\" },\r\n  \"30 Days\": { en: \"30 Days\", es: \"30 dias\", fr: \"30 jours\" },\r\n  \"Optional Info\": { en: \"Optional Info\", es: \"Información opcional\", fr: \"Informations facultatives\" },\r\n  \"Issue Details\": { en: \"Issue Details\", es: \"Detalles del problema\", fr: \"Détails du problème\" },\r\n  \"Inspections & Tests\": { en: \"Inspections & Tests\", es: \"Inspecciones & pruebas\", fr: \"Inspections et tests\" },\r\n  \"Inspection & Testing Reports\": {\r\n    en: \"Inspection & Testing Reports\",\r\n    es: \"Informes de inspección y prueba\",\r\n    fr: \"Rapports d'inspection et d'essai\",\r\n  },\r\n  \"Signal Maintainence\": { en: \"Signal Maintainence\", es: \"Informes de inspección y prueba\", fr: \"Maintenance du signal\" },\r\n  \"Signal WO\": { en: \"Signal WO\", es: \"Señal WO\", fr: \"Signal WO\" },\r\n  \"Inspection Name\": { en: \"Inspection Name\", es: \"Nombre de inspección\", fr: \"Nom de l'inspection\" },\r\n  \"Inspection Type\": { en: \"Inspection Type\", es: \"Tipo de inspección\", fr: \"Type d'inspection\" },\r\n  Weather: { en: \"Weather\", es: \"Clima\", fr: \"La météo\" },\r\n  Required: { en: \"Required\", es: \"Necesario\", fr: \"Obligatoire\" },\r\n  From: { en: \"From\", es: \"desde\", fr: \"De\" },\r\n  To: { en: \"To\", es: \"a\", fr: \"À\" },\r\n  Walk: { en: \"Walking\", es: \"Caminar\", fr: \"En marchant\" },\r\n  Observe: { en: \"Observe\", es: \"Observar\", fr: \"Observer\" },\r\n  Deficiency: { en: \"Deficiency\", es: \"Deficiencia\", fr: \"Déviation\" },\r\n  \"FRA Defect\": { en: \"FRA Defect\", es: \"Defecto de FRA\", fr: \"Défaut FRA\" },\r\n  Code: { en: \"Code\", es: \"Código\", fr: \"Code\" },\r\n  \"Defect Description\": { en: \"Defect Description\", es: \"Descripción del defecto\", fr: \"description du défaut\" },\r\n  \"Remedial Action\": { en: \"Remedial Action\", es: \"Acción correctiva\", fr: \"Des mesures correctives\" },\r\n  \"213.9B Needed\": { en: \"213.9B Needed\", es: \"213.9B Necesario\", fr: \"213.9B nécessaire\" },\r\n  \"Inspector Signature\": { en: \"Inspector Signature\", es: \"Firma del inspector\", fr: \"Signature de l'inspecteur\" },\r\n  \"Track Inspection & Repair Report\": {\r\n    en: \"Track Inspection & Repair Report\",\r\n    es: \"Informe de inspección y reparación de seguimiento\",\r\n    fr: \"Suivi du rapport d'inspection et de réparation\",\r\n  },\r\n  \"Detailed Switch Inspection\": {\r\n    en: \"Detailed Switch Inspection\",\r\n    es: \"Inspección detallada del interruptor\",\r\n    fr: \"Rapport Aiguillage\",\r\n  },\r\n  \"Select a Date Range\": { en: \"Select a Date Range\", es: \"Seleccione un rango de fechas\", fr: \"Sélectionnez une plage de dates\" },\r\n  All: { en: \"All\", es: \"Todo\", fr: \"Tout\" },\r\n  \"Issue Type\": { en: \"Issue Type\", es: \"Tipo de problema\", fr: \"type de probleme\" },\r\n  \"Add Deficiency to FRA Report\": {\r\n    en: \"Add Deficiency to FRA Report\",\r\n    es: \"Agregar deficiencia al informe de FRA\",\r\n    fr: \"Ajouter une anomalie au rapport FRA\",\r\n  },\r\n  \"Select Priority\": { en: \"Select Priority\", es: \"Seleccionar prioridad\", fr: \"Sélectionnez la priorité\" },\r\n  \"Rail Direction\": { en: \"Rail Direction\", es: \"Dirección del carril\", fr: \"Direction du rail\" },\r\n  Information: { en: \"Information\", es: \"Información\", fr: \"Information\" },\r\n  \"Add Comment\": { en: \"Add Comment\", es: \"Agregar comentario\", fr: \"Ajouter un commentaire\" },\r\n  \"Track Manager Comments\": {\r\n    en: \"Track Manager Comments\",\r\n    es: \"Comentarios del administrador de seguimiento\",\r\n    fr: \"Commentaires du gestionnaire de suivi\",\r\n  },\r\n  \"Rule 213.9(b) Applied\": { en: \"Rule 213.9(b) Applied\", es: \"Se aplica la regla 213.9 (b)\", fr: \"Règle 213.9 (b) appliquée\" },\r\n  Yes: { en: \"Yes\", es: \"si\", fr: \"Oui\" },\r\n  Rails: { en: \"Rails\", es: \"Rieles\", fr: \"Rails\" },\r\n  Spikes: { en: \"Spikes\", es: \"Picos\", fr: \"Clou\" },\r\n  Tiles: { en: \"Tiles\", es: \"Losas\", fr: \"Dormant\" },\r\n  \"Joint Bar\": { en: \"Joint Bar\", es: \"Barra conjunta\", fr: \"Joint\" },\r\n  \"Weather Conditions\": { en: \"Weather Conditions\", es: \"Las condiciones climáticas\", fr: \"Conditions météorologiques\" },\r\n  Temperature: { en: \"Temperature\", es: \"Temperatura\", fr: \"Température\" },\r\n  \"Issue Priority\": { en: \"Issue Priority\", es: \"Prioridad de problemas\", fr: \"Priorité du problème\" },\r\n  open: { en: \"open\", es: \"abierto\", fr: \"ouvert\" },\r\n  \"Image Before\": { en: \"Image Before\", es: \"Imagen antes\", fr: \"Image avant\" },\r\n  \"No user\": { en: \"No user\", es: \"Sin usuario\", fr: \"Aucun utilisateur\" },\r\n  Completed: { en: \"Completed\", es: \"Terminado\", fr: \"Terminé\" },\r\n  \"link to the audio\": { en: \"link to the audio\", es: \"enlace al audio\", fr: \"lien vers l'audio\" },\r\n  \"Include in FRA\": { en: \"Include in FRA\", es: \"Incluir en FRA\", fr: \"Inclure dans FRA\" },\r\n  \"Inspection Frequency\": { en: \"Inspection Frequency\", es: \"Frecuencia de inspección\", fr: \"Fréquence d'inspection\" },\r\n  in: { en: \"in\", es: \"en\", fr: \"dans\" },\r\n  every: { en: \"every\", es: \"cada\", fr: \"chaque\" },\r\n  Day: { en: \"Day\", es: \"Dia\", fr: \"journée\" },\r\n  Week: { en: \"Week\", es: \"Semana\", fr: \"La semaine\" },\r\n  Month: { en: \"Month\", es: \"Mes\", fr: \"Mois\" },\r\n  Year: { en: \"Year\", es: \"Año\", fr: \"Année\" },\r\n  Repaired: { en: \"Repaired\", es: \"Reparado\", fr: \"Réparé\" },\r\n  Describe: { en: \"Describe\", es: \"Describir\", fr: \"Décris\" },\r\n  hugging: { en: \"hugging\", es: \"abrazar\", fr: \"étreindre\" },\r\n  \"Slow Order Applied\": { en: \"Slow Order Applied\", es: \"Orden lenta aplicada\", fr: \"Ordre lent appliqué\" },\r\n  \"Speed restricted to\": { en: \"Speed restricted to\", es: \"Velocidad restringida a\", fr: \"Vitesse limitée à\" },\r\n  \"Milepost Start Limit\": { en: \"Milepost Start Limit\", es: \"Límite de inicio de poste de milla\", fr: \"Limite de départ Milepost\" },\r\n  \"Milepost End Limit\": { en: \"Milepost End Limit\", es: \"Límite final de poste de señalización\", fr: \"Limite de fin de Milepost\" },\r\n  \"Start Of Week\": { en: \"Start Of Week\", es: \"Inicio de semana\", fr: \"Début de semaine\" },\r\n  \"Force Input Start/End Milepost on Mobile App\": {\r\n    en: \"Force Input Start/End Milepost on Mobile App\",\r\n    es: \"Forzar entrada de hito de inicio / fin en la aplicación móvil\",\r\n    fr: \"Forcer l'entrée au début / à la fin du point milliaire sur l'application mobile\",\r\n  },\r\n  \"Force Input Traverse Track on Mobile App\": {\r\n    en: \"Force Input Traverse Track on Mobile App\",\r\n    es: \"Forzar entrada de recorrido transversal en la aplicación móvil\",\r\n    fr: \"Forcer le suivi de la trajectoire d'entrée sur l'application mobile\",\r\n  },\r\n  \"Working Week days\": { en: \"Working Week days\", es: \"Días laborables laborables\", fr: \"Jours ouvrables\" },\r\n  Holidays: { en: \"Holidays\", es: \"Días festivos\", fr: \"Vacances\" },\r\n  \"Review Remedial Action Before Resolving Issue\": {\r\n    en: \"Review Remedial Action Before Resolving Issue\",\r\n    es: \"Revise la acción correctiva antes de resolver el problema\",\r\n    fr: \"Examiner les mesures correctives avant de résoudre le problème\",\r\n  },\r\n  \"Force app to use single clock for Inspection\": {\r\n    en: \"Force app to use single clock for Inspection\",\r\n    es: \"Obligar a la aplicación a utilizar un solo reloj para la inspección\",\r\n    fr: \"Forcer l'application à utiliser une seule horloge pour l'inspection\",\r\n  },\r\n  \"Allow selection of track direction in Mobile app (if available)\": {\r\n    en: \"Allow selection of track direction in Mobile app (if available)\",\r\n    es: \"Permitir la selección de la dirección de la pista en la aplicación móvil (si está disponible)\",\r\n    fr: \"Autoriser la sélection de la direction du tracé dans l'application mobile (si disponible)\",\r\n  },\r\n  \"Force Mobile app to select Main Track as default asset\": {\r\n    en: \"Force Mobile app to select Main Track as default asset\",\r\n    es: \"Obligar a la aplicación móvil a seleccionar Main Track como activo predeterminado\",\r\n    fr: \"Forcer l'application mobile à sélectionner la piste principale comme actif par défaut\",\r\n  },\r\n  \"Allow Inspector to select Inspection type before starting\": {\r\n    en: \"Allow Inspector to select Inspection type before starting\",\r\n    es: \"Permita que el inspector seleccione el tipo de inspección antes de comenzar\",\r\n    fr: \"Autoriser l'inspecteur à sélectionner le type d'inspection avant de commencer\",\r\n  },\r\n  \"Allow inspector to add weather condition before starting inspection\": {\r\n    en: \"Allow inspector to add weather condition before starting inspection\",\r\n    es: \"Permita que el inspector agregue las condiciones climáticas antes de comenzar la inspección\",\r\n    fr: \"Permettre à l'inspecteur d'ajouter les conditions météorologiques avant de commencer l'inspection\",\r\n  },\r\n  \"Switch Alert Days\": { en: \"Switch Alert Days\", es: \"Cambiar días de alerta\", fr: \"Changer de jours d'alerte\" },\r\n  \"Use the temperature sign i.e (F: Fahrenheit, C: Celsius)\": {\r\n    en: \"Use the temperature sign i.e (F: Fahrenheit, C: Celsius)\",\r\n    es: \"Utilice el signo de temperatura, es decir, (F: Fahrenheit, C: Celsius)\",\r\n    fr: \"Utilisez le signe de la température, c'est-à-dire (F: Fahrenheit, C: Celsius)\",\r\n  },\r\n  \"Use the distance sign i.e (M: Miles, K: Kilometers)\": {\r\n    en: \"Use the distance sign i.e (M: Miles, K: Kilometers)\",\r\n    es: \"Utilice el signo de distancia, es decir, (M: millas, K: kilómetros)\",\r\n    fr: \"Utilisez le signe de distance, c'est-à-dire (M: Miles, K: Kilomètres)\",\r\n  },\r\n  \"Use the sign posts i.e (MP: Milepost, KP: Kilometre Post)\": {\r\n    en: \"Use the sign posts i.e (MP: Milepost, KP: Kilometre Post)\",\r\n    es: \"Utilice los postes de señalización, es decir (MP: Milepost, KP: Kilometer Post)\",\r\n    fr: \"Utilisez les poteaux de signalisation, c'est-à-dire (MP: Milepost, KP: Kilometer Post)\",\r\n  },\r\n  Region: { en: \"Region\", es: \"Región\", fr: \"Région\" },\r\n  \"Sub-Division\": { en: \"Sub-Division\", es: \"Subdivisión\", fr: \"Subdivision\" },\r\n  Lines: { en: \"Lines\", es: \"Líneas\", fr: \"Lignes\" },\r\n  Add: { en: \"Add\", es: \"Añadir\", fr: \"Ajouter\" },\r\n  Edit: { en: \"Edit\", es: \"Editar\", fr: \"Éditer\" },\r\n  Setting: { en: \"Setting\", es: \"Ajuste\", fr: \"Réglage\" },\r\n  Delete: { en: \"Delete\", es: \"Eliminar\", fr: \"Effacer\" },\r\n  \"View Only\": { en: \"View Only\", es: \"Sólo vista\", fr: \"Lecture seul\" },\r\n  \"Add Asset Type\": { en: \"Add Asset Type\", es: \"Agregar tipo de activo\", fr: \"Ajouter un type d'actif\" },\r\n  \"Add Line\": { en: \"Add Line\", es: \"Añadir línea\", fr: \"Ajouter une ligne\" },\r\n  Save: { en: \"Save\", es: \"salvar\", fr: \"sauvegarder\" },\r\n  \"Fixed Asset Inspection Status\": {\r\n    en: \"Fixed Asset Inspection Status\",\r\n    es: \"Estado de inspección de activos fijos\",\r\n    fr: \"Statut d'inspection des immobilisations\",\r\n  },\r\n  \"Track Inspection Status\": {\r\n    en: \"Track Inspection Status\",\r\n    es: \"Seguimiento del estado de inspección\",\r\n    fr: \"Suivi du statut d'inspection\",\r\n  },\r\n  \"Calendar of Inspections\": { en: \"Calendar of Inspections\", es: \"Calendario de inspecciones\", fr: \"Calendrier des inspections\" },\r\n  \"List of Inspections\": { en: \"List of Inspections\", es: \"Lista de inspecciones\", fr: \"Liste des inspections\" },\r\n  \"Signal Tests\": { en: \"Signal Tests\", es: \"Pruebas de señal\", fr: \"Tests de signal\" },\r\n  \"Are you sure you want to perform this action\": {\r\n    en: \"Are you sure you want to perform this action\",\r\n    es: \"¿Estás seguro de que quieres realizar esta acción?\",\r\n    fr: \"Êtes-vous sûr de vouloir effectuer cette action\",\r\n  },\r\n  \"This would cause changes in assets and will impact inspection/maintenance planning\": {\r\n    en: \"This would cause changes in assets and will impact inspection/maintenance planning\",\r\n    es: \"Esto provocaría cambios en los activos y afectaría la planificación de la inspección / mantenimiento\",\r\n    fr: \"Cela entraînerait des changements dans les actifs et aura un impact sur la planification des inspections / maintenance\",\r\n  },\r\n  Confirmation: { en: \"Confirmation\", es: \"Confirmación\", fr: \"Confirmation\" },\r\n  \"Image After\": { en: \"Image After\", es: \"Imagen después\", fr: \"Image après\" },\r\n  \"Max Interval\": { en: \"Max Interval\", es: \"Intervalo máximo\", fr: \"Intervalle max\" },\r\n  \"Add Inspection Plan\": { en: \"Add Inspection Plan\", es: \"Agregar plan de inspección\", fr: \"Ajouter un plan d'inspection\" },\r\n  \"Track OOS(Out of Service)\": {\r\n    en: \"Track OOS(Out of Service)\",\r\n    es: \"Seguimiento de OOS (fuera de servicio\",\r\n    fr: \"Suivre OOS (hors service)\",\r\n  },\r\n  \"Setup Tracks\": { en: \"Setup Tracks\", es: \"Configurar pistas\", fr: \"Configurer les pistes\" },\r\n  \"Track Setup\": { en: \"Track Setup\", es: \"Configuración de pista\", fr: \"Configuration de la piste\" },\r\n  \"GeoJson Data\": { en: \"GeoJson Data\", es: \"Datos GeoJson\", fr: \"Données GeoJson\" },\r\n  \"Length (miles)\": { en: \"Length (miles)\", es: \"Longitud (millas)\", fr: \"Longueur (miles)\" },\r\n  \"Length (km)\": { en: \"Length (km)\", es: \"Longitud (km)\", fr: \"Longueur (km)\" },\r\n  \"Local Track Name\": { en: \"Local Track Name\", es: \"Nombre de la pista local\", fr: \"Nom de la piste locale\" },\r\n  \"Track Orientation\": { en: \"Track Orientation\", es: \"Orientación de la pista\", fr: \"Orientation de la piste\" },\r\n  \"North/South\": { en: \"North/South\", es: \"Norte Sur\", fr: \"Nord Sud\" },\r\n  \"East/West\": { en: \"East/West\", es: \"Este oeste\", fr: \"Est Ouest\" },\r\n  \"Electrified Territory\": { en: \"Electrified Territory\", es: \"Territorio electrificado\", fr: \"Territoire électrifié\" },\r\n  \"Primary Track\": { en: \"Primary Track\", es: \"Pista principal\", fr: \"Piste principale\" },\r\n  \"primaryTrack\": { en: \"Primary Track\", es: \"Pista principal\", fr: \"Piste principale\" },\r\n  \"Invalid Json file\": { en: \"Invalid Json file\", es: \"Archivo Json no válido\", fr: \"Fichier Json non valide\" },\r\n  \"Please enter track name\": {\r\n    en: \"Please enter track name\",\r\n    es: \"Ingrese el nombre de la pista\",\r\n    fr: \"Veuillez saisir le nom de la piste\",\r\n  },\r\n  \"Track length is not valid, Please provide valid values for track start and end\": {\r\n    en: \"Track length is not valid, Please provide valid values for track start and end\",\r\n    es: \"La longitud de la pista no es válida. Proporcione valores válidos para el inicio y el final de la pista.\",\r\n    fr: \"La longueur de la piste n'est pas valide, veuillez fournir des valeurs valides pour le début et la fin de la piste\",\r\n  },\r\n  \"Values of MP Start or  MP End has negative value\": {\r\n    en: \"Values of MP Start or  MP End has negative value\",\r\n    es: \"Los valores de MP Start o MP End tienen un valor negativo\",\r\n    fr: \"Les valeurs de MP Start ou MP End ont une valeur négative\",\r\n  },\r\n  \"Values of MP Start & MP End are out of range\": {\r\n    en: \"Values of MP Start & MP End are out of range\",\r\n    es: \"Los valores de MP Start y MP End están fuera de rango\",\r\n    fr: \"Les valeurs de MP Start et MP End sont hors limites\",\r\n  },\r\n  \"Server is not accessible, Please retry in few seconds...\": {\r\n    en: \"Server is not accessible, Please retry in few seconds...\",\r\n    es: \"El servidor no es accesible. Vuelva a intentarlo en unos segundos ...\",\r\n    fr: \"Le serveur n'est pas accessible, veuillez réessayer dans quelques secondes ...\",\r\n  },\r\n  \"Track > Assets\": { en: \"Track > Assets\", es: \"Seguimiento> Activos\", fr: \"Suivre> Actifs\" },\r\n  \"Track GeoJson\": { en: \"Track GeoJson\", es: \"Seguimiento de GeoJson\", fr: \"Suivre GeoJson\" },\r\n  \"3rd Rail Power\": { en: \"3rd Rail Power\", es: \"Energía del tercer carril\", fr: \"3e rail d'alimentation\" },\r\n  \"Catenary Power\": { en: \"Catenary Power\", es: \"Poder de catenaria\", fr: \"Puissance caténaire\" },\r\n  \"New track\": { en: \"New track\", es: \"Nueva pista\", fr: \"Nouvelle piste\" },\r\n  \"New Track\": { en: \"New Track\", es: \"Nueva Pista\", fr: \"Nouvelle Piste\" },\r\n  \"Add New Unit\": { en: \"Add New Unit\", es: \"Agregar nueva unidad\", fr: \"Ajouter une nouvelle unité\" },\r\n  \"Add Category List\": { en: \"Add Category List\", es: \"Agregar lista de categorías\", fr: \"Ajouter une liste de catégories\" },\r\n  \"Edit Category List\": { en: \"Edit Category List\", es: \"Editar lista de categorías\", fr: \"Modifier la liste des catégories\" },\r\n  \"Track Report\": { en: \"Track Report\", es: \"Informe de seguimiento\", fr: \"Rapport de suivi\" },\r\n  \"Defects Report\": { en: \"Defects Report\", es: \"Informe de defectos\", fr: \"Rapport de défauts\" },\r\n  \"Un-Categorized\": { en: \"Un-Categorized\", es: \"Sin categorizar\", fr: \"Non classé\" },\r\n  Common: { en: \"Common\", es: \"común\", fr: \"Commun\" },\r\n  Scheduling: { en: \"Scheduling\", es: \"Planificación\", fr: \"Planification\" },\r\n  \"Mobile App\": { en: \"Mobile App\", es: \"Aplicación movil\", fr: \"Application mobile\" },\r\n  \"Location Created Successfully\": {\r\n    en: \"Location Created Successfully\",\r\n    es: \"Ubicación creada correctamente\",\r\n    fr: \"Emplacement créé avec succès\",\r\n  },\r\n  \"GPS Latitude Start\": { en: \"GPS Latitude Start\", es: \"Inicio de GPS Latitude\", fr: \"Début de la latitude GPS\" },\r\n  \"GPS Latitude End\": { en: \"GPS Latitude End\", es: \"GPS Latitude End\", fr: \"Fin de la latitude GPS\" },\r\n  \"GPS Longitude Start\": { en: \"GPS Longitude Start\", es: \"Inicio de longitud GPS\", fr: \"Début de la longitude GPS\" },\r\n  \"GPS Longitude End\": { en: \"GPS Longitude End\", es: \"Final de longitud GPS\", fr: \"Fin de longitude GPS\" },\r\n  \"Default Traverse by\": { en: \"Default Traverse by\", es: \"Travesía predeterminada por\", fr: \"Traversée par défaut par\" },\r\n  \"Lamp Attributes\": { en: \"Lamp Attributes\", es: \"Atributos de la lámpara\", fr: \"Attributs de la lampe\" },\r\n  timezone: { en: \"timezone\", es: \"zona horaria\", fr: \"fuseau horaire\" },\r\n  \"Total Length Miles\": { en: \"Total Length Miles\", es: \"Millas de longitud total\", fr: \"Miles de longueur totale\" },\r\n  \"Total Length Km\": { en: \"Total Length Km\", es: \"Longitud total Km\", fr: \"Longueur totale km\" },\r\n  Reverse: { en: \"Reverse\", es: \"Inverso\", fr: \"Inverser\" },\r\n  \"Password does not match\": { en: \"Password does not match\", es: \"Las contraseñas no coinciden\", fr: \"Le mot de passe ne correspond pas\" },\r\n  \"Location Updated Successfully\": {\r\n    en: \"Location Updated Successfully\",\r\n    es: \"Ubicación actualizada correctamente\",\r\n    fr: \"Emplacement mis à jour avec succès\",\r\n  },\r\n  \"Allow selection of rail direction in Mobile app (if available)\": {\r\n    en: \"Allow selection of rail direction in Mobile app (if available)\",\r\n    es: \"Permitir la selección de la dirección del carril en la aplicación móvil (si está disponible)\",\r\n    fr: \"Autoriser la sélection de la direction du rail dans l'application mobile (si disponible)\",\r\n  },\r\n  \"Alert Email\": { en: \"Alert Email\", es: \"Correo electrónico de alerta\", fr: \"Email d'alerte\" },\r\n  \"All the locations and assets in the selected location will also be deleted\": {\r\n    en: \"All the locations and assets in the selected location will also be deleted\",\r\n    es: \"Todas las ubicaciones y activos en la ubicación seleccionada también se eliminarán\",\r\n    fr: \"Tous les emplacements et ressources de l'emplacement sélectionné seront également supprimés\",\r\n  },\r\n  \"Cost Base\": { en: \"Cost Base\", es: \"Base de costos\", fr: \"Base de coût\" },\r\n  \"Select Recepient(s)\": { en: \"Select Recepient(s)\", es: \"Seleccionar destinatario (s)\", fr: \"Sélectionnez le (s) destinataire (s)\" },\r\n  \"Track Disturbance Report\": {\r\n    en: \"Track Disturbance Report\",\r\n    es: \"Seguimiento del informe de erturbaciones\",\r\n    fr: \"Suivi du rapport de perturbation\",\r\n  },\r\n  \"Switch Inspection & Repair Report\": {\r\n    en: \"Switch Inspection & Repair Report\",\r\n    es: \"Informe de inspección y reparación de interruptores\",\r\n    fr: \"Rapport d'inspection et de réparation des commutateurs\",\r\n  },\r\n  Reports: { en: \"Reports\", es: \"Informes\", fr: \"Rapports\" },\r\n  Report: { en: \"Report\", es: \"Reporte\", fr: \"rapport\" },\r\n  \"Date of Disturbance:\": { en: \"Date of Disturbance:\", es: \"Fecha de la perturbación:\", fr: \"Date de la perturbation:\" },\r\n  \"Railroad Name:\": { en: \"Railroad Name:\", es: \"Nombre del ferrocarril:\", fr: \"Nom du chemin de fer:\" },\r\n  \"Track Name:\": { en: \"Track Name:\", es: \"Nombre de la pista:\", fr: \"Nom de la piste:\" },\r\n  \"Location:from MP\": { en: \"Location:from MP\", es: \"Ubicación: desde MP\", fr: \"Lieu: de MP\" },\r\n  \"to MP:\": { en: \"to MP:\", es: \"Y MP:\", fr: \"Et MP:\" },\r\n  \"Alignment:(T/C)\": { en: \"Alignment:(T/C)\", es: \"Alineación: (T / C)\", fr: \"Alignment:(T/C)\" },\r\n  \"Degree of Curve\": { en: \"Degree of Curve\", es: \"Grado de curva\", fr: \"Degré de courbe\" },\r\n  \"Side of Rail(facing ascending milepost)(L,R,B)\": {\r\n    en: \"Side of Rail(facing ascending milepost)(L,R,B)\",\r\n    es: \"Lado del carril (mirando hacia el poste de la milla ascendente) (L, R, B)\",\r\n    fr: \"Côté du rail (face au poteau kilométrique ascendant) (L, R, B)\",\r\n  },\r\n  \"Desired Rail Neutral\": { en: \"Desired Rail Neutral\", es: \"Neutral de carril deseado\", fr: \"Rail neutre souhaité\" },\r\n  \"Temperature:Ambient\": { en: \"Temperature:Ambient\", es: \"Temperatura: ambiente\", fr: \"Température: ambiante\" },\r\n  \"Type of Disturbance\": { en: \"Type of Disturbance\", es: \"Tipo de perturbación\", fr: \"Type de perturbation\" },\r\n  \"Rail Layed (fill out Rail Laying Report)\": {\r\n    en: \"Rail Layed (fill out Rail Laying Report)\",\r\n    es: \"Instalación de rieles (complete el Informe de tendido de rieles\",\r\n    fr: \"Rail posé (remplir le rapport de pose de rail\",\r\n  },\r\n  \"Rail plug Installed :(Gap produced by rail pullback)\": {\r\n    en: \"Rail plug Installed :(Gap produced by rail pullback)\",\r\n    es: \"Tapón de riel instalado: (espacio producido por el retroceso del riel)\",\r\n    fr: \"Bouchon de rail installé: (Espace produit par le retrait du rail)\",\r\n  },\r\n  \"Reference Mark Length before:\": {\r\n    en: \"Reference Mark Length before:\",\r\n    es: \"Longitud de la marca de referencia antes:\",\r\n    fr: \"Longueur de la marque de référence avant:\",\r\n  },\r\n  \"Reference Mark Length after:\": {\r\n    en: \"Reference Mark Length after:\",\r\n    es: \"Longitud de la marca de referencia después de:\",\r\n    fr: \"Longueur de la marque de référence après:\",\r\n  },\r\n  \"Welds Made (Y/N) (how many)\": {\r\n    en: \"Welds Made (Y/N) (how many)\",\r\n    es: \"Soldaduras hechas (S / N) (cuántos)\",\r\n    fr: \"Soudures effectuées (O / N) (combien)\",\r\n  },\r\n  \"Welds Made (rail separation)(Gap produces by pullback):\": {\r\n    en: \"Welds Made (rail separation)(Gap produces by pullback):\",\r\n    es: \"Soldaduras hechas (separación de rieles) (el espacio se produce por retroceso):\",\r\n    fr: \"Soudures réalisées (séparation de rail) (Gap produit par retrait):\",\r\n  },\r\n  \"Turnout Installed:\": { en: \"Turnout Installed:\", es: \"Participación instalada:\", fr: \"Participation installée:\" },\r\n  \"Track Panel Installed:\": {\r\n    en: \"Track Panel Installed:\",\r\n    es: \"Panel de seguimiento instalado:\",\r\n    fr: \"Panneau de suivi installé:\",\r\n  },\r\n  \"Ties Installed:\": { en: \"Ties Installed:\", es: \"Lazos instalados:\", fr: \"Liens installés:\" },\r\n  \"Surfacing out-of-face or spot surfacing:\": {\r\n    en: \"Surfacing out-of-face or spot surfacing:\",\r\n    es: \"Superficie exterior o superficie puntual:\",\r\n    fr: \"Revêtement extérieur ou surfaçage ponctuel:\",\r\n  },\r\n  \"Track cribbed, undercut, washout\": {\r\n    en: \"Track cribbed, undercut, washout\",\r\n    es: \"Pista cribbed, socavado, lavado\",\r\n    fr: \"Rail lit de bébé, dégagement, lavage\",\r\n  },\r\n  \"Track Buckle:\": { en: \"Track Buckle:\", es: \"Hebilla de pista:\", fr: \"Boucle de piste:\" },\r\n  \"Pull-apart:\": { en: \"Pull-apart:\", es: \"Separar:\", fr: \"Démonter:\" },\r\n  \"Other:(describe)\": { en: \"Other:(describe)\", es: \"Otro: (describir)\", fr: \"Autre: (décrire)\" },\r\n  \"Disturbance Corrected:\": { en: \"Disturbance Corrected:\", es: \"Perturbación corregida:\", fr: \"Perturbation corrigée:\" },\r\n  \"Adjusted Rail:Date\": { en: \"Adjusted Rail:Date\", es: \"Carril ajustado: fecha\", fr: \"Rail ajusté: date\" },\r\n  \"Adjust RNT\": { en: \"Adjust RNT\", es: \"Ajustar RNT\", fr: \"Ajuster RNT\" },\r\n  \"Reference mark distance:Before\": {\r\n    en: \"Reference mark distance:Before\",\r\n    es: \"Distancia de la marca de referencia: antes\",\r\n    fr: \"Distance de repère de référence: avant\",\r\n  },\r\n  After: { en: \"After\", es: \"Después\", fr: \"Après\" },\r\n  \"Rail Temperature\": { en: \"Rail Temperature\", es: \"Temperatura del carril\", fr: \"Température du rail\" },\r\n  \"Ballast Restored:Date\": { en: \"Ballast Restored:Date\", es: \"Lastre Restaurado: Fecha\", fr: \"Ballast restauré: Date\" },\r\n  \"Blast Compacted: Mechanical\": {\r\n    en: \"Blast Compacted: Mechanical\",\r\n    es: \"Explosión compactada: Mecánico\",\r\n    fr: \"Blast compacté: mécanique\",\r\n  },\r\n  \"Time and Tonnage\": { en: \"Time and Tonnage\", es: \"Tiempo y tonelaje\", fr: \"Temps et tonnage\" },\r\n  \"Alinement restored: Date\": { en: \"Alinement restored: Date\", es: \"Alineamiento restaurado: Fecha\", fr: \"Alinement restauré: Date\" },\r\n  \"Stakes Monitored:\": { en: \"Stakes Monitored:\", es: \"Apuestas supervisadas:\", fr: \"Enjeux surveillés:\" },\r\n  \"RNT Adjustment:\": { en: \"RNT Adjustment:\", es: \"Ajuste RNT:\", fr: \"Ajustement RNT:\" },\r\n  \"Restored Anchor pattern to standard or added to prevent movement:\": {\r\n    en: \"Restored Anchor pattern to standard or added to prevent movement:\",\r\n    es: \"Patrón de anclaje restaurado a estándar o agregado para evitar movimiento:\",\r\n    fr: \"Motif d'ancrage restauré à la norme ou ajouté pour empêcher le mouvement:\",\r\n  },\r\n  \"Other:\": { en: \"Other:\", es: \"Otro:\", fr: \"Autre:\" },\r\n  \"Speed Restriction place:(date and speed)\": {\r\n    en: \"Speed Restriction place:(date and speed)\",\r\n    es: \"Lugar de restricción de velocidad: (fecha y velocidad)\",\r\n    fr: \"Lieu de restriction de vitesse: (date et vitesse)\",\r\n  },\r\n  \"Speed Restriction removed:(date)\": {\r\n    en: \"Speed Restriction removed:(date)\",\r\n    es: \"Se eliminó la restricción de velocidad: (fecha)\",\r\n    fr: \"Restriction de vitesse supprimée: (date)\",\r\n  },\r\n  \"Name:\": { en: \"Name:\", es: \"Nombre:\", fr: \"Nom:\" },\r\n  \"Date: \": { en: \"Date: \", es: \"Fecha:\", fr: \"Date: \" },\r\n  \"Inspector(s): \": { en: \"Inspector(s): \", es: \"Inspectore(s): \", fr: \"Inspecteur(s): \" },\r\n  \"Weather: \": { en: \"Weather: \", es: \"Clima: \", fr: \"La météo: \" },\r\n  \"Operated Y/N\": { en: \"Operated Y/N\", es: \"Operado Y/N\", fr: \"Opéré O/N\" },\r\n  \"Gage at Point\": { en: \"Gage at Point\", es: \"Gage en el punto\", fr: \"Gage au point\" },\r\n  \"Guard Check Gage\": { en: \"Guard Check Gage\", es: \"Medidor de verificación de guardia\", fr: \"Jauge de contrôle de garde\" },\r\n  \"Guard Face Gage\": { en: \"Guard Face Gage\", es: \"Medidor de cara de guardia\", fr: \"Gage de visage de garde\" },\r\n  \"Defects/Comments\": { en: \"Defects/Comments\", es: \"Defectos / Comentarios\", fr: \"Défauts / Commentaires\" },\r\n  \"Defect Repaired\": { en: \"Defect Repaired\", es: \"Defecto reparado\", fr: \"Défaut réparé\" },\r\n  \"Switch and Side Track Inspection Form\": {\r\n    en: \"Switch and Side Track Inspection Form\",\r\n    es: \"Formulario de inspección de interruptores y vías laterales\",\r\n    fr: \"Formulaire d'inspection des interrupteurs et des rails latéraux\",\r\n  },\r\n  \"Track Inspection and Repair Report\": {\r\n    en: \"Track Inspection and Repair Report\",\r\n    es: \"Informe de inspección y reparación de seguimiento\",\r\n    fr: \"Suivi du rapport d'inspection et de réparation\",\r\n  },\r\n  \"Defects Inspection and Repair Report\": {\r\n    en: \"Defects Inspection and Repair Report\",\r\n    es: \"Informe de inspección y reparación de defectos\",\r\n    fr: \"Rapport d'inspection et de réparation des défauts\",\r\n  },\r\n  Support: { en: \"Support\", es: \"Apoyo\", fr: \"Soutien\" },\r\n  \"Switch Report\": { en: \"Switch Report\", es: \"Informe de cambio\", fr: \"Rapport de commutation\" },\r\n  \"Welcome Back\": { en: \"Welcome Back\", es: \"Dar una buena acogida\", fr: \"Bon retour\" },\r\n  \"Server unreachable\": { en: \"Server unreachable\", es: \"Servidor inalcanzable\", fr: \"Serveur inaccessible\" },\r\n  \"Issues Activity\": { en: \"Issues Activity\", es: \"Actividad de problemas\", fr: \"Activité du problème\" },\r\n  // \"ISSUES\": { en: \"Support\", es: \"Apoyo\", fr: \"Soutien\" },\r\n  \"Select Plannable Location\": { en: \"Select Plannable Location\", fr: \"Sélectionnez un emplacement planifiable\" },\r\n  \"Instruction File\": { en: \"Instruction File\", fr: \"Fichier d'instructions\" },\r\n  \"Validation failed , please fill required fields\": { en: \"Validation failed , please fill required fields\", fr: \"Validation échouée\" },\r\n  \"Pending Priority\": { en: \"Pending Priority\", fr: \"Priorité en attente\" },\r\n  \"AssetTypes Tests\": { en: \"AssetTypes Tests\", fr: \"Type d'actif Tests\" },\r\n  \"Unit of time\": { en: \"Unit of time\", es: 'Unidad de tiempo', fr: \"Unité de temps\" },\r\n  \"Fixed Assets Tests Reports\": { en: \"Fixed Assets Tests Reports\", es: \"Informes de pruebas de activos fijos\", fr: \"Rapports de tests d'immobilisations\" },\r\n  \"Test\": { en: \"Test\", es: \"Prueba\", fr: \"Tester\" },\r\n  \"Before you change the group, assign following inspection to other inspector\": { en: \"Before you change the group, assign following inspection to other inspector\", es: \"Antes de cambiar el grupo, asigne la siguiente inspección a otro inspector\", fr: \"Avant de modifier le groupe, attribuez l'inspection suivante à un autre inspecteur\" },\r\n  \"is currently assigned to a Team. If you change the role, this team member will be removed from current team and will need to be re-assigned to a new team\": { en: \"is currently assigned to a Team. If you change the role, this team member will be removed from current team and will need to be re-assigned to a new team\", es: \"está actualmente asignado a un equipo. Si cambia el rol, este miembro del equipo será eliminado del equipo actual y deberá ser reasignado a un nuevo equipo.\", fr: \"est actuellement affecté à une équipe. Si vous modifiez le rôle, ce membre de l'équipe sera supprimé de l'équipe actuelle et devra être réaffecté à une nouvelle équipe\" },\r\n  \"is currently leading a Team. If you change the role, team will no longer exist and team members will need to be re-assigned to a new team\": { en: \"is currently leading a Team. If you change the role, team will no longer exist and team members will need to be re-assigned to a new team\", es: \"actualmente lidera un equipo. Si cambia el rol, el equipo dejará de existir y los miembros del equipo deberán ser reasignados a un nuevo equipo\", fr: \"dirige actuellement une équipe. Si vous modifiez le rôle, l'équipe n'existera plus et les membres de l'équipe devront être réaffectés à une nouvelle équipe\" },\r\n  \"Select atleast one recipient\": { en: \"Select atleast one recipient\", es: \"Seleccione al menos una destinataria\", fr: \"Sélectionnez au moins un destinataire\" },\r\n  \"Please provide time value greater than\": { en: \"Please provide time value greater than\", es: \"Proporcione un valor de tiempo superior a\", fr: \"Veuillez fournir une valeur de temps supérieure à\" },\r\n  Event: { en: 'Event', es: 'Evento', fr: 'un événement' },\r\n  Alert: { en: 'Alert', es: 'Alerta', fr: 'Alerte' },\r\n  Alerts: { en: 'Alerts', es: 'Alertas', fr: 'Alertes' },\r\n  Manage: { en: 'Manage', es: 'Gestionar', fr: 'Gérer' },\r\n  Field: { en: 'Field', es: 'Campo', fr: 'Champ' },\r\n  is: { en: 'is', es: 'es', fr: 'est' },\r\n  before: { en: 'Before', es: 'antes de', fr: 'avant' },\r\n  after: { en: 'After', es: 'después', fr: 'après' },\r\n  minutes: { en: 'Minutes', es: 'minutos', fr: 'minutes' },\r\n  hours: { en: 'Hours', es: 'horas', fr: 'heures' },\r\n  required: { en: 'required', es: 'necesario', fr: 'obligatoire' },\r\n  months: { en: 'Months', es: 'meses', fr: 'obligatoire' },\r\n  web: { en: 'Web', es: 'web', fr: 'la toile' },\r\n  \"Select Field\": { en: 'Select Field', es: 'Seleccionar campo', fr: 'Sélectionnez un champ' },\r\n  \"Expiry Date\": { en: 'Expiry Date', es: 'Fecha de caducidad', fr: \"Date d'expiration\" },\r\n  \"Inspection Date\": { en: 'Inspection Date', es: 'Fecha de inspección', fr: \"Date d'inspection\" },\r\n  \"Location (milepost)\": { en: \"Location (milepost)\", es: \"Ubicación (poste de milla)\", fr: \"Emplacement (milepost)\" },\r\n  \"Signal and crossing\": { en: \"Signal and crossing\", es: \"Signal and crossing\", fr: \"Passage à niveau et Signaux\" },\r\n  Tables: { en: \"Tables\", es: \"Mesas\", fr: \"Tables\" },\r\n  \"Please enter your Start Milepost before starting inspection\": { en: \"Please enter your Start Milepost before starting inspection\", es: \"Ingrese su poste de referencia de inicio antes de comenzar la inspección\", fr: \"Veuillez entrer le millage de départ avant de commencer l'inspection\" },\r\n  \"Please enter the start Milepost\": { en: \"Please enter the start Milepost\", es: \"Introduzca el poste de la milla de inicio\", fr: \"Veuillez entrer le millage de départ\" },\r\n  \"End Milepost is not within the range\": { en: \"End Milepost is not within the range\", es: \"End Milepost no está dentro del rango\", fr: \"Le milage finale n'est pas dans la plage\" },\r\n  \"Please enter the end Milepost\": { en: \"Please enter the end Milepost\", es: \"Ingrese el poste de la milla final\", fr: \"Veuillez entrer le millage final\" },\r\n  \"Start Milepost is not within the range\": { en: \"Start Milepost is not within the range\", es: \"Inicio Milepost no está dentro del rango\", fr: \"Le millage de départ n'est pas dans la plage\" },\r\n  \"Fixed Assets\": { en: \"Fixed Assets\", es: \"Activos fijos\", fr: \"Actifs Fixes\" },\r\n  \"Loading Report\": { en: \"Loading Report\", es: \"Cargando informe\", fr: \"Rapport en chargement\" },\r\n  \"Time and GPS Report\": { en: \"Time and GPS Report\", es: \"Informe de tiempo y GPS\", fr: \"Rapport temps et GPS\" },\r\n  \"Select Asset\": { en: \"Select Asset\", es: \"Seleccionar activo\", fr: \"Sélectionnez un actif\" },\r\n  \"Task Dashboard\": { en: \"Task Dashboard\", es: \"Panel de tareas\", fr: \"Tableau de bord des tâches\" },\r\n  \"Do you really want to end run?\": { en: \"Do you really want to end run?\", es: \"De verdad quieres terminar la carrera?\", fr: \"Voulez-vous vraiment terminer la course?\" },\r\n  \"End Run?\": { en: \"End Run?\", es: \"Finalizar ejecución?\", fr: \"Compléter la tournée?\" },\r\n  \"Start Run?\": { en: \"Start Run?\", es: \"Empieza a correr?\", fr: \"Démarrer la tournée?\" },\r\n  \"Do you really want to Start Run?\": { en: \"Do you really want to Start Run?\", es: \"Vía o riel\", fr: \"Voulez-vous vraiment démarrer la trounée?\" },\r\n  \"Please wait! Finishing Inspection\": { en: \"Please wait! Finishing Inspection\", es: \"Por favor espera! Inspección de acabado\", fr: \"S'il vous plaît, attendez! Compléter l'inspection\" },\r\n  \"Please complete all runs to close session\": { en: \"Please complete all runs to close session\", es: \"Complete todas las ejecuciones para cerrar la sesión\", fr: \"Veuillez compléter toutes les routes pour fermer la session\" },\r\n  \"View Active Run\": { en: \"View Active Run\", es: \"Ver ejecución activa\", fr: \"Afficher la tournée active\" },\r\n  \"Run Closed!\": { en: \"Run Closed!\", es: \"Corre cerrado!\", fr: \"Tourné fermé!\" },\r\n  \"Select Inspection Run\": { en: \"Select Inspection Run\", es: \"Seleccionar ejecución de inspección\", fr: \"Sélectionner la trounée d'inspection\" },\r\n  \"Defects / Deficiencies\": { en: \"Defects / Deficiencies\", es: \"Defectos / Deficiencias\", fr: \"Défault /Déviation\" },\r\n  \"Choose File\": { en: 'Choose File', es: 'Elija el archivo', fr: 'Alerte en double' },\r\n  \"Alert event\": { en: 'Alert event', es: 'Evento de alerta', fr: \"Événement d'alerte\" },\r\n  \"cannot be selected\": { en: 'cannot be selected', es: 'no se puede seleccionar', fr: \"ne peut pas être sélectionné\" },\r\n\r\n  \"Duplicate alert\": { en: 'Duplicate alert', es: 'Alerta duplicada', fr: 'Choisir le fichier' },\r\n  \"Setup alert for inspection\": { en: 'Setup alert for inspection', es: 'Configurar alerta para inspección', fr: 'Alerte de configuration pour inspection' },\r\n  \"Confirm Role Change\": { en: 'Confirm Role Change', es: 'Confirmar cambio de rol', fr: 'Confirmer le changement de rôle' },\r\n  \"Do you want to proceed\": { en: 'Do you want to proceed', es: 'Quieres proceder', fr: 'Voulez-vous poursuivre' },\r\n  \"Please first save/cancel unsaved rules\": { en: 'Please first save/cancel unsaved rules', es: 'Primero, guarde / cancele las reglas no guardadas', fr: \"Veuillez d'abord enregistrer / annuler les règles non enregistrées\" },\r\n  \"Report Name\": { en: 'Report Name', es: 'Reportar nombre', fr: 'Nom du rapport' },\r\n  \"Date\": { en: 'Date', es: 'fecha', fr: 'Date' },\r\n  \"Date / Technician\": { en: 'Date / Technician', es: 'Fecha / Técnico', fr: 'Date / Technicien' },\r\n  \"Inspected\": { en: 'Inspected', es: 'Inspeccionado', fr: 'Inspecté' },\r\n  \"Type: SPL 165/10 elements\": { en: 'Type: SPL 165/10 elements', es: 'Tipo: SPL 165/10 elementos', fr: 'Type:SPL 165/10 éléments' },\r\n  \"Installation date\": { en: 'Installation date', es: 'Fecha de instalación', fr: 'Date installation' },\r\n  \"charger\": { en: 'charger', es: 'cargador', fr: 'chargeur' },\r\n  \"Batteries\": { en: 'Batteries', es: 'pilas', fr: 'batteries' },\r\n  \"Loss to earth (rule 303)\": { en: 'Loss to earth (rule 303)', es: 'Pérdida a tierra (regla 303)', fr: 'Loss to earth (rule 303)' },\r\n  \"Voltage per cell (Without charger)\": { en: 'Voltage per cell (Without charger)', es: 'Voltaje por celda (sin cargador)', fr: 'Tension par élément (Sans chargeur)' },\r\n  \"With\": { en: 'With', es: 'Con', fr: 'Avec' },\r\n  \"Without\": { en: 'Without', es: 'Sin', fr: 'Sans' },\r\n  \"Comments (addition of distilled water, etc.)\": { en: 'Comments (addition of distilled water, etc.)', es: 'Comentarios (adición de agua destilada, etc.)', fr: 'Commentaires (ajout de l’eau distillée, etc.)' },\r\n  \"Type: SPL 340/20 elements\": { en: 'Type: SPL 340/20 elements', es: 'Comentarios (adición de agua destilada, etc.)', fr: 'Type: éléments SPL 340/20' },\r\n  \"Margins-GI335 tracking\": { en: 'Margins-GI335 tracking', es: 'Seguimiento de márgenes-GI335', fr: 'Suivi margins-GI335' },\r\n  \"Main track\": { en: 'Main track', es: 'Pista principal', fr: 'Voie principale' },\r\n  \"Siding\": { en: 'Siding', es: 'Con', fr: 'Avec' },\r\n  \"Length of First Half\": { en: 'Length of First Half', es: 'Duración de la primera mitad', fr: 'Longueur de voi First Half' },\r\n  \"Margin Second Half\": { en: 'Margin Second Half', es: 'Margen Segunda mitad', fr: 'Margin Second Half' },\r\n  \"Second Half Length\": { en: 'Second Half Length', es: 'Longitud de la segunda mitad', fr: 'Longueur de voi Second Half' },\r\n  \"Margin First Half\": { en: 'Margin First Half', es: 'Margen de la primera mitad', fr: 'Margin First Half' },\r\n  \"Comments\": { en: 'Comments', es: 'Comentarios', fr: 'Commentaires' },\r\n  \"Verified By\": { en: 'Verified By', es: 'verificada por', fr: 'vérifié par' },\r\n  \"MONTHLY INSPECTION OF SWITCHES\": { en: 'MONTHLY INSPECTION OF SWITCHES', es: 'INSPECCIÓN MENSUAL DE INTERRUPTORES', fr: 'INSPECTION MENSUELLE DES INTERRUPTEURS' },\r\n  \"ANNUAL INSPECTION OF SWITCHES\": { en: 'ANNUAL INSPECTION OF SWITCHES', es: 'INSPECCIÓN ANUAL DE INTERRUPTORES', fr: 'INSPECTION ANNUELLE DES INTERRUPTEURS' },\r\n  \"QNS & L RAILWAY\": { en: 'QNS & L RAILWAY', es: 'FERROCARRIL QNS Y L', fr: 'CHEMIN DE FER QNS&L' },\r\n  \"MONTHLY SWITCH INSPECTION\": { en: 'MONTHLY SWITCH INSPECTION', es: 'INSPECCIÓN MENSUAL DEL INTERRUPTOR', fr: 'INSPECTION MENSUELLE DES AIGUILLAGES' },\r\n  \"PLACE:\": { en: 'PLACE:', es: 'SITIO:', fr: 'ENDROIT:' },\r\n  \"INSPECTOR:\": { en: 'INSPECTOR:', es: 'INSPECTOR:', fr: 'INSPECTEUR:' },\r\n  \"CHECKS\": { en: 'CHECKS', es: 'COMPROBACIONES', fr: 'VÉRIFICATIONS' },\r\n  \"TOLERANCES\": { en: 'TOLERANCES', es: 'Tolerancias', fr: 'TOLÉRANCES' },\r\n  \"MEASURES\": { en: 'MEASURES', es: 'MEDIDAS', fr: 'MESURES' },\r\n  \"NOTES \": { en: 'NOTES ', es: 'NOTAS ', fr: 'REMARQUES ' },\r\n  \"NEEDLE STROKE LINEARITY OF THE TIP\": { en: 'NEEDLE STROKE LINEARITY OF THE TIP', es: 'LINEALIDAD DEL TRAZO DE AGUJA DE LA PUNTA', fr: 'COURSE DES AIGUILLES LINÉARITÉ DE LA POINTE' },\r\n  \"1st ROD\": { en: '1ST ROD', es: '1ª VARILLA', fr: '1ÈRE ROD' },\r\n  \"2ND ROD\": { en: '2ND ROD', es: '2ª VARILLA', fr: '2IÈME ROD' },\r\n  \"3RD ROD\": { en: '3RD ROD', es: '3ª VARILLA', fr: '3IÈME ROD' },\r\n  \"COUNTER RAIL / GUARD RAIL PROTECTION RATING\": { en: 'COUNTER RAIL / GUARD RAIL PROTECTION RATING', es: 'CLASIFICACIÓN DE PROTECCIÓN DE RIEL CONTRA / GUARDARRIL', fr: 'COTE DE PROTECTION DU CONTRE-RAIL / GUARD RAIL' },\r\n  \"CROSSING HEART POINT PROTECTION RATING\": { en: 'CROSSING HEART POINT PROTECTION RATING', es: 'CLASIFICACIÓN DE PROTECCIÓN DEL PUNTO CORAZÓN CRUZADO', fr: 'COTE DE PROTECTION POINTE DU CŒUR DE CROISEMENT' },\r\n  \"VISUAL INSPECTION\": { en: 'VISUAL INSPECTION', es: 'INSPECCIÓN VISUAL', fr: 'INSPECTION VISUELLE' },\r\n  \"(GOLD COLOR ITEMS = ANNUAL INSPECTION ONLY)\": { en: '(GOLD COLOR ITEMS = ANNUAL INSPECTION ONLY)', es: '(ARTÍCULOS DE COLOR ORO = INSPECCIÓN ANUAL ÚNICAMENTE)', fr: '(LES ITEMS COULEUR OR = INSPECTION ANNUELLE SEULEMENT)' },\r\n  \"GOOD CONDITION\": { en: 'GOOD CONDITION', es: 'BUEN ESTADO', fr: 'BON ÉTAT' },\r\n  \"ADJUST\": { en: 'ADJUST', es: 'AJUSTAR', fr: 'AJUSTER' },\r\n  \"REPLACE\": { en: 'REPLACE', es: 'REEMPLAZAR', fr: 'REMPLACER' },\r\n  \"DESCRIPTION\": { en: 'DESCRIPTION', es: 'DESCRIPCIÓN', fr: 'DESCRIPTION' },\r\n  \"GLUE TIP WELL IN NORMAL POSITION\": { en: 'GLUE TIP WELL IN NORMAL POSITION', es: 'PUNTA DE PEGAMENTO BIEN EN POSICIÓN NORMAL', fr: 'POINTE COLLE BIEN EN POSITION NORMALE' },\r\n  \"GLUE TIP WELL IN INVERTED POSITION\": { en: 'GLUE TIP WELL IN INVERTED POSITION', es: 'PUNTA DE PEGAMENTO BIEN EN POSICIÓN INVERTIDA', fr: 'POINTE COLLE BIEN EN POSITION RENVERSÉE' },\r\n  'TIP RAISING (1/4\") C / E - C / N': { en: 'TIP RAISING (1/4\") C / E - C / N', es: 'ELEVACIÓN DE PUNTA (1/4 \") C / E - C / N', fr: 'TIP RAISING (1/4 \") C / E - C / N' },\r\n  'TIP RAISING (1/4 \") C / O - C / S': { en: 'TIP RAISING (1/4 \") C / O - C / S', es: 'ELEVACIÓN DE PUNTA (1/4 \") C / O - C / S', fr: 'SURÉLÉVATION DE LA POINTE (1/4\") C/O - C/S' },\r\n  \"C / O - C / S TIP CONDITION\": { en: 'C / O - C / S TIP CONDITION', es: 'CONDICIÓN DE PUNTA C / O - C / S', fr: 'CONDITION DE LA POINTE C/O - C/S' },\r\n  \"C / E POINT CONDITION - C / N\": { en: 'C / E POINT CONDITION - C / N', es: 'ESTADO PUNTO C / E - C / N', fr: 'CONDITION DE LA POINTE C/E - C/N' },\r\n  \"HEEL-BLOCK BOLTS C / O - C / S (HEEL-BLOCK BOLTS)\": { en: 'HEEL-BLOCK BOLTS C / O - C / S (HEEL-BLOCK BOLTS)', es: 'PERNOS DE BLOQUE DE TALÓN C / O - C / S (PERNOS DE BLOQUE DE TALÓN)', fr: 'BOULONS TALON DE LA POINTE C/O - C/S (HEEL-BLOCK BOLTS)' },\r\n  \"HEEL-BLOCK BOLTS C / E - C / N TALON BOLTS\": { en: 'HEEL-BLOCK BOLTS C / E - C / N TALON BOLTS', es: 'TORNILLOS TALÓN C / E - C / N PERNOS TALON', fr: 'BOULONS TALON DE LA POINTE C/E - C/N (HEEL-BLOCK BOLTS)' },\r\n  \"LEVELING HEEL OF POINT C / O - C / S (HEEL-BLOCK)\": { en: 'LEVELING HEEL OF POINT C / O - C / S (HEEL-BLOCK)', es: 'NIVELADOR DE TALÓN PUNTO C / O - C / S (HEEL-BLOCK)', fr: 'NIVELLEMENT TALON DE LA POINTE C/O - C/S (HEEL-BLOCK)' },\r\n  \"LEVELING HEEL OF TIP C / E - C / N (HEEL-BLOCK)\": { en: 'LEVELING HEEL OF TIP C / E - C / N (HEEL-BLOCK)', es: 'TALÓN NIVELADOR DE PUNTA C / E - C / N (HEEL-BLOCK)', fr: 'NIVELLEMENT TALON DE LA POINTE C/E - C/N (HEEL-BLOCK)' },\r\n  \"C / O - C / S COUNTER-PLUG (BRACE-BLOCK)\": { en: 'C / O - C / S COUNTER-PLUG (BRACE-BLOCK)', es: 'C / O - C / S CONTADOR-ENCHUFE (BLOQUE DE BRIDA)', fr: 'CONTRE-FICHE C/O - C/S (BRACE-BLOCK)' },\r\n  \"COUNTER-PLUG C / E - C / N (BRACE-BLOCK)\": { en: 'COUNTER-PLUG C / E - C / N (BRACE-BLOCK)', es: 'CONTENEDOR C / E - C / N (BRACE-BLOCK)', fr: 'CONTRE-FICHE C/E - C/N (BRACE-BLOCK)' },\r\n  \"C / O - C / S STUD BOLTS (BRACE-BLOCK BOLTS)\": { en: 'C / O - C / S STUD BOLTS (BRACE-BLOCK BOLTS)', es: 'PERNOS DE PERNOS C / O - C / S (PERNOS DE BLOQUE DE APOYO)', fr: 'BOULONS DE CONTRE-FICHE C/O - C/S (BRACE-BLOCK BOLTS)' },\r\n  \"C / E - C / N STUD BOLTS (BRACE-BLOCK BOLTS)\": { en: 'C / E - C / N STUD BOLTS (BRACE-BLOCK BOLTS)', es: 'C / E - PERNOS DE ESPÁRRAGO C / N (PERNOS DE BLOQUE DE REFUERZO)', fr: 'BOULONS DE CONTRE-FICHE C/E - C/N (BRACE-BLOCK BOLTS)' },\r\n  \"COUNTER-NEEDLE C / O - C / S (STOCK-RAIL)\": { en: 'COUNTER-NEEDLE C / O - C / S (STOCK-RAIL)', es: 'CONTRA-AGUJA C / O - C / S (STOCK-RAIL)', fr: 'CONTRE-AIGUILLE C/O - C/S (STOCK-RAIL)' },\r\n  \"COUNTER-NEEDLE C / E - C / N (STOCK-RAIL)\": { en: 'COUNTER-NEEDLE C / E - C / N (STOCK-RAIL)', es: 'CONTRA-AGUJA C / E - C / N (STOCK-RAIL)', fr: 'CONTRE-AIGUILLE C/E - C/N (STOCK-RAIL)' },\r\n  \"SPACING RODS (RODS)\": { en: 'SPACING RODS (RODS)', es: 'VARILLAS ESPACIADORAS (VARILLAS)', fr: \"TRINGLES D'ÉCARTEMENT (RODS)\" },\r\n  \"SPACING LINK BOLTS(RODS BOLTS)\": { en: 'SPACING LINK BOLTS(RODS BOLTS)', es: 'PERNOS DE ESLABONES ESPACIADORES', fr: \"BOULONS DES TRINGLES D'ÉCARTEMENT(RODS BOLTS)\" },\r\n  \"PINS\": { en: 'PINS', es: 'PATAS', fr: 'GOUPILLES' },\r\n  \"SLIDING SADDLES (FLAT)\": { en: 'SLIDING SADDLES (FLAT)', es: 'SILLAS DESLIZANTES (PLANAS)', fr: 'SELLES DE GLISSEMENT (PLATES)' },\r\n  \"STUDS AND ATTACHMENT SYSTEM\": { en: 'STUDS AND ATTACHMENT SYSTEM', es: 'PERNOS Y SISTEMA DE FIJACIÓN', fr: \"CRAMPONS ET SYSTÈME D'ATTACHE\" },\r\n  \"HEART\": { en: 'HEART', es: 'CORAZÓN', fr: 'CŒUR' },\r\n  \"CORE OF GROWTH (FROG)\": { en: 'CORE OF GROWTH (FROG)', es: 'NÚCLEO DEL CRECIMIENTO (RANA)', fr: 'CŒUR DE CROISSEMENT (FROG)' },\r\n  \"BOLTS OF THE GROWTH CORE\": { en: 'BOLTS OF THE GROWTH CORE', es: 'PERNOS DEL NÚCLEO DE CRECIMIENTO', fr: 'BOULONS DU CŒUR DE CROISSEMENT' },\r\n  \"TIP SIDE KEYS WHEELS\": { en: 'TIP SIDE KEYS WHEELS', es: 'PUNTA LLAVES LATERALES RUEDAS', fr: 'ROUES TOUCHES CÔTÉ POINTE' },\r\n  \"WHEELS WING SIDE KEYS\": { en: 'WHEELS WING SIDE KEYS', es: 'RUEDAS LLAVES LATERALES ALA', fr: 'ROUES TOUCHES CÔTÉ AILES' },\r\n  \"CROWD HEART SADDLES (FLAT)\": { en: 'CROWD HEART SADDLES (FLAT)', es: 'SILLINES CROWD HEART (PLANAS)', fr: 'SELLES DU CŒUR DE CROISSEMENT (PLATES)' },\r\n  \"CRAMPONS, ATTACHMENT SYSTEM\": { en: 'CRAMPONS, ATTACHMENT SYSTEM', es: 'CRAMPONES, SISTEMA DE FIJACIÓN', fr: \"CRAMPONS, SYSTÈME D'ATTACHE\" },\r\n  \"COUNTER RAIL C / O - C / S (GUARD-RAIL)\": { en: 'COUNTER RAIL C / O - C / S (GUARD-RAIL)', es: 'CONTRA CARRIL C / O - C / S (GUARD-RAIL)', fr: 'CONTRE-RAIL C/O - C/S (GUARD-RAIL)' },\r\n  \"COUNTER RAIL C / E - C / N (GUARD-RAIL)\": { en: 'COUNTER RAIL C / E - C / N (GUARD-RAIL)', es: 'CONTRA CARRIL C / E - C / N (GUARDARRIL)', fr: 'CONTRE-RAIL C/E - C/N (GUARD-RAIL)' },\r\n  \"ADJUST C / O - C / S PROTECTION RATING\": { en: 'ADJUST C / O - C / S PROTECTION RATING', es: 'AJUSTE CLASIFICACIÓN DE PROTECCIÓN C / O - C / S', fr: 'AJUSTER COTE DE PROTECTION C/O - C/S' },\r\n  \"ADJUST PROTECTION RATING C / E - C / N\": { en: 'ADJUST PROTECTION RATING C / E - C / N', es: 'AJUSTE LA CLASIFICACIÓN DE PROTECCIÓN C / E - C / N', fr: 'AJUSTER COTE DE PROTECTION C/E - C/N' },\r\n  \"C / O - C / S COUNTER RAIL BOLTS (GUARD RAIL)\": { en: 'C / O - C / S COUNTER RAIL BOLTS (GUARD RAIL)', es: 'C / O - PERNOS DE CARRIL CONTRA C / S (CARRIL DE PROTECCIÓN)', fr: 'BOULONS DU CONTRE-RAIL C/O - C/S (GUARD-RAIL)' },\r\n  \"C / E - C / N COUNTER RAIL BOLTS (GUARD RAIL)\": { en: 'C / E - C / N COUNTER RAIL BOLTS (GUARD RAIL)', es: 'C / E - C / N PERNOS DE CARRIL CONTRA (CARRIL DE PROTECCIÓN)', fr: 'BOULONS DU CONTRE-RAIL C/E - C/N (GUARD-RAIL)' },\r\n  \"LEVELING AND ALIGNMENT\": { en: 'LEVELING AND ALIGNMENT', es: 'NIVELACIÓN Y ALINEACIÓN', fr: 'NIVELLEMENT ET ALIGNEMENT' },\r\n  \"BALLAST AND SHOULDER CONDITION\": { en: 'BALLAST AND SHOULDER CONDITION', es: 'ESTADO DE LASTRE Y HOMBROS', fr: \"ÉTAT DU BALLAST ET DE L'ÉPAULEMENT\" },\r\n  \"LEVELING AND ALIGNMENT (DATA FROM 454)\": { en: 'LEVELING AND ALIGNMENT (DATA FROM 454)', es: 'NIVELACIÓN Y ALINEACIÓN (DATOS DE 454)', fr: 'NIVELLEMENT ET ALIGNEMENT (DONNÉES DU 454)' },\r\n  \"SLEEPING CONDITION (TIES)\": { en: 'SLEEPING CONDITION (TIES)', es: 'CONDICIÓN PARA DORMIR (LAZOS)', fr: 'CONDITION DES DORMANTS (TIES)' },\r\n  \"BEFORE POINTS\": { en: 'BEFORE POINTS', es: 'ANTES DE LOS PUNTOS', fr: 'AVANT DES POINTES' },\r\n  \"BEFORE CROSSING HEART (FROG)\": { en: 'BEFORE CROSSING HEART (FROG)', es: 'ANTES DE CRUZAR EL CORAZÓN (RANA)', fr: 'AVANT COEUR DE CROISEMENT (FROG)' },\r\n  \"INSULATED JOINTS VE C / O - C / S\": { en: 'INSULATED JOINTS VE C / O - C / S', es: 'JUNTAS AISLADAS VE C / O - C / S', fr: 'JOINTS ISOLÉS VE C/O - C/S' },\r\n  \"INSULATED JOINTS VE C / E - C / N\": { en: 'INSULATED JOINTS VE C / E - C / N', es: 'JUNTAS AISLADAS VE C / E - C / N', fr: 'JOINTS ISOLÉS VE C/E - C/N' },\r\n  \"INSULATED GASKETS VP C / O - C / S\": { en: 'INSULATED GASKETS VP C / O - C / S', es: 'JUNTAS AISLADAS VP C / O - C / S', fr: 'JOINTS ISOLÉS VP C/O - C/S' },\r\n  \"INSULATED GASKETS VP C / E - C / N\": { en: 'INSULATED GASKETS VP C / E - C / N', es: 'JUNTAS AISLADAS VP C / E - C / N', fr: 'JOINTS ISOLÉS VP C/E - C/N' },\r\n  \"RAIL\": { en: 'RAIL', es: 'CARRIL', fr: 'RAIL' },\r\n  \"OTHER COMPONENTS\": { en: 'OTHER COMPONENTS', es: 'OTROS COMPONENTES', fr: 'AUTRES COMPOSANTES' },\r\n  \"PADLOCKS LOCKED AND IN GOOD CONDITION\": { en: 'PADLOCKS LOCKED AND IN GOOD CONDITION', es: 'CANDADOS CERRADOS Y EN BUEN ESTADO', fr: 'CADENAS VÉRROUILLÉ ET EN BON ÉTAT' },\r\n  \"5 TO 10 FEET BEFORE THE NEEDLES\": { en: '5 TO 10 FEET BEFORE THE NEEDLES', es: '5 A 10 PIES ANTES DE LAS AGUJAS', fr: '5 À 10 PIEDS AVANT LES AIGUILLES' },\r\n  \"V / E AT THE HEEL SPACER\": { en: 'V / E AT THE HEEL SPACER', es: 'V / E EN EL ESPACIADOR DEL TALÓN', fr: \"V/E À L'ENTRETOISE DU TALON\" },\r\n  \"V / E AT THE MIDDLE POINT OF THE INTERMEDIATE RAIL\": { en: 'V / E AT THE MIDDLE POINT OF THE INTERMEDIATE RAIL', es: 'V / E EN EL PUNTO MEDIO DEL RIEL INTERMEDIO', fr: 'V/E AU POINT MÉDIAN DU RAIL INTERMÉDIAIRE' },\r\n  \"V / E AFTER THE CROSSING CORE\": { en: 'V / E AFTER THE CROSSING CORE', es: 'V / E DESPUÉS DEL NÚCLEO CRUZADO', fr: 'V/E APRÈS LE CŒUR DE CROISEMENT' },\r\n  \"V / E 20 FEET AFTER THE CROSSING CORE\": { en: 'V / E 20 FEET AFTER THE CROSSING CORE', es: 'V / E 20 PIES DESPUÉS DEL NÚCLEO QUE CRUCE', fr: 'V/E 20 PIEDS APRÈS LE CŒUR DE CROISEMENT' },\r\n  \"V / E 40 FEET AFTER THE CROSSING CORE\": { en: 'V / E 40 FEET AFTER THE CROSSING CORE', es: 'V / E 40 PIES DESPUÉS DEL NÚCLEO QUE CRUCE', fr: 'V/E 40 PIEDS APRÈS LE CŒUR DE CROISEMENT' },\r\n  \"COMMENTS:\": { en: 'COMMENTS:', es: 'COMENTARIOS:', fr: 'COMMENTAIRES:' },\r\n  \"BM CODE\": { en: 'BM CODE', es: 'CÓDIGO BM', fr: 'CODE DU BM' },\r\n  \"BM DATE\": { en: 'BM DATE', es: 'FECHA BM', fr: 'DATE DU BM' },\r\n  \"SIGNATURE\": { en: 'SIGNATURE', es: 'FIRMA', fr: 'SIGNATURE' },\r\n  \"DATED\": { en: 'DATED', es: 'CON FECHA DE', fr: 'DATE' },\r\n  \"CROWN CORE SECTION\": { en: \"CROWN CORE SECTION\", es: \"SECCIÓN NÚCLEO DE LA CORONA\", fr: \"SECTION DU CŒUR DE CROISSEMENT\" },\r\n  \"GENERAL ASPECT OF SWITCHING\": { en: 'GENERAL ASPECT OF SWITCHING', es: 'ASPECTO GENERAL DE CONMUTACIÓN', fr: \"ASPECT GÉNÉRAL DE L'AIGUILLAGE\" },\r\n  \"TRACK DEVIATION\": { en: 'TRACK DEVIATION', es: 'DESVIACIÓN DE PISTA', fr: 'ÉCARTEMENT DE LA VOIE' },\r\n  \"INSPECTION MENSUELLE DES INTERRUPTEURS\": {\r\n    en: \"MONTHLY INSPECTION OF SWITCHES\",\r\n    es: \"INSPECCIÓN MENSUAL DE INTERRUPTORES\",\r\n    fr: \"INSPECTION MENSUELLE DES INTERRUPTEURS\",\r\n  },\r\n  \"INSPECTION ANNUELLE DES INTERRUPTEURS\": {\r\n    en: \"ANNUAL INSPECTION OF SWITCHES\",\r\n    es: \"INSPECCIÓN ANUAL DE INTERRUPTORES\",\r\n    fr: \"INSPECTION ANNUELLE DES INTERRUPTEURS\",\r\n  },\r\n  \"TIPS SECTION\": { en: 'TIPS SECTION', es: 'SECCIÓN DE CONSEJOS', fr: 'SECTION DES POINTES' },\r\n  \"is currently assigned to a Team. If you delete this user, this team member will be removed from current team\": { en: 'is currently assigned to a Team. If you delete this user, this team member will be removed from current team', es: 'está actualmente asignado a un equipo. Si elimina este usuario, este miembro del equipo se eliminará del equipo actual', fr: 'est actuellement affecté à une équipe. Si vous supprimez cet utilisateur, ce membre de l\\'équipe sera supprimé de l\\'équipe actuelle' },\r\n  \"is currently leading a Team. If you delete this user, team will no longer exist and team members will need to be re-assigned to a new team\": { en: 'is currently leading a Team. If you delete this user, team will no longer exist and team members will need to be re-assigned to a new team', es: 'actualmente lidera un equipo. Si elimina este usuario, el equipo dejará de existir y los miembros del equipo deberán ser reasignados a un nuevo equipo.', fr: \"dirige actuellement une équipe. Si vous supprimez cet utilisateur, l'équipe n'existera plus et les membres de l'équipe devront être réaffectés à une nouvelle équipe\" },\r\n  \"Notifications\": { en: \"Notifications\", es: \"Notificaciones\", fr: \"Notifications\" },\r\n  \"Cannot delete user with assigned inspections\": { en: \"Cannot delete user with assigned inspections\", es: \"No se puede eliminar al usuario con inspecciones asignadas\", fr: \"Impossible de supprimer l'utilisateur avec des inspections attribuées\" },\r\n\r\n\r\n  \"Email is not valid\": { en: \"Email is not valid\", es: \"El correo no es válido\", fr: \"L'email n'est pas valide\" },\r\n  \"Date Repaired\": { en: 'Date Repaired', es: 'Fecha de reparación', fr: 'Date de réparation' },\r\n  \"Line Inspection & Repair Report\": { en: 'Line Inspection & Repair Report', es: 'Informe de inspección y reparación de línea', fr: 'Rapport d\\'inspection et de réparation de ligne' },\r\n  \"Line Inspection Report\": { en: 'Line Inspection Report', es: 'Informe de reparación de inspección de línea', fr: 'Rapport de réparation d\\'inspection de ligne' },\r\n  \"Select All\": { en: 'Select All', es: 'Seleccionar todo', fr: 'Tout sélectionner' },\r\n  \"Is this Historical Data\": { en: 'Is this Historical Data', es: 'Son estos datos históricos', fr: 'Ces données historiques' },\r\n  \"This MR has been marked as historical. Saving now will close this MR and cannot be changed later\": { en: 'This MR has been marked as historical. Saving now will close this MR and cannot be changed later', es: 'Este MR ha sido marcado como histórico. Guardar ahora cerrará este MR y no se puede cambiar más tarde', fr: 'Ce MR a été marqué comme historique. Enregistrer maintenant fermera ce MR et ne pourra pas être modifié plus tard' },\r\n  \"Confirm MR To Historical\": {\r\n    en: \"Confirm MR To Historical\",\r\n    es: \"Confirmar MR a histórico\",\r\n    fr: \"Confirmer MR à l'historique\",\r\n  },\r\n  \"This MR has been marked as historical. Saving now will close this MR and cannot be changed later.\": { en: \"This MR has been marked as historical. Saving now will close this MR and cannot be changed later.\", es: \"Este MR ha sido marcado como histórico. Guardar ahora cerrará este MR y no se puede cambiar más adelante.\", fr: \"Ce MR a été marqué comme historique. Enregistrer maintenant fermera ce MR et ne pourra pas être modifié plus tard.\" },\r\n  \"Do you want to proceed ?\": { en: \"Do you want to proceed ?\", es: \"Quieres proceder ?\", fr: \"Voulez-vous poursuivre ?\" },\r\n  \"Line Inspection and Repair Report\": {\r\n    en: \"Line Inspection and Repair Report\",\r\n    es: \"Informe de inspección y reparación de líneas\",\r\n    fr: \"Rapport d'inspection et de réparation de ligne\",\r\n  },\r\n};\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\TopBar\\navBarItems.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\actions.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\UserModule\\UpdatePassword.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\permissionCheck.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\isJson.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\util.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\DailyLoggingVars.js",["722","723","724"],"\r\nimport { zonedTimeToUtc, utcToZonedTime, format } from 'date-fns-tz';\r\n//import { formatInTimeZone } from 'date-fns-tz';\r\nimport moment from \"moment\";\r\nimport 'moment-timezone';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const projects = [\r\n  { text: \"General\", val: \"General\" },\r\n  { text: \"TIMPS\", val: \"TIMPS\" },\r\n  { text: \"SITE\", val: \"SITE\" },\r\n  { text: \"EUTILS\", val: \"EUTILS\" },\r\n  { text: \"GLM\", val: \"GLM\" },\r\n  { text: \"RMS\", val: \"RMS\" },\r\n  { text: \"GMS\", val: \"GMS\" },\r\n  { text: \"SLM\", val: \"SLM\" },\r\n  { text: \"Commander\", val: \"Commander\" },\r\n  { text: \"Project Management\", val: \"PMS\" },\r\n  { text: \"Client Meetings\", val: \"ClientMeetings\" },\r\n  { text: \"Interviews\", val: \"Interviews\" },\r\n  { text: \"Self Improvements\", val: \"Self Improvements\" },\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst currentDate = new Date();\r\n\r\nlet timezone = 'Asia/Karachi';\r\n\r\n\r\n\r\n\r\nconst convertedDate = utcToZonedTime(currentDate, timezone);\r\n\r\nexport function getTimezone() {\r\n  return timezone;\r\n}\r\n\r\nexport const defaultFormVal = {\r\n  checkin: convertedDate,\r\n  checkout: convertedDate,\r\n  task: \"\",\r\n  timezone: timezone,\r\n  project: projects[0].val,\r\n};\r\n\r\nexport function updateTimezone(newTimezone) {\r\n  timezone = newTimezone;\r\n  const currentDate = new Date();\r\n  const convertedDate = utcToZonedTime(currentDate, timezone);\r\n  defaultFormVal.checkin = convertedDate\r\n  defaultFormVal.checkout = convertedDate\r\n\r\n}\r\n\r\nexport function editLocation(timezone) {\r\n  defaultFormVal.timezone = timezone\r\n}\r\n\r\n\r\nexport const timezoneList = [\"Asia/Karachi\", \"America/Chicago\", \"America/New_York\", \"Europe/London\"]\r\nexport const timezoneListAlias = [\"Pakistan/Lahore\", \"America/Chicago\", \"Canada/Toronto\", \"England/London\"]\r\n\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\style\\basic\\basicColors.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\DailyLoggingMethods.js",["725","726","727"],"import { defaultFormVal } from \"./DailyLoggingVars\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\n//import { zonedTimeToUtc, utcToZonedTime, format } from 'date-fns-tz';\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { utcToZonedTime } from \"date-fns-tz\";\r\n\r\nexport function handleAddSessionState() {\r\n  return { form: { ...defaultFormVal }, addMode: true, editMode: false, changeInForm: false };\r\n}\r\n\r\nexport function loadFormRelatedState(state) {\r\n  console.log(\"From loading\", state.form);\r\n  return { form: state.form, addMode: state.addMode, editMode: state.editMode, changeInForm: state.changeInForm };\r\n}\r\n\r\nexport function saveSession(currState, user, createMethod, updateMethod) {\r\n  // save\r\n  let taskSession = { ...currState.form };\r\n  if (taskSession._id) {\r\n    updateMethod(taskSession);\r\n  } else if (user) {\r\n    taskSession.user = { id: user._id, email: user.email, name: user.name };\r\n    createMethod(taskSession);\r\n  } else {\r\n    // show error handler message (\"current logged in user is not found, please logout and login again\")\r\n    console.log(\"User is not logged in properly , please logout and login again\");\r\n  }\r\n}\r\n\r\n// export function saveSession(currState, user, createMethod, updateMethod) {\r\n//   return new Promise((resolve, reject) => {\r\n//     let taskSession = { ...currState.form };\r\n\r\n//     if (taskSession._id) {\r\n//       updateMethod(taskSession)\r\n//         .then(() => resolve())\r\n//         .catch(error => reject(error));\r\n//     } else if (user) {\r\n//       taskSession.user = { id: user._id, email: user.email, name: user.name };\r\n//       createMethod(taskSession)\r\n//         .then(() => resolve())\r\n//         .catch(error => reject(error));\r\n//     } else {\r\n//       // Handle the case where user is not logged in\r\n//       const error = new Error(\"User is not logged in properly\");\r\n//       reject(error);\r\n//     }\r\n//   });\r\n// }\r\n\r\nexport function getActiveSession(userId, range, method) {\r\n  return new Promise((resolve, reject) => {\r\n    let query = \"\";\r\n    if (userId) query = query + \"?userId=\" + userId;\r\n\r\n    method(`/activeSession/${query}`)\r\n      .then((response) => {\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\n// export function getActiveSession(userId, range, method) {\r\n//   let query = \"\";\r\n//   if (userId) query = query + \"?userId=\" + userId;\r\n//   if (range) {\r\n//     var jsonArray = encodeURIComponent(JSON.stringify(range));\r\n//     query = query + (userId ? \"&range=\" : \"?range=\") + jsonArray;\r\n//   }\r\n//   method(`/activeSession?${query}=true`);\r\n\r\n// }\r\n\r\nexport function getSessions(userId, range, method) {\r\n  let query = \"\";\r\n  if (userId) query = query + \"?userId=\" + userId;\r\n  if (range) {\r\n    var jsonArray = encodeURIComponent(JSON.stringify(range));\r\n    query = query + (userId ? \"&range=\" : \"?range=\") + jsonArray;\r\n  }\r\n  method(query);\r\n}\r\n\r\nexport function resetOrEditMethod(currState, selectedSession) {\r\n  // reset\r\n\r\n  let formToPut = { ...defaultFormVal };\r\n\r\n  if (selectedSession && currState.editMode) {\r\n    formToPut = selectedSession;\r\n  }\r\n  currState.form = formToPut;\r\n  currState.changeInForm = false;\r\n}\r\n\r\nexport function cancelMethod() {\r\n  // cancel\r\n  return { form: { ...defaultFormVal }, addMode: false, editMode: false, changeInForm: false };\r\n}\r\nexport function editMode(currState, session) {\r\n  currState.form = session;\r\n  currState.form.checkin = setStringToDate(currState.form.checkin);\r\n  currState.form.checkout = setStringToDate(currState.form.checkout);\r\n  currState.addMode = false;\r\n  currState.editMode = true;\r\n  currState.changeInForm = false;\r\n  currState.selectedSession = session;\r\n}\r\n\r\nfunction setStringToDate(date) {\r\n  if (date) {\r\n    let dateObj = new Date(date);\r\n    if (isValidDate(dateObj)) return dateObj;\r\n  }\r\n}\r\n\r\nfunction isValidDate(d) {\r\n  return d instanceof Date && !isNaN(d);\r\n}\r\n\r\nexport function convertTimezone(stateToSet, timezone) {\r\n  let date1 = \"\";\r\n\r\n  console.log(stateToSet.form.checkin, stateToSet.form.checkout);\r\n  if (stateToSet.form.checkin) {\r\n    date1 = stateToSet.form.checkin;\r\n  } else if (stateToSet.form.checkout) {\r\n    date1 = stateToSet.form.checkout;\r\n  }\r\n\r\n  if (date1) {\r\n    const date2 = utcToZonedTime(date1, timezone);\r\n\r\n    const timeDifferenceMs = date1 - date2;\r\n\r\n    if (stateToSet.form.checkin) {\r\n      console.log(new Date(stateToSet.form.checkin.getTime() + timeDifferenceMs));\r\n\r\n      stateToSet.form.checkin = new Date(stateToSet.form.checkin.getTime() + timeDifferenceMs);\r\n    }\r\n\r\n    if (stateToSet.form.checkout) {\r\n      console.log(new Date(stateToSet.form.checkout.getTime() + timeDifferenceMs));\r\n      stateToSet.form.checkout = new Date(stateToSet.form.checkout.getTime() + timeDifferenceMs);\r\n    }\r\n  }\r\n\r\n  const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n  //console.log(\"User Timezone: \", userTimezone, \"Convert to: \", timezone, \"Offset: \", diff)\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\Times.js",["728"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport 'moment-timezone'\r\n\r\n\r\nexport default function Times({ timezone, time, taskSession, show }) {\r\n  let duration = '', hours = '', minutes = '', days = ''\r\n  if (taskSession) {\r\n    if (!taskSession.checkout) {\r\n      if (taskSession.timed) {\r\n        duration = moment.duration(moment(time).diff(new Date(taskSession.checkin)));\r\n        hours = Math.floor(duration.asHours());\r\n\r\n        minutes = duration.minutes();\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  const displaySessionTime = () => {\r\n\r\n    if (hours > 0) {\r\n      if (hours > 1) {\r\n        return (`${hours} hours ${minutes} minutes`)\r\n      }\r\n\r\n      else {\r\n\r\n        return (`${hours} hour ${minutes} minutes`)\r\n\r\n      }\r\n\r\n    }\r\n\r\n    else return (`${minutes} minutes`)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"time-wrapper\">\r\n\r\n        <div className=\"time-small-wrapper\">\r\n          <label className=\"time-label\">Local Time</label>\r\n\r\n\r\n          {moment.tz(time, Intl.DateTimeFormat().resolvedOptions().timeZone).format(\"dddd, MMM DD, YYYY h:mm A\")}\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {show && duration && <div className=\"time-small-wrapper\">\r\n          <label className=\"time-label\">Session Time</label>\r\n\r\n\r\n\r\n          {displaySessionTime()}\r\n\r\n        </div>}\r\n\r\n\r\n        {!(timezone === Intl.DateTimeFormat().resolvedOptions().timeZone) && <div className=\"time-small-wrapper\">\r\n          <label className=\"time-label\">{timezone} Time</label>\r\n\r\n          {moment.tz(time, timezone).format(\"dddd, MMM DD, YYYY h:mm A\")}\r\n\r\n\r\n        </div>}\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxRelated\\actions\\storeActions.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\downloadCsv.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\actionOptions.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\dateFormatters.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\FilterMethods\\filterMethods.js",["729","730","731"],"import _ from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nexport const filtersMethod = {\r\n  Day: calculateDay,\r\n  Week: calculateWeek,\r\n  Month: calculateMonthly,\r\n};\r\n\r\nfunction calculateDay(data, dateRange) {\r\n  let returnData = [...data];\r\n  let filteredData = _.filter((data) => { });\r\n  return returnData;\r\n}\r\nfunction calculateWeek(data) {\r\n  let returnData = [...data];\r\n  return returnData;\r\n}\r\nfunction calculateMonthly(data) {\r\n  let returnData = [...data];\r\n  return returnData;\r\n}\r\n\r\nfunction dateInRange(start, end, date) {\r\n  let range = moment().range(start, end);\r\n  return range.contains(date);\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\User\\UserList\\UserList.jsx",["732"],"import React, { Component } from \"react\";\r\nimport ThisTable from \"../../Common/ThisTable\";\r\nimport { languageService } from \"../../../Language/language.service\";\r\nimport SvgIcon from \"react-icons-kit\";\r\nimport { pencilSquare } from \"react-icons-kit/fa/pencilSquare\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\n\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.columns = [\r\n      {\r\n        Header: languageService(\"Name\"),\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: languageService(\"Email\"),\r\n        accessor: \"email\",\r\n        minWidth: 130,\r\n      },\r\n      {\r\n        Header: languageService(\"Edit\"),\r\n        Cell: () => <SvgIcon size={20} icon={pencilSquare} />,\r\n      },\r\n    ];\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"task-area col-md-12\">\r\n        <div className=\"table-responsive\">\r\n          <ThisTable\r\n            tableColumns={this.columns}\r\n            tableData={this.props.userLIst}\r\n            pageSize={15}\r\n            minRows={1}\r\n            classNameCustom={\"table table-striped\"}\r\n            pagination={true}\r\n            handleSelectedClick={this.handleClick}\r\n            onClickSelect\r\n            height={\"auto\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\Forms\\formsMiscItems.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\reduxCURD\\settings.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\FilterMethods\\FilterArea.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\FilterMethods\\UserSelectArea.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\FormInputs\\InputFields.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\DailyLogging\\SessionsList\\SessionsList.jsx",["733","734"],"import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport 'moment-timezone'\r\nimport { utcToZonedTime, format } from 'date-fns-tz';\r\nimport { sortBy } from \"lodash\";\r\nimport { updateTimezone, getTimezone } from \"../DailyLoggingVars\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass SessionsList extends Component {\r\n  render() {\r\n    moment.tz.setDefault(getTimezone())\r\n\r\n    const sortedSessionList = this.props.sessionList ? sortBy(this.props.sessionList, \"checkin\") : [];\r\n    const sessionsList = sortedSessionList.map((session) => {\r\n      return (\r\n        <SessionList editable={this.props.editable} session={session} key={session._id} handleEditClick={this.props.handleEditClick} />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-striped\">\r\n          <thead className=\"table-head\">\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                Check In\r\n              </th>\r\n              <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                Check Out\r\n              </th>\r\n\r\n              <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                Timed\r\n              </th>\r\n              <th scope=\"col\" style={{ width: \"30%\" }}>\r\n                Task\r\n              </th>\r\n              <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                Project\r\n              </th>\r\n              <th scope=\"col\" style={{ width: \"10%\" }}>\r\n                Duration (hrs)\r\n              </th>\r\n              <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{sessionsList}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SessionList = (props) => {\r\n  return (\r\n    <tr key={props.session._id}>\r\n\r\n      {/* <td>{props.session.checkin && format(utcToZonedTime(props.session.checkin, timezone), 'MMM d, yyyy h:mm a')\r\n      }</td>\r\n      <td>{props.session.checkin && format(utcToZonedTime(props.session.checkout, timezone), 'MMM d, yyyy h:mm a')\r\n      }</td> */}\r\n\r\n      <td>{props.session.checkin && `${moment(props.session.checkin).format(\"ddd, MMM DD, YYYY h:mm A\")}`}</td>\r\n      <td>{props.session.checkout && `${moment(props.session.checkout).format(\"ddd, MMM DD, YYYY h:mm A\")}`}</td>\r\n      <td>{JSON.stringify(props.session.timed)}</td>\r\n      <td>\r\n        <div>{replaceNewLineToBr(props.session.task)}</div>\r\n      </td>\r\n      <td>{props.session.project}</td>\r\n      <td>{calculateDuration(props.session)}</td>\r\n      <td>\r\n        {props.editable && (\r\n          <span\r\n            onClick={(e) => {\r\n\r\n              const editSession = Object.assign({}, props.session)\r\n              editSession.checkin = utcToZonedTime(editSession.checkin, getTimezone())\r\n              editSession.checkout = utcToZonedTime(editSession.checkout, getTimezone())\r\n\r\n              props.handleEditClick(editSession);\r\n            }}\r\n            className=\"action-item\"\r\n          >\r\n            Edit\r\n          </span>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default SessionsList;\r\n\r\nfunction calculateDuration(session) {\r\n  let val = \"\";\r\n  if (session && session.checkin && session.checkout) {\r\n    let hourVal = moment(session.checkout).diff(moment(session.checkin), \"hours\", true);\r\n    let roundedVal = Math.round(hourVal + \"e\" + 2);\r\n    let roundedPlusDec = roundedVal + \"e-\" + 2;\r\n    val = Number(roundedPlusDec);\r\n  }\r\n  return val;\r\n}\r\n\r\nfunction replaceNewLineToBr(task) {\r\n  let newString = [];\r\n  if (task) {\r\n    let lineBreakArray = task.split(/\\n/); //replace(/\\n/g, \"</br>\");\r\n    newString = lineBreakArray.map((lb) => <div style={{ textAlign: \"left\", padding: \"0px 10px\" }}>{lb}</div>);\r\n  }\r\n  return newString;\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\Team\\TeamMemberSelector.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\Team\\CreateTeam.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\Pages\\Team\\EditTeam.jsx",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\utils\\arrayToCsv.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\style\\basic\\commonControls.js",["735"],"import { basicColors, retroColors, pmsThemeColors } from \"style/basic/basicColors\";\r\n\r\nexport const ButtonStyle = {\r\n  commonButton: {\r\n    default: {\r\n      height: \"30px\",\r\n      minWidth: \"150px\",\r\n      marginBottom: \"20px\",\r\n      backgroundColor: pmsThemeColors.first,\r\n      border: \"1px solid #e3e9ef\",\r\n      color: \"#fff\",\r\n      fontSize: \"12px\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      WebkitTransitionDuration: \"0.4s\",\r\n      OTransitionDuration: \"0.4s\",\r\n      transitionDuration: \"0.4s\",\r\n    },\r\n    retro: {\r\n      height: \"30px\",\r\n      minWidth: \"150px\",\r\n      marginBottom: \"20px\",\r\n      backgroundColor: retroColors.fifth,\r\n      border: \"1px solid\" + retroColors.ten,\r\n      color: retroColors.second,\r\n      fontSize: \"12px\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"0px\",\r\n      WebkitTransitionDuration: \"0.4s\",\r\n      OTransitionDuration: \"0.4s\",\r\n      transitionDuration: \"0.4s\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n};\r\nexport const CommonModalStyle = {\r\n  header: {\r\n    default: {\r\n      display: \"flex\",\r\n      MsFlexAlign: \"start\",\r\n      alignItems: \"flex-start\",\r\n      MsFlexPack: \"justify\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"1rem\",\r\n      borderBottom: \"1px solid #e9ecef\",\r\n      borderTopLeftRadius: \".3rem\",\r\n      borderTopRightRadius: \".3rem\",\r\n    },\r\n    retro: {\r\n      display: \"flex\",\r\n      MsFlexAlign: \"start\",\r\n      alignItems: \"flex-start\",\r\n      MsFlexPack: \"justify\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"1rem\",\r\n      borderBottom: \"0px solid #e9ecef\",\r\n      borderTopLeftRadius: \"0rem\",\r\n      borderTopRightRadius: \"0rem\",\r\n      backgroundColor: retroColors.fourth,\r\n    },\r\n  },\r\n  body: {\r\n    default: {\r\n      position: \"relative\",\r\n      MsFlex: \"1 1 auto\",\r\n      flex: \"1 1 auto\",\r\n      padding: \"1rem\",\r\n    },\r\n    retro: {\r\n      position: \"relative\",\r\n      MsFlex: \"1 1 auto\",\r\n      flex: \"1 1 auto\",\r\n      padding: \"1rem\",\r\n      backgroundColor: retroColors.nine,\r\n    },\r\n  },\r\n  footer: {\r\n    default: {\r\n      display: \"flex\",\r\n      MsFlexAlign: \"center\",\r\n      alignItems: \"center\",\r\n      MsFlexPack: \"end\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"1rem\",\r\n      borderTop: \"1px solid #e9ecef\",\r\n    },\r\n    retro: {\r\n      display: \"flex\",\r\n      MsFlexAlign: \"center\",\r\n      alignItems: \"center\",\r\n      MsFlexPack: \"end\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"1rem\",\r\n      borderTop: \"0px solid #e9ecef\",\r\n      backgroundColor: retroColors.nine,\r\n    },\r\n  },\r\n};\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\Forms\\style\\formsMiscItems.js",["736","737"],"import { basicColors, retroColors } from \"style/basic/basicColors\";\r\nexport const NavElementStyle = {\r\n  NavElement: {\r\n    default: {\r\n      display: \"inline-block\",\r\n      width: \"100%\",\r\n      background: \"rgba(55, 139, 119,0.3)\",\r\n      marginBottom: \"1px\",\r\n    },\r\n    retro: {\r\n      color: retroColors.second,\r\n      width: \"100%\",\r\n      marginBottom: \"1px\",\r\n    },\r\n  },\r\n  NavIcon: {\r\n    default: {\r\n      display: \"inline-flex\",\r\n      width: \"20%\",\r\n      fontSize: \"24px\",\r\n    },\r\n    retro: {\r\n      display: \"inline-flex\",\r\n      width: \"20%\",\r\n      fontSize: \"24px\",\r\n      verticalAlign: \"middle\",\r\n      color: retroColors.third,\r\n    },\r\n  },\r\n  NavText: {\r\n    default: {\r\n      textTransform: \"uppercase\",\r\n      width: \"70%\",\r\n      lineHeight: \"26px\",\r\n    },\r\n    retro: {\r\n      textTransform: \"uppercase\",\r\n      width: \"70%\",\r\n      lineHeight: \"26px\",\r\n      fontWeight: \"bold\",\r\n      textTransform: \"Capitalize\",\r\n      verticalAlign: \"middle\",\r\n    },\r\n  },\r\n};\r\nexport const commonFieldsStyles = {\r\n  checkBoxInput: {\r\n    default: { fontSize: \"14px\", verticalAlign: \"top\", color: \" #378b77\" },\r\n    retro: { fontSize: \"14px\", verticalAlign: \"top\", color: retroColors.second },\r\n  },\r\n};\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Login\\LoginView.js",["738","739","740","741"],"import React from \"react\";\r\nimport { languageService } from \"../../Language/language.service\";\r\nimport { Container, Col, Label, Button, FormGroup } from \"reactstrap\";\r\nimport { AvForm, AvInput, AvFeedback, AvGroup } from \"availity-reactstrap-validation\";\r\n//import {LoadingOverlay, Loader} from 'react-overlay-loader';\r\nimport \"react-overlay-loader/styles.css\";\r\nimport PropTypes from \"prop-types\";\r\n// import Recaptcha from \"react-recaptcha\";\r\nimport { ButtonStyle } from \"style/basic/commonControls\";\r\nimport { retroColors, pmsThemeColors } from \"style/basic/basicColors.js\";\r\nimport { themeService } from \"theme/service/activeTheme.service\";\r\n\r\n// const sitekey = \"6LegVGkUAAAAAJRHOVXe0JXbXNXO3OVLL46C3FgP\";\r\n\r\n// specifying your onload callback function\r\n// const callback = () => {\r\n//   //console.log('Done!!!!');\r\n// };\r\n\r\n// const verifyCallback = response => {\r\n//   //console.log(response);\r\n// };\r\n\r\n// const expiredCallback = () => {\r\n//   //console.log(`Recaptcha expired`);\r\n// };\r\n\r\n// // define a variable to store the recaptcha instance\r\n// let recaptchaInstance;\r\n\r\nclass LoginView extends React.Component {\r\n  render() {\r\n    const props = this.props;\r\n    return (\r\n      <Container style={props.formContainerStyle}>\r\n        <div className=\"app-logo\">\r\n          <h3>{languageService(\"Login\")}</h3>\r\n        </div>\r\n        <AvForm model={props.defaultValues} onValidSubmit={props.submitHandle}>\r\n          <Col>\r\n            <AvGroup className=\"form-field\">\r\n              <Label className=\"app-lbl\" for=\"txtEmail\">\r\n                {languageService(\"Email\")}\r\n              </Label>\r\n              <AvInput\r\n                required\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"txtEmail\" // Ensure the id matches the \"for\" attribute of the label\r\n                placeholder=\"myemail@email.com\"\r\n                value={props.inputValue.email}\r\n                onChange={props.onInputChange}\r\n              />\r\n            </AvGroup>\r\n            // Inside AvForm component\r\n            <AvGroup className=\"form-field\">\r\n              <Label className=\"app-lbl\" for=\"txtPassword\">\r\n                {languageService(\"Password\")}\r\n              </Label>\r\n              <AvInput\r\n                required\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"txtPassword\" // Ensure the id matches the \"for\" attribute of the label\r\n                placeholder=\"********\"\r\n                value={props.inputValue.password}\r\n                onChange={props.onInputChange}\r\n              />\r\n            </AvGroup>\r\n          </Col>\r\n          <Col>\r\n            {/* <AvGroup>\r\n              <Label style={props.formLabelStyle} check for=\"chkRemember\">\r\n              <AvInput\r\n                type=\"checkbox\"\r\n                name=\"chkRemember\"\r\n                id=\"chkRemember\"\r\n                style={props.checkBoxStyle}\r\n\r\n              />&nbsp;&nbsp;\r\n              Remember me</Label>\r\n\r\n            </AvGroup> */}\r\n          </Col>\r\n\r\n          <Col>\r\n            <FormGroup>\r\n              <div>\r\n                <Button className=\"common-button\">{languageService(\"Login\")}</Button>\r\n              </div>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col>\r\n            <AvGroup>\r\n              <Label\r\n                style={themeService({ default: { ...props.forgotPassStyle }, ps19: { cursor: \"pointer\" } })}\r\n                onClick={props.clickForgotPasswordHandle}\r\n              >\r\n                <div>{languageService(\"Forgot Password\")}?</div>\r\n              </Label>\r\n            </AvGroup>\r\n          </Col>\r\n\r\n          <Col>\r\n            {/* <div class=\"g-recaptcha\" data-sitekey=\"6LegVGkUAAAAAJRHOVXe0JXbXNXO3OVLL46C3FgP\"></div> */}\r\n            {/* <Recaptcha\r\n            ref={e => recaptchaInstance = e}\r\n            sitekey={sitekey}\r\n            size=\"normal\"\r\n            render=\"explicit\"\r\n            verifyCallback={props.recaptchaCallbacks.verifyCallback}\r\n            onloadCallback={props.recaptchaCallbacks.onloadCallback}\r\n            expiredCallback={props.recaptchaCallbacks.expiredCallback}\r\n          /> */}\r\n          </Col>\r\n        </AvForm>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nLoginView.propTypes = {\r\n  defaultValues: PropTypes.object,\r\n  formStyle: PropTypes.object,\r\n  baseStyle: PropTypes.object,\r\n  formLabelStyle: PropTypes.object,\r\n  checkBoxStyle: PropTypes.object,\r\n  loginTitleBar: PropTypes.object,\r\n  buttonsContainer: PropTypes.object,\r\n  submitButtonStyle: PropTypes.object,\r\n  inputValue: PropTypes.object,\r\n  submitHandle: PropTypes.func,\r\n  onInputChange: PropTypes.func,\r\n  recaptchaCallbacks: PropTypes.object,\r\n};\r\n\r\nLoginView.defaultProps = {\r\n  defaultValues: {\r\n    chkRemember: true,\r\n  },\r\n  inputValue: { email: \"\" },\r\n  loginTitleBar: {\r\n    fontfamily: \"Arial\",\r\n    fontSize: \"23px\",\r\n\r\n    margin: \"0\",\r\n    textAlign: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  formStyle: {\r\n    width: \"280px\",\r\n    height: \"40px\",\r\n  },\r\n  formContainer: {\r\n    textAlign: \"left\",\r\n    padding: \"0em\",\r\n    margin: \"1em\",\r\n    border: \"0px solid #d3d3d3\",\r\n    borderRadius: \".5em\",\r\n    verticalAlign: \"middle\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"100%\",\r\n    marginTop: \"10px\",\r\n  },\r\n  baseStyle: {\r\n    textAlign: \"left\",\r\n    padding: \"0em\",\r\n    margin: \"auto\",\r\n    border: \"0px solid #d3d3d3\",\r\n    borderRadius: \".5em\",\r\n    verticalAlign: \"middle\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"100%\",\r\n    marginTop: \"10px\",\r\n\r\n    /*         width: \"340px\",\r\n        height: \"470px\",\r\n        backgroundColor: \"#fff\",\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        margin: \"auto\",\r\n        borderRadius: \"5px\",\r\n        boxShadow: \"0px 20px 30px -5px rgba(0, 0, 0, 0.4)\"\r\n */\r\n  },\r\n  buttonsContainer: {\r\n    marginTop: \"10px\",\r\n  },\r\n  formLabelStyle: {\r\n    fontFamily: \"Arial\",\r\n    fontSize: \"14px\",\r\n\r\n    letterSpacing: \"0.35px\",\r\n  },\r\n  checkBoxStyle: {\r\n    position: \"relative\",\r\n    margin: \"0\",\r\n    borderStyle: \"Solid\",\r\n    borderColor: \"#465261\",\r\n    borderWidth: \"0px\",\r\n    width: \"16px\",\r\n    height: \"16px\",\r\n    borderRadius: \"3px\",\r\n  },\r\n  loginButtonStyle: {\r\n    width: \"100%\",\r\n    height: \"40px\",\r\n    backgroundColor: pmsThemeColors.first,\r\n    border: \"none\",\r\n    borderRadius: \"2px\",\r\n    cursor: \"pointer\",\r\n    fontFamily: \"Arial\",\r\n    fontSize: \"14px\",\r\n    letterSpacing: \"0.35px\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  forgotPassStyle: {\r\n    marginTop: \"5px\",\r\n    textDecoration: \"none\",\r\n    fontFamily: \"Arial\",\r\n    fontSize: \"14px\",\r\n    letterSpacing: \"0.35px\",\r\n\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  formContainerStyle: {},\r\n  //forgotPassButtonStyle: ForgotPasswordButton\r\n};\r\n\r\nexport default LoginView;\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\wigets\\forms\\style\\formFields.js",["742","743"],"import { basicColors, retroColors } from \"style/basic/basicColors\";\r\nexport const formFeildStyle = {\r\n  feildStyle: {\r\n    default: {},\r\n    retro: {\r\n      marginBottom: \"15px\",\r\n    },\r\n  },\r\n  lblStyle: {\r\n    default: {\r\n      marginBottom: \"5px\",\r\n      float: \"left\",\r\n      fontSize: \"14px\",\r\n      color: basicColors.first,\r\n    },\r\n    retro: {\r\n      marginBottom: \"5px\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"bold\",\r\n      color: retroColors.second,\r\n      width: \"30%\",\r\n    },\r\n  },\r\n  lblSmallStyle: {\r\n    default: {\r\n      marginBottom: \"5px\",\r\n      float: \"left\",\r\n      fontSize: \"14px\",\r\n      color: basicColors.first,\r\n    },\r\n    retro: {\r\n      marginBottom: \"5px\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"bold\",\r\n      color: retroColors.second,\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  inputStyle: {\r\n    default: {\r\n      width: \"100%\",\r\n      height: \"34px\",\r\n      padding: \"6px 12px\",\r\n      fontSize: \"12px\",\r\n      lineHeight: \"1.42857143\",\r\n      color: \"#378b77\",\r\n      backgroundColor: \"#fff\",\r\n      backgroundImage: \"none\",\r\n      border: \"1px solid #e3e9ef\",\r\n      borderRadius: \"2px\",\r\n      WebkitBoxShadow: \"inset 0 1px 1px rgba(0, 0, 0, 0.05)\",\r\n      boxShadow: \"inset 0 1px 1px rgba(0, 0, 0, 0.05)\",\r\n      WebkitTransition: \"border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s\",\r\n      OTransition: \"border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s\",\r\n      transition: \"border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s\",\r\n    },\r\n    retro: {\r\n      width: \"70%\",\r\n      height: \"34px\",\r\n      padding: \"6px 6px 6px 6px\",\r\n      fontSize: \"12px\",\r\n      lineHeight: \"1.42857143\",\r\n      color: retroColors.second,\r\n      backgroundColor: retroColors.fifth,\r\n      backgroundImage: \"none\",\r\n      border: \"1px solid\" + retroColors.ten,\r\n      borderRadius: \"0px\",\r\n      WebkitTransition: \"border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s\",\r\n      OTransition: \"border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s\",\r\n      transition: \"border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s\",\r\n    },\r\n  },\r\n  selectInputFieldContainer: {\r\n    default: {},\r\n    retro: {\r\n      width: \"70%\",\r\n      position: \"relative\",\r\n    },\r\n  },\r\n\r\n  selectInputCaret: {\r\n    default: { height: \"34px\", padding: \"6px 12px\", background: \"#fff\" },\r\n    retro: {\r\n      height: \"34px\",\r\n\r\n      padding: \"6px 6px 6px 6px\",\r\n      background: \"#fff\",\r\n      border: \"0px solid grey\",\r\n      borderLeft: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  selectInputDropDown: {\r\n    default: {},\r\n    retro: {\r\n      border: \"0\",\r\n      position: \"absolute\",\r\n      bottom: \"-68px\",\r\n      height: \"68px\",\r\n      overflow: \"auto\",\r\n      width: \"100%\",\r\n      zIndex: \"10\",\r\n      WebkitBoxShadow: \" 0px 3px 5px 0px rgba(0,0,0,0.75)\",\r\n      MozBoxShadow: \"0px 3px 5px 0px rgba(0,0,0,0.75)\",\r\n      boxShadow: \"0px 3px 5px 0px rgba(0,0,0,0.75)\",\r\n      background: \"#fff\",\r\n    },\r\n  },\r\n  inputSelectFieldStyle: {\r\n    default: {},\r\n    retro: {\r\n      height: \"34px\",\r\n      width: \"-webkit-calc(100% - 77px)\",\r\n      width: \" -moz-calc(100% - 77x)\",\r\n      width: \"      calc(100% - 77px)\",\r\n      padding: \"6px 12px\",\r\n      fontSize: \"12px\",\r\n      lineHeight: \"1.42857143\",\r\n      color: retroColors.second,\r\n      backgroundColor: retroColors.fifth,\r\n      backgroundImage: \"none\",\r\n      border: \"0px solid grey\",\r\n      borderRadius: \"0px\",\r\n      borderRight: \"none\",\r\n      WebkitTransition: \"border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s\",\r\n      OTransition: \"border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s\",\r\n      transition: \"border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s\",\r\n    },\r\n  },\r\n  inputSelectRowContainer: {\r\n    default: {},\r\n    retro: {\r\n      height: \"34px\",\r\n      padding: \"6px 12px 9px\",\r\n      background: \"#fff\",\r\n      border: \"0px solid darkgrey\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n};\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\ThisTable\\index.jsx",["744","745","746","747","748","749","750","751","752","753"],"import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport ReactTable from \"react-table\";\r\nimport PaginationComponent from \"./PaginationComponent\";\r\nimport \"./custom.css\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport { languageService } from \"../../../Language/language.service\";\r\nimport PropTypes from \"prop-types\";\r\nimport { thisTableStyle } from \"./style/index\";\r\nimport { themeService } from \"theme/service/activeTheme.service\";\r\n//import Radium from \"radium\";\r\nimport { retroColors } from \"../../../style/basic/basicColors\";\r\nclass ThisTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let columnStyle = this.props.onColClick\r\n      ? {\r\n          getHeaderProps: (state, rowInfo, col, instance) => {\r\n            return {\r\n              onClick: () => {\r\n                this.props.onColClick(state, rowInfo, col, instance);\r\n              },\r\n              style: {\r\n                ...themeService(thisTableStyle.HeaderPropsStyle),\r\n              },\r\n            };\r\n          },\r\n        }\r\n      : {\r\n          getHeaderProps: () => {\r\n            return {\r\n              style: { ...themeService(thisTableStyle.HeaderPropsStyle) },\r\n            };\r\n          },\r\n        };\r\n\r\n    this.state = {\r\n      columns: [],\r\n      columnStyle: columnStyle,\r\n      selected: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateColumns(this.props.tableColumns);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.tableColumns !== this.props.tableColumns) {\r\n      this.updateColumns(nextProps.tableColumns);\r\n    }\r\n  }\r\n\r\n  updateColumns(newTableColms) {\r\n    let columns = [];\r\n    const { columnStyle } = this.state;\r\n\r\n    let receivedColumns = newTableColms;\r\n    receivedColumns.forEach((column) => {\r\n      let copyColumnStyle = { ...columnStyle };\r\n      let columnKeys = Object.keys(column);\r\n      columnKeys.forEach((key) => {\r\n        copyColumnStyle[key] = column[key];\r\n      });\r\n      columns.push(copyColumnStyle);\r\n    });\r\n    this.setState({\r\n      columns: columns,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          ...themeService(thisTableStyle.outerStyle),\r\n          overflowY: this.props.classNameCustom == \"fillFullHeight\" ? \"none\" : \"auto\",\r\n        }}\r\n        className={this.props.classNameCustom}\r\n      >\r\n        <ReactTable\r\n          key={\"reactTable\"}\r\n          defaultSorted={this.props.defaultSorted}\r\n          previousText={languageService(\"previous\")}\r\n          nextText={languageService(\"next\")}\r\n          loadingText={languageService(\"Loading...\")}\r\n          noDataText={languageService(\"No rows found\")}\r\n          pageText={languageService(\"Page\")}\r\n          ofText={languageService(\"of\")}\r\n          rowsText={languageService(\"rows\")}\r\n          pageJumpText={languageService(\"jump to page\")}\r\n          rowsSelectorText={languageService(\"rows per page\")}\r\n          sortable={this.props.sortable}\r\n          data={this.props.tableData}\r\n          columns={this.state.columns}\r\n          showPagination={this.props.pagination}\r\n          pageSize={this.props.pageSize}\r\n          manual={this.props.manual}\r\n          defaultPageSize={this.props.pageSize || 15}\r\n          pages={this.props.pages}\r\n          showPaginationTop={this.props.showPaginationTop || false}\r\n          showPaginationBottom={this.props.showPaginationBottom || true}\r\n          pageSizeOptions={this.props.pageSizeOptions || [5, 10, 20, 25, 50, 100]}\r\n          onPageChange={(page) => {\r\n            if (this.props.handlePageChange) {\r\n              this.props.handlePageChange(page);\r\n            }\r\n          }}\r\n          page={this.props.page ? this.props.page : 0}\r\n          minRows={this.props.minRows ? this.props.minRows : 1}\r\n          style={{ ...themeService(thisTableStyle.tableStyle), height: this.props.height ? this.props.height : \"inherit\" }}\r\n          getTbodyProps={(state, rowInfo, column, instance) => {\r\n            return {\r\n              className: \"scrollbar\",\r\n            };\r\n          }}\r\n          getTrProps={(state, rowInfo, column, instance) => {\r\n            let indexRow = null;\r\n            let selected = \"No Selected\";\r\n            if (rowInfo) {\r\n              indexRow = rowInfo.index;\r\n              if (rowInfo.original.selected == true) {\r\n                selected = rowInfo.index;\r\n              }\r\n            }\r\n            return {\r\n              onClick: (e) => {\r\n                //console.log(this.state.selected);\r\n                let val = indexRow;\r\n                this.state.selected == indexRow && (val = null);\r\n                this.setState({\r\n                  selected: val,\r\n                });\r\n\r\n                if (this.props.onClickSelect) {\r\n                  this.props.handleSelectedClick && this.props.handleSelectedClick(e, rowInfo);\r\n                }\r\n              },\r\n\r\n              style: themeService(thisTableStyle.rowStyle(indexRow, this.state, this.props, rowInfo)),\r\n            };\r\n          }}\r\n          getTrGroupProps={(state, rowInfo, column, instance) => {\r\n            return {\r\n              style: {\r\n                borderBottom: \"1px solid rgb(227, 233, 239)\",\r\n              },\r\n            };\r\n          }}\r\n          getTableProps={(state, rowInfo, column, instance) => {\r\n            return {\r\n              className: \"scrollbarHor\",\r\n            };\r\n          }}\r\n          getTdProps={(state, rowInfo, column, instance) => {\r\n            return {\r\n              style: themeService(thisTableStyle.cellStyle),\r\n            };\r\n          }}\r\n          showPageJump={false}\r\n          PaginationComponent={PaginationComponent}\r\n          defaultSorted={this.props.defaultSorted}\r\n          onSortedChange={this.props.onSortedChange}\r\n          onFetchData={this.props.fetchData}\r\n        />\r\n        {/* {this.props.forDashboard && (\r\n          <Link\r\n            to={this.props.fromDashboardToLink ? this.props.fromDashboardToLink : \"#\"}\r\n            style={themeService(thisTableStyle.detailBtnStyle)}\r\n          >\r\n            {languageService(\"View Detail\")}\r\n          </Link>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default Radium(ThisTable);\r\nexport default ThisTable;\r\nThisTable.defaultProps = {\r\n  sortable: true,\r\n};\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\ThisTable\\style\\index.js",[],"D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\ThisTable\\PaginationComponent.jsx",["754","755","756","757","758","759","760","761","762","763","764","765"],"import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./pagination.css\";\r\nimport { themeService } from \"theme/service/activeTheme.service\";\r\nimport { paginationStyle } from \"./style/PaginationComponent\";\r\nimport { languageService } from \"../../../Language/language.service\";\r\n\r\n//\r\n// import _ from './utils'\r\n\r\nconst defaultButtonNext = props => (\r\n  <button type=\"button\" {...props} className=\" myButtonNext\" style={themeService(paginationStyle.myButtonNext)}>\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nconst defaultButtonPrev = props => (\r\n  <button type=\"button\" {...props} className=\" myButtonPrev\" style={themeService(paginationStyle.myButtonPrev)}>\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default class PaginationComponent extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.getSafePage = this.getSafePage.bind(this);\r\n    this.changePage = this.changePage.bind(this);\r\n    this.applyPage = this.applyPage.bind(this);\r\n\r\n    this.state = {\r\n      page: props.page,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ page: nextProps.page });\r\n    if (this.props.pageSize !== nextProps.pageSize) {\r\n      this.props.onPageSizeChange(nextProps.pageSize);\r\n    }\r\n  }\r\n\r\n  getSafePage(page) {\r\n    if (Number.isNaN(page)) {\r\n      page = this.props.page;\r\n    }\r\n    return Math.min(Math.max(page, 0), this.props.pages - 1);\r\n  }\r\n\r\n  changePage(page) {\r\n    //console.log(page);\r\n    page = this.getSafePage(page);\r\n    this.setState({ page });\r\n    if (this.props.page !== page) {\r\n      this.props.onPageChange(page);\r\n    }\r\n  }\r\n\r\n  applyPage(e) {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    const page = this.state.page;\r\n    this.changePage(page === \"\" ? this.props.page : page);\r\n  }\r\n\r\n  getPaginationNumbers(current, min, max, range) {\r\n    if (range > max) range = max;\r\n    let pageNumbers, start, end;\r\n    pageNumbers = [];\r\n    start = current - Math.floor(range / 2);\r\n    start = Math.max(start, min);\r\n    start = Math.min(start, min + max - range);\r\n    if (min < start) {\r\n      range = range - 1;\r\n    }\r\n\r\n    end = start - 1 + range;\r\n    let selectedStyle = {\r\n      fontSize: \"12px\",\r\n      padding: \" 4px 10px\",\r\n      color: \"#378b77\",\r\n      border: \"2px solid #a7cdb8\",\r\n    };\r\n    if (min < start) {\r\n      pageNumbers.push(\r\n        <div\r\n          className=\"pagesNumbers\"\r\n          key={min}\r\n          onClick={() => {\r\n            this.changePage(min - 1);\r\n          }}\r\n        >\r\n          {min}\r\n        </div>,\r\n      );\r\n    }\r\n    for (let i = start; i <= end; i++) {\r\n      let pageNumber = (\r\n        <div\r\n          className=\"pagesNumbers\"\r\n          style={i == current ? selectedStyle : null}\r\n          key={i}\r\n          onClick={() => {\r\n            this.changePage(i - 1);\r\n          }}\r\n        >\r\n          {i == start && min < start && \"...\"}\r\n          {i}\r\n          {i == end && end < max - 1 && \"...\"}\r\n        </div>\r\n      );\r\n\r\n      pageNumbers.push(pageNumber);\r\n    }\r\n    if (end !== max) {\r\n      pageNumbers.push(\r\n        <div\r\n          className=\"pagesNumbers\"\r\n          key={max}\r\n          onClick={() => {\r\n            this.changePage(max - 1);\r\n          }}\r\n        >\r\n          {max}\r\n        </div>,\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  }\r\n  getPaginationEntries() {\r\n    let paginationObj = { initial: 0, to: 0, of: 0 };\r\n    let initialEntry, toEntry, ofEntry;\r\n    // initial  entry \"1 out of\" based on the current page and page size\r\n    initialEntry = this.props.page * this.props.pageSize + 1;\r\n    // if there is no entry it should be \"0 out of 0\"\r\n    if (this.props.data.length == 0) {\r\n      initialEntry = 0;\r\n    }\r\n    // based on page size unless page size is length then length , in that case it is based on length\r\n    if (this.props.data.length < this.props.pageSize) {\r\n      toEntry = this.props.data.length;\r\n    } else {\r\n      //with  pagesize and with according to the current page\r\n      toEntry = (this.props.page + 1) * this.props.pageSize;\r\n    }\r\n    // limit that it should not be higher then length\r\n    if (toEntry > this.props.data.length) {\r\n      toEntry = this.props.data.length;\r\n    }\r\n    // based on total length\r\n    ofEntry = this.props.data.length;\r\n\r\n    paginationObj.initial = initialEntry;\r\n    paginationObj.to = toEntry;\r\n    paginationObj.of = ofEntry;\r\n\r\n    return paginationObj;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      // Computed\r\n      pages,\r\n      // Props\r\n      page,\r\n      showPageSizeOptions,\r\n      pageSizeOptions,\r\n      pageSize,\r\n      showPageJump,\r\n      canPrevious,\r\n      canNext,\r\n      onPageSizeChange,\r\n      className,\r\n      PreviousComponent = defaultButtonPrev,\r\n      NextComponent = defaultButtonNext,\r\n    } = this.props;\r\n    let min, max, pagesNumbers, range, paginationEntries;\r\n    min = 1;\r\n    max = this.props.pages;\r\n\r\n    range = this.props.paginationRange || 6;\r\n    pagesNumbers = this.getPaginationNumbers(this.props.page + 1, min, max, range);\r\n    paginationEntries = this.getPaginationEntries();\r\n    return (\r\n      <div className=\"customPaginationClass\" style={this.props.style}>\r\n        <div className=\"paginationEntries\">\r\n          <div className=\"entriesContainer\" style={themeService(paginationStyle.entriesContainer)}>\r\n            Showing {paginationEntries.initial} to {paginationEntries.to} of {paginationEntries.of} entries\r\n          </div>\r\n        </div>\r\n        <div className=\"paginationCustom\" style={themeService(paginationStyle.paginationCustom)}>\r\n          <div className=\"nextPrevButton\">\r\n            <PreviousComponent\r\n              onClick={() => {\r\n                if (!canPrevious) return;\r\n                this.changePage(page - 1);\r\n              }}\r\n              disabled={!canPrevious}\r\n            >\r\n              {this.props.previousText}\r\n            </PreviousComponent>\r\n          </div>\r\n          <div className=\"customCenter\" style={themeService(paginationStyle.customCenter)}>\r\n            {pagesNumbers}\r\n          </div>\r\n          <div style={themeService(paginationStyle.entriesContainerRetro)}>\r\n            {paginationEntries.to} {languageService(\"of\")} {paginationEntries.of}\r\n          </div>\r\n          <div className=\"nextPrevButton\">\r\n            <NextComponent\r\n              onClick={() => {\r\n                if (!canNext) return;\r\n                this.changePage(page + 1);\r\n              }}\r\n              disabled={!canNext}\r\n            >\r\n              {this.props.nextText}\r\n            </NextComponent>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\workProjects\\PMS%20%28old%29\\frontend\\src\\components\\Common\\ThisTable\\style\\PaginationComponent.js",[],"D:\\Web Development\\PMS\\frontend\\src\\index.js",[],"D:\\Web Development\\PMS\\frontend\\src\\reportWebVitals.js",[],"D:\\Web Development\\PMS\\frontend\\src\\App.js",["766","767"],"D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\index.js",[],"D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\middleware\\api.js",["768","769","770"],"D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\ajaxStatusReducer.js",["771"],"D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\loginReducer.js",["772"],"D:\\Web Development\\PMS\\frontend\\src\\components\\MainPage\\MainPage.jsx",["773","774","775"],"import React, { Component } from \"react\";\r\nimport { Switch, Route, Link, withRouter } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n// import ForgotPassword from \"components/Login/ForgotPassword/ForgotPassword\";\r\n// import VerifyResetPass from \"components/Login/ForgotPassword/VerifyResetPass\";\r\n// import ResetPassword from \"components/Login/ForgotPassword/ResetPassword\";\r\n//import { sidebarWidth, sidebarWidthSmall } from \"components/Common/Variables/CommonVariables\";\r\n//import \"../../style/basic/color.css\";\r\nimport LoginContainer from \"containers/LoginContainer\";\r\nimport Logout from \"containers/LogOutContainer\";\r\n//import Test from 'components/TestComponent/test'\r\n// import Data from 'components/data/data'\r\nimport { getServerEndpoint } from \"utils/serverEndpoint\";\r\nimport routePath from \"routes/routes.js\";\r\nimport TopBarContainer from \"../TopBar/TopBar\";\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topBarVisible: true,\r\n      userLoggedOn: false,\r\n      routes: [],\r\n      user: \"\",\r\n      //showSideNav: true,\r\n      language: \"en\",\r\n      theme: \"tenant\",\r\n      // rightValue: \"-20%\",\r\n      routeComponent: routePath.map((route, index) => {\r\n        return <Route key={route.path} path={route.path} component={route.component} />;\r\n      }),\r\n      // hideNav: window.innerWidth,\r\n      // sidebarWidth: sidebarWidth,\r\n      // textDisplay: \"inline-flex\",\r\n      // sideNavDispaly: \"0px\",\r\n      // hideToolTip: window.innerWidth <= 760,\r\n      // mainSectionLeft: this.isLoggedOn() ? sidebarWidth : 0,\r\n    };\r\n  }\r\n\r\n  isLoggedOn = () => localStorage.getItem(\"access_token\") !== null;\r\n  loggedInUser = () => localStorage.getItem(\"loggedInUser\");\r\n  componentWillMount() {\r\n    //themeService(\"retro\");\r\n    localStorage.setItem(\"theme\", this.state.theme);\r\n    if (\r\n      !this.isLoggedOn() &&\r\n      !this.props.history.location.pathname.includes(\"confirmreset\") &&\r\n      !this.props.history.location.pathname.includes(\"resetPassword\")\r\n    ) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topBarVisible } = this.state;\r\n    // const loginScreen = (\r\n    //   <div className=\"App-container\">\r\n    //     <div className=\"App-login\">\r\n    //       <LoginContainer />\r\n    //     </div>\r\n    //   </div>\r\n    //);\r\n\r\n    let switchComp = (\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginContainer} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n\r\n        {/* <Route path=\"/diagnostics\" component={Diagnostics} /> */}\r\n        {/* <Route path=\"/forgotPassword\" component={ForgotPassword} />\r\n        <Route path=\"/confirmreset/:id\" component={VerifyResetPass} />\r\n        <Route path=\"/resetPassword\" component={ResetPassword} /> */}\r\n        {this.state.routeComponent}\r\n      </Switch>\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        {/* <SocketIO /> */}\r\n        {topBarVisible && <TopBarContainer />}\r\n        <div className=\"main-content-area\">{switchComp}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MainPage);\r\n","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\languageHelperReducer.js",["776"],"D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\reducer\\forgotPasswordReducer.js",["777"],"D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\actions\\ajaxStatusAction.js",[],"D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\ActionTypes\\actionTypes.js",[],"D:\\Web Development\\PMS\\frontend\\src\\utils\\serverEndpoint.js",[],"D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\reducer.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\TopBar\\TopBar.jsx",["778","779","780","781","782","783","784","785"],"D:\\Web Development\\PMS\\frontend\\src\\routes\\routes.js",["786"],"D:\\Web Development\\PMS\\frontend\\src\\containers\\LoginContainer.js",[],"D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\types.js",[],"D:\\Web Development\\PMS\\frontend\\src\\containers\\LogOutContainer.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\Language\\language.service.js",[],"D:\\Web Development\\PMS\\frontend\\src\\theme\\service\\activeTheme.service.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\UserModule\\UserDetails.js",["787","788","789","790","791","792","793","794","795","796","797","798","799","800"],"//import { fetchUsers } from \"../redux/user\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import { deleteUser } from \"../redux/user\";\r\nimport { useHistory } from \"react-router\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport React, { Component } from \"react\";\r\nimport permissionCheck from \"../../utils/permissionCheck\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\nimport { loggedInUser } from \"../../utils/util\";\r\nimport \"./usermodulestyle.css\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { useRef } from \"react\";\r\nimport UserList from \"../User/UserList/UserList\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { button } from \"../Common/Forms/formsMiscItems\";\r\n\r\nfunction UserDetails(props) {\r\n  const history = useHistory();\r\n  //const { onChange, userData, fetchUsers, deleteUser } = props\r\n\r\n  const prevActionType = props.actionType;\r\n  const prevActionTypeRef = useRef(prevActionType);\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // const handleDelete = (id) => {\r\n  //   if (window.confirm(\"Are You Sure?\")) {\r\n  //     deleteUser(id)\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   fetchUsers()\r\n  // }, [])\r\n\r\n  let currentUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n\r\n  useEffect(() => {\r\n    props.getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setUsers(props.users);\r\n  }, [props.users]);\r\n\r\n  useEffect(() => {\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"USERS_READ_SUCCESS\") {\r\n      setUsers(props.users);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"USER_DELETE_SUCCESS\") {\r\n      window.alert(\"User Deleted\");\r\n      handleDeleteUser(props.user._id);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"USER_CREATE_SUCCESS\") {\r\n      props.getUsers();\r\n      window.alert(\"User Created\");\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType) {\r\n      prevActionTypeRef.current = props.actionType;\r\n    }\r\n  }, [props.actionType]);\r\n\r\n  const handleDelete = (user) => {\r\n    if (currentUser._id != user._id) {\r\n      if (window.confirm(`Are you sure you want to delete ${user.name}?`)) {\r\n        props.deleteUser(user, user._id);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = (id) => {\r\n    // Remove the team at the specified index from the teams list\r\n    const copyUsers = [...users];\r\n    let updatedUsers = copyUsers.filter((u) => u._id !== id);\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <div className=\"user-wrapper\">\r\n        <h2>User List</h2>\r\n        <button className=\"create-button\" onClick={() => history.push(\"/createuser\")}>\r\n          Create User\r\n        </button>\r\n      </div>\r\n\r\n      {props.errorMessage && <h2 style={{ color: \"red\" }}>{props.errorMessage}</h2>}\r\n\r\n      <div className=\"table-wrapper\">\r\n        <table className=\"table table-striped table-responsive\">\r\n          <thead className=\"table-head\">\r\n            <tr>\r\n              <th>Name </th>\r\n              <th>Email</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => {\r\n              return (\r\n                <tr style={{ height: \"40px\" }}>\r\n                  <td>{user.name} </td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    {currentUser._id != user._id && (\r\n                      <div className=\"action-class\">\r\n                        <span className=\"action-item\" onClick={() => handleDelete(user)}>\r\n                          {\" \"}\r\n                          Delete\r\n                        </span>\r\n                        <span className=\"action-item\" onClick={() => history.push(`/edituser/${user._id}`)}>\r\n                          Edit\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// let actionOptions = {\r\n//   create: true,\r\n//   update: true,\r\n//   read: true,\r\n//   delete: true,\r\n//   others: {}\r\n// }\r\n\r\nexport default CRUDFunction(UserDetails, \"user\", null, null, null, \"users\");\r\n","D:\\Web Development\\PMS\\frontend\\src\\components\\UserModule\\EditUser.js",["801","802","803","804","805","806","807","808","809","810","811","812","813"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useParams } from \"react-router\";\r\n// import { fetchSingleUser } from \"../redux/user\"\r\n// import { updateOldUser } from \"../redux/user\"\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\n\r\nimport { button } from \"../Common/Forms/formsMiscItems\";\r\nimport UpdatePassword from \"./UpdatePassword\";\r\n\r\nfunction EditUser(props) {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const { user, updateUserAction, getUserAction, getGroups, Groups } = props;\r\n\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    mobile: \"\",\r\n    group_id: \"\",\r\n    userGroup: 0,\r\n  });\r\n\r\n  const [passText, setPassText] = useState(\"Update Password\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const handleDisplay = () => {\r\n    setDisplay((old) => !old);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (display === false) setPassText(\"Update Password\");\r\n    else {\r\n      setPassText(\"Cancel\");\r\n    }\r\n  }, [display]);\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUserAction(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      {\r\n        console.log(user.hashedPassword);\r\n      }\r\n      let userGroupName = \"\";\r\n      for (const group of Groups) {\r\n        if (group.group_id == user.group_id) {\r\n          userGroupName = group.name;\r\n        }\r\n      }\r\n      setState({\r\n        email: user.email,\r\n        name: user.name,\r\n        mobile: user.mobile,\r\n        group_id: user.group_id,\r\n        userGroup: user.userGroup,\r\n        group_name: userGroupName,\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { name, email, mobile, group_id, userGroup, group_name } = state;\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    let id = 0;\r\n    let newGroup_id = \"\";\r\n    if (name === \"group_id\") {\r\n      for (const group of Groups) {\r\n        if (group.name == value) {\r\n          id = group._id;\r\n          newGroup_id = group.group_id;\r\n        }\r\n      }\r\n      setState({ ...state, group_name: value, group_id: newGroup_id, userGroup: id });\r\n    } else {\r\n      setState({ ...state, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setError(\"\");\r\n\r\n    if (display) {\r\n      console.log(\"in password\");\r\n\r\n      if (password === newPassword) {\r\n        if (!name || !email || !mobile || !group_id || !userGroup || !password || !newPassword) {\r\n          setError(\"Please Input All Values\");\r\n        } else if (window.confirm(\"Are You Sure?\")) {\r\n          console.log({ ...state, password: password });\r\n\r\n          updateUserAction({ ...state, password: password }, id);\r\n          console.log(user);\r\n\r\n          if (props.userErrorMessage) {\r\n            setError(props.userErrorMessage);\r\n          } else {\r\n            setError(\"\");\r\n            setState({\r\n              email: \"\",\r\n              name: \"\",\r\n              mobile: \"\",\r\n              group_id: \"\",\r\n              userGroup: 0,\r\n              group_name: \"\",\r\n            });\r\n\r\n            history.push(\"/usermodule\");\r\n          }\r\n        }\r\n      } else {\r\n        setError(\"Passwords Must Match\");\r\n      }\r\n    } else {\r\n      console.log(\" not in password\");\r\n\r\n      if (!name || !email || !mobile || !group_id || !userGroup) {\r\n        setError(\"Please Input All Values\");\r\n      } else if (window.confirm(\"Are You Sure?\")) {\r\n        console.log(state);\r\n\r\n        updateUserAction(state, id);\r\n        console.log(user);\r\n\r\n        if (props.userErrorMessage) {\r\n          setError(props.userErrorMessage);\r\n        } else {\r\n          setError(\"\");\r\n          setState({\r\n            email: \"\",\r\n            name: \"\",\r\n            mobile: \"\",\r\n            group_id: \"\",\r\n            userGroup: 0,\r\n            group_name: \"\",\r\n          });\r\n\r\n          history.push(\"/usermodule\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // return (\r\n  //   <div className=\"form-div\">\r\n  //     <h2>Edit User</h2>\r\n  //     {error && <h3 style={{ color: 'red' }}>{error}</h3>}\r\n  //     <form onSubmit={handleSubmit}>\r\n  //       <div className=\"form-wrapper\">\r\n  //         <div className=\"field-wrapper\"><label>Name</label>\r\n\r\n  //           <input value={name} name='name' onChange={handleChange} type='text' /></div>\r\n\r\n  //         <div className=\"field-wrapper\"><label>Email</label>\r\n\r\n  //           <input disabled='disabled' value={email} name='email' onChange={handleChange} type='email' /></div>\r\n\r\n  //         <div className=\"field-wrapper\"><label>Password</label>\r\n\r\n  //           <input value={password} name='password' onChange={handleChange} type='password' /></div>\r\n\r\n  //         <div className=\"field-wrapper\"><label>Phone</label>\r\n\r\n  //           <input value={mobile} name='mobile' onChange={handleChange} type='text' /></div>\r\n\r\n  //         <div className=\"field-wrapper\"><label>User Group</label>\r\n  //           <select placeholder=\"Select\" value={group_name} name='group_id' onChange={handleChange} >\r\n  //             <option >Select</option>\r\n  //             {Groups.map(group => {\r\n  //               return (<option>{group.name}</option>)\r\n  //             })}\r\n  //           </select>\r\n  //         </div>\r\n  //         <button className=\"create-button\" type='submit' >Confirm</button>\r\n  //       </div>\r\n  //     </form>\r\n  //     <button className=\"create-button\" onClick={() => history.push('/usermodule')}>Go Back</button>\r\n\r\n  //   </div>\r\n\r\n  // )\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <div className=\"user-wrapper\">\r\n        <h2>Edit User</h2>\r\n\r\n        <button className=\"create-button\" onClick={() => history.push(\"/usermodule\")}>\r\n          Go Back\r\n        </button>\r\n      </div>\r\n      {error && <h3 style={{ color: \"red\" }}>{error}</h3>}\r\n      <div className=\"table-wrapper\">\r\n        <form className=\"realform\" onSubmit={handleSubmit}>\r\n          <div className=\"field-wrapper\">\r\n            <label>Name</label>\r\n\r\n            <input className=\"form-input\" value={name} name=\"name\" onChange={handleChange} type=\"text\" />\r\n          </div>\r\n\r\n          <div className=\"field-wrapper\">\r\n            <label>Email</label>\r\n\r\n            <input className=\"form-input\" disabled=\"disabled\" value={email} name=\"email\" onChange={handleChange} type=\"email\" />\r\n          </div>\r\n\r\n          {/* <div className=\"field-wrapper\"><label>Password</label>\r\n\r\n            <input type=\"hidden\" className=\"form-input\" onChange={handleChange} /></div> */}\r\n\r\n          <div className=\"field-wrapper\">\r\n            <label>Phone</label>\r\n\r\n            <input className=\"form-input\" value={mobile} name=\"mobile\" onChange={handleChange} type=\"text\" />\r\n          </div>\r\n\r\n          <div className=\"field-wrapper\">\r\n            <label>User Group</label>\r\n            <select className=\"form-select\" placeholder=\"Select\" value={group_name} name=\"group_id\" onChange={handleChange}>\r\n              <option>Select</option>\r\n              {Groups.map((group) => {\r\n                return <option>{group.name}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          {/* {display && <UpdatePassword newPassword={newPassword} setNewPassword={setNewPassword} password={password} setPassword={setPassword} />}\r\n\r\n            <div className=\"feild-wrapper\">\r\n\r\n              <button type=\"button\" onClick={handleDisplay} className=\"create-button\">{passText}</button>\r\n            </div> */}\r\n\r\n          <br></br>\r\n\r\n          <button className=\"create-button\" type=\"submit\">\r\n            Confirm\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     userData: state.user\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     fetchSingleUser: (id) => dispatch(fetchSingleUser(id)),\r\n//     updateOldUser: (user, id) => dispatch(updateOldUser(user, id))\r\n//   }\r\n// }\r\n\r\nconst updateUserAction = curdActions.updateUser;\r\nconst getUserAction = curdActions.getUser;\r\n\r\nlet actionOptions = {\r\n  create: false,\r\n  update: false,\r\n  read: true,\r\n  delete: false,\r\n  others: { updateUserAction, getUserAction },\r\n};\r\nlet variableList = {\r\n  userReducer: { user: {} },\r\n};\r\n\r\nlet myReducer = [\"userReducer\"];\r\nconst EditUserContainer = CRUDFunction(EditUser, \"Group\", actionOptions, variableList, myReducer, \"userGroup\");\r\n\r\nexport default EditUserContainer;\r\n","D:\\Web Development\\PMS\\frontend\\src\\components\\UserModule\\CreateUser.js",["814","815","816","817","818","819","820","821"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n//import { addUsers } from \"../redux/user\"\r\n\r\nimport { useRef } from \"react\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { button } from \"../Common/Forms/formsMiscItems\";\r\n\r\nfunction CreateUser(props) {\r\n  const history = useHistory();\r\n  const { createUserAction, getGroups, groups, users, getUsersAction } = props;\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n\r\n    getUsersAction();\r\n  }, []);\r\n\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    mobile: \"\",\r\n    userGroup: 0,\r\n    group_id: \"\",\r\n    group_name: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { name, email, password, mobile, group_id, userGroup, group_name } = state;\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    let id = 0;\r\n    let newGroup_id = \"\";\r\n\r\n    if (name === \"group_id\") {\r\n      for (const group of groups) {\r\n        if (group.name == value) {\r\n          id = group._id;\r\n          newGroup_id = group.group_id;\r\n        }\r\n      }\r\n      setState({ ...state, group_name: value, group_id: newGroup_id, userGroup: id });\r\n    } else {\r\n      setState({ ...state, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let emailCheck = false;\r\n\r\n    for (const myUser of users) {\r\n      if (myUser.email == email) {\r\n        emailCheck = true;\r\n      }\r\n    }\r\n    if (!name || !email || !password || !mobile || !group_id || !userGroup) {\r\n      setError(\"Please Input All Values\");\r\n    } else if (emailCheck) {\r\n      setError(\"Email Already Exists\");\r\n    } else if (window.confirm(\"Are You Sure?\")) {\r\n      createUserAction(state);\r\n      if (props.userErrorMessage) {\r\n        setError(props.userErrorMessage);\r\n      } else {\r\n        setError(\"\");\r\n        setState({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          mobile: \"\",\r\n          group_id: \"\",\r\n          userGroup: 0,\r\n          group_name: \"\",\r\n        });\r\n\r\n        history.push(\"/usermodule\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <div className=\"user-wrapper\">\r\n        <h2>Create User</h2>\r\n\r\n        <button className=\"create-button\" onClick={() => history.push(\"/usermodule\")}>\r\n          Go Back\r\n        </button>\r\n      </div>\r\n      {error && <h3 style={{ color: \"red\" }}>{error}</h3>}\r\n      <div className=\"table-wrapper\">\r\n        <form className=\"realform\" onSubmit={handleSubmit}>\r\n          <div className=\"field-wrapper\">\r\n            <label>Name</label>\r\n\r\n            <input className=\"form-input\" value={name} name=\"name\" onChange={handleChange} type=\"text\" />\r\n          </div>\r\n\r\n          <div className=\"field-wrapper\">\r\n            <label>Email</label>\r\n\r\n            <input className=\"form-input\" value={email} name=\"email\" onChange={handleChange} type=\"email\" />\r\n          </div>\r\n\r\n          <div className=\"field-wrapper\">\r\n            <label>Password</label>\r\n\r\n            <input className=\"form-input\" value={password} name=\"password\" onChange={handleChange} type=\"password\" />\r\n          </div>\r\n\r\n          <div className=\"field-wrapper\">\r\n            <label>Phone</label>\r\n\r\n            <input className=\"form-input\" value={mobile} name=\"mobile\" onChange={handleChange} type=\"text\" />\r\n          </div>\r\n\r\n          <div className=\"field-wrapper\">\r\n            <label>User Group</label>\r\n            <select className=\"form-select\" placeholder=\"Select\" value={group_name} name=\"group_id\" onChange={handleChange}>\r\n              <option>Select</option>\r\n              {groups.map((group) => {\r\n                return <option>{group.name}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <button className=\"create-button\" type=\"submit\">\r\n            Confirm\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //userData: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //addUsers: (state) => dispatch(createUser(state))\r\n  };\r\n};\r\n\r\nconst createUserAction = curdActions.createUser;\r\nconst getUsersAction = curdActions.getUsers;\r\n\r\nlet actionOptions = {\r\n  create: false,\r\n  update: false,\r\n  read: true,\r\n  delete: false,\r\n  others: { createUserAction, getUsersAction },\r\n};\r\nlet variableList = {\r\n  userReducer: {\r\n    user: {},\r\n    users: [],\r\n  },\r\n};\r\n\r\nlet myReducer = [\"userReducer\"];\r\nconst CreateuserContainer = CRUDFunction(CreateUser, \"group\", actionOptions, variableList, myReducer, \"userGroup\");\r\n\r\nexport default CreateuserContainer;\r\n","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\actions\\loginActions.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\TopBar\\TopBarView.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\DailyLogging.jsx",["822","823","824","825","826","827","828","829","830","831","832"],"import React, { Component } from \"react\";\r\nimport { loggedInUser } from \"../../utils/util\";\r\nimport { InputDateField, Label, InputFieldCustom, TextAreaField, SelectField } from \"../FormInputs/InputFields\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Icon from \"react-icons-kit\";\r\nimport { pmsThemeColors } from \"../../style/basic/basicColors\";\r\nimport { check } from \"react-icons-kit/metrize/check\";\r\nimport { cross } from \"react-icons-kit/metrize/cross\";\r\nimport { themeService } from \"../../theme/service/activeTheme.service\";\r\nimport { withPlus } from \"react-icons-kit/entypo/withPlus\";\r\nimport { refresh } from \"react-icons-kit/metrize/refresh\";\r\nimport { play } from \"react-icons-kit/metrize/play\";\r\nimport { stop } from \"react-icons-kit/metrize/stop\";\r\nimport { defaultFormVal, projects } from \"./DailyLoggingVars\";\r\nimport { Tooltip } from \"reactstrap\";\r\nimport { zonedTimeToUtc, utcToZonedTime, format } from \"date-fns-tz\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { getTimezone, updateTimezone, editLocation } from \"./DailyLoggingVars\";\r\nimport { timezoneList, timezoneListAlias } from \"./DailyLoggingVars\";\r\nimport Times from \"./Times\";\r\n\r\nimport {\r\n  handleAddSessionState,\r\n  resetOrEditMethod,\r\n  cancelMethod,\r\n  saveSession,\r\n  loadFormRelatedState,\r\n  getSessions,\r\n  getActiveSession,\r\n  editMode,\r\n  convertTimezone,\r\n} from \"./DailyLoggingMethods\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\nimport SessionsList from \"./SessionsList/SessionsList\";\r\nimport \"./style.css\";\r\nimport { filtersMethod } from \"./FilterMethods/filterMethods\";\r\nimport FilterArea from \"./FilterMethods/FilterArea\";\r\nimport permissionCheck from \"../../utils/permissionCheck\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { UserSelectArea } from \"./FilterMethods/UserSelectArea\";\r\n\r\nconst filterValues = {\r\n  Day: { from: moment().startOf(\"d\"), to: moment().endOf(\"d\") },\r\n  Week: { from: moment().startOf(\"w\"), to: moment().endOf(\"w\") },\r\n  Month: { from: moment().startOf(\"month\"), to: moment().endOf(\"month\") },\r\n};\r\nclass DailyLogging extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      form: { ...defaultFormVal },\r\n      addMode: false,\r\n      editMode: false,\r\n      changeInForm: false,\r\n      selectedSession: null,\r\n      editExistingSession: null,\r\n      filterMode: \"Week\",\r\n      range: filterValues[\"Week\"],\r\n      userSelectAllowed: false,\r\n      time: new Date(),\r\n      sessionClicked: false,\r\n      timezone: getTimezone(),\r\n    };\r\n    this.timeInterval = null;\r\n    this.toggle = this.toggle.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleAddClick = this.handleAddClick.bind(this);\r\n    this.handleActions = this.handleActions.bind(this);\r\n    this.handleEditClick = this.handleEditClick.bind(this);\r\n    this.handleFilterClick = this.handleFilterClick.bind(this);\r\n    this.handleFilterMoveClick = this.handleFilterMoveClick.bind(this);\r\n    this.handleUserSelect = this.handleUserSelect.bind(this);\r\n    this.handleTimeChange = this.handleTimeChange.bind(this);\r\n    this.loggedInUser = isJSON(loggedInUser());\r\n  }\r\n\r\n  handleFilterMoveClick(direction) {\r\n    let dateRange = { ...this.state.range };\r\n    let dateLogic = {\r\n      Day: \"d\",\r\n      Week: \"w\",\r\n      Month: \"month\",\r\n    };\r\n    if (direction == 1) {\r\n      // right\r\n      dateRange.from.add(1, dateLogic[this.state.filterMode]);\r\n      dateRange.to.add(1, dateLogic[this.state.filterMode]);\r\n    } else {\r\n      // left\r\n      dateRange.from.subtract(1, dateLogic[this.state.filterMode]);\r\n      dateRange.to.subtract(1, dateLogic[this.state.filterMode]);\r\n    }\r\n    this.fetchFromServer(this.state.selectedUser, dateRange);\r\n    this.setState({ range: dateRange });\r\n  }\r\n  handleFilterClick(filter) {\r\n    let dateRange = filterValues[filter];\r\n    this.fetchFromServer(this.state.selectedUser, dateRange);\r\n    this.setState({\r\n      filterMode: filter,\r\n      range: dateRange,\r\n    });\r\n  }\r\n  handleAddClick() {\r\n    if (!this.state.addMode) {\r\n      this.setState(handleAddSessionState());\r\n    }\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      tooltipOpen: !this.state.tooltipOpen,\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    this.loggedInUser = isJSON(loggedInUser());\r\n    if (this.loggedInUser) {\r\n      getSessions(this.loggedInUser._id, this.state.range, this.props.getTaskSessions);\r\n      getActiveSession(this.loggedInUser._id, this.state.range, this.props.getTaskSession);\r\n\r\n      this.multipleUserSelectionMethod(this.loggedInUser);\r\n      this.setState({\r\n        selectedUser: this.loggedInUser._id,\r\n      });\r\n    }\r\n\r\n    this.timeInterval = setInterval(() => {\r\n      this.setState({\r\n        time: new Date(),\r\n      });\r\n      updateTimezone(getTimezone());\r\n    }, 40000);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.actionType === \"TASKSESSION_READ_SUCCESS\" && this.props.actionType !== prevProps.actionType) {\r\n      if (this.props.taskSession) {\r\n        this.setState({\r\n          sessionClicked: true,\r\n        });\r\n      } else if (!this.props.taskSession) {\r\n        this.setState({\r\n          sessionClicked: false,\r\n        });\r\n      }\r\n    }\r\n    if (this.props.actionType === \"TASKSESSION_CREATE_SUCCESS\" && this.props.actionType !== prevProps.actionType) {\r\n      let stateToSet = cancelMethod();\r\n      stateToSet.selectedUser = this.loggedInUser._id;\r\n      this.setState(stateToSet);\r\n      this.fetchFromServer(this.loggedInUser._id);\r\n    }\r\n    if (this.props.actionType === \"TASKSESSION_UPDATE_SUCCESS\" && this.props.actionType !== prevProps.actionType) {\r\n      let stateToSet = cancelMethod();\r\n      stateToSet.selectedUser = this.loggedInUser._id;\r\n      this.setState(stateToSet);\r\n      this.fetchFromServer(this.loggedInUser._id);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeInterval) {\r\n      clearInterval(this.timeInterval);\r\n    }\r\n  }\r\n\r\n  multipleUserSelectionMethod(loggedInUser) {\r\n    if (loggedInUser && loggedInUser._id) {\r\n      let permCheck = permissionCheck(\"USER\", \"manager_view\");\r\n      if (permCheck) {\r\n        this.props.getUsers();\r\n        this.setState({\r\n          userSelectAllowed: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchFromServer(userId, range) {\r\n    if (userId) {\r\n      getSessions(userId, range ? range : this.state.range, this.props.getTaskSessions);\r\n    }\r\n  }\r\n  handleChange(value, name, blur) {\r\n    let form = { ...this.state.form };\r\n    form[name] = value;\r\n    if (name === \"checkin\") {\r\n      if (form.checkout < form.checkin) form.checkout = form.checkin;\r\n    }\r\n    this.setState({\r\n      form: form,\r\n      changeInForm: true,\r\n    });\r\n  }\r\n\r\n  handleTimeChange(e) {\r\n    if (e.target.value != \"Select Timezone\") {\r\n      updateTimezone(e.target.value);\r\n      this.setState({\r\n        timezone: e.target.value,\r\n      });\r\n\r\n      console.log(getTimezone());\r\n\r\n      if (this.state.addMode || this.state.editMode) {\r\n        this.setState(cancelMethod);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleActions(mode) {\r\n    if (mode > 0) {\r\n      console.log(\"In overall edit\", this.props.taskSession);\r\n\r\n      let stateToSet = loadFormRelatedState(this.state);\r\n\r\n      console.log(\"State in overall\", stateToSet);\r\n\r\n      if (mode === 1) {\r\n        if (stateToSet.form.timed === true) {\r\n          if (\r\n            stateToSet.form.checkin !== this.state.selectedSession.checkin ||\r\n            stateToSet.form.checkout !== this.state.selectedSession.checkout\r\n          )\r\n            stateToSet.form = {\r\n              ...stateToSet.form,\r\n              timed: false,\r\n            };\r\n        }\r\n\r\n        console.log(\"Added\", stateToSet);\r\n\r\n        stateToSet.form.timezone = getTimezone();\r\n\r\n        convertTimezone(stateToSet, getTimezone());\r\n\r\n        // //updating timezone on addition or edit\r\n        editLocation(getTimezone());\r\n\r\n        saveSession(stateToSet, this.loggedInUser, this.props.createTaskSession, this.props.updateTaskSession);\r\n      } else if (mode === 2 && this.state.selectedSession !== null) {\r\n        stateToSet.form.timezone = this.state.selectedSession.timezone;\r\n        console.log(\"Reset or Edit\", this.state.selectedSession);\r\n\r\n        resetOrEditMethod(stateToSet, this.state.selectedSession);\r\n      } else if (mode === 3) {\r\n        console.log(\"Cancel\", this.state.selectedSession);\r\n\r\n        stateToSet = cancelMethod();\r\n      }\r\n\r\n      //start session\r\n      else if (mode === 4) {\r\n        this.setState({\r\n          sessionClicked: true,\r\n        });\r\n\r\n        stateToSet.form = {\r\n          ...stateToSet.form,\r\n          timed: true,\r\n        };\r\n\r\n        stateToSet.form.checkin = utcToZonedTime(new Date(), getTimezone());\r\n        stateToSet.form.checkout = null;\r\n\r\n        console.log(stateToSet);\r\n\r\n        stateToSet.form.timezone = getTimezone();\r\n\r\n        convertTimezone(stateToSet, getTimezone());\r\n\r\n        //updating timezone on addition or edit\r\n        editLocation(getTimezone());\r\n\r\n        saveSession(stateToSet, this.loggedInUser, this.props.createTaskSession, this.props.updateTaskSession);\r\n      }\r\n\r\n      //stop session\r\n      else if (mode === 5 && this.props.taskSession.timed && !this.props.taskSession.checkout) {\r\n        this.setState({\r\n          sessionClicked: false,\r\n        });\r\n\r\n        console.log(\"IN STOP\", this.props.taskSession);\r\n        stateToSet.form = { ...this.props.taskSession };\r\n\r\n        stateToSet.form.checkin = utcToZonedTime(new Date(this.props.taskSession.checkin), getTimezone());\r\n\r\n        stateToSet.form.checkout = utcToZonedTime(new Date(), getTimezone());\r\n\r\n        stateToSet.form.timezone = getTimezone();\r\n\r\n        convertTimezone(stateToSet, getTimezone());\r\n\r\n        //updating timezone on addition or edit\r\n        editLocation(getTimezone());\r\n\r\n        saveSession(stateToSet, this.loggedInUser, this.props.createTaskSession, this.props.updateTaskSession);\r\n      }\r\n\r\n      console.log(\"After perfroming action\", this.props.taskSession);\r\n\r\n      this.setState(stateToSet);\r\n\r\n      getActiveSession(this.loggedInUser._id, this.state.range, this.props.getTaskSession);\r\n    }\r\n  }\r\n\r\n  handleEditClick(session) {\r\n    let stateToSet = loadFormRelatedState(this.state);\r\n    editMode(stateToSet, session);\r\n    this.setState(stateToSet);\r\n  }\r\n  handleUserSelect(user_id) {\r\n    this.setState({\r\n      selectedUser: user_id,\r\n    });\r\n    this.fetchFromServer(user_id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col className=\"task-area\" md={12}>\r\n          <Times\r\n            timezone={getTimezone()}\r\n            time={this.state.time}\r\n            show={this.state.sessionClicked}\r\n            taskSession={this.props.taskSession}\r\n          ></Times>\r\n        </Col>\r\n\r\n        <Col className=\"task-area\" md={12}>\r\n          <div className=\"session-first\">\r\n            <h2>Task Sessions</h2>\r\n            <Row>\r\n              <select value={this.state.timezone} onChange={this.handleTimeChange} className=\"form-select-session\">\r\n                <option>Select Timezone</option>\r\n                {timezoneList.map((timezone, index) => {\r\n                  return <option value={timezoneList[index]}>{timezone}</option>;\r\n                })}\r\n              </select>\r\n            </Row>\r\n\r\n            <div className=\"session-first\">\r\n              {/* for timed session  play */}\r\n\r\n              <span\r\n                style={{\r\n                  ...themeService(dailyStyles.iconStyle),\r\n                  color: \"green\",\r\n                  color: this.state.sessionClicked ? \"grey\" : \"green\",\r\n                  cursor: this.state.sessionClicked ? \"not-allowed\" : \"pointer\",\r\n                }}\r\n                onClick={async (e) => {\r\n                  await getActiveSession(this.loggedInUser._id, this.state.range, this.props.getTaskSession);\r\n                  if (!this.props.taskSession) {\r\n                    this.handleActions(4);\r\n                  }\r\n                }}\r\n                id=\"Start\"\r\n              >\r\n                <Icon icon={play} size={35} />\r\n              </span>\r\n\r\n              {/* for timed session  stop */}\r\n              <span\r\n                style={{\r\n                  ...themeService(dailyStyles.iconStyle),\r\n                  color: \"#610016\",\r\n\r\n                  color: this.state.sessionClicked ? \"#610016\" : \"grey\",\r\n                  cursor: this.state.sessionClicked ? \"pointer\" : \"not-allowed\",\r\n                }}\r\n                onClick={async (e) => {\r\n                  await getActiveSession(this.loggedInUser._id, this.state.range, this.props.getTaskSession);\r\n\r\n                  if (this.props.taskSession) {\r\n                    this.handleActions(5);\r\n                  }\r\n                }}\r\n                id=\"Stop\"\r\n              >\r\n                <Icon icon={stop} size={35} />\r\n              </span>\r\n\r\n              <span className=\"add-click\" onClick={this.handleAddClick}>\r\n                <Icon icon={withPlus} size={42} />\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {(this.state.addMode || this.state.editMode) && (\r\n            <CheckinOutArea\r\n              handleChange={this.handleChange}\r\n              changeInForm={this.state.changeInForm}\r\n              form={this.state.form}\r\n              handleActions={this.handleActions}\r\n              tooltipOpen={this.state.tooltipOpen}\r\n              toggle={this.toggle}\r\n              selectedSession={this.state.selectedSession}\r\n            />\r\n          )}\r\n        </Col>\r\n\r\n        <Col className=\"task-area\" md={12}>\r\n          <div className=\"session-first\">\r\n            <h2>Task Sessions List</h2>\r\n\r\n            <div>\r\n              {this.state.userSelectAllowed && (\r\n                <UserSelectArea\r\n                  className=\"form-select\"\r\n                  onUserSelectChange={this.handleUserSelect}\r\n                  selectedUser={this.state.selectedUser}\r\n                  userList={this.props.users}\r\n                  label=\"User\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <br></br>\r\n\r\n          <FilterArea\r\n            handleFilterClick={this.handleFilterClick}\r\n            filterMode={this.state.filterMode}\r\n            dateRange={this.state.range}\r\n            handleFilterMoveClick={this.handleFilterMoveClick}\r\n          />\r\n          <SessionsList\r\n            sessionList={this.props.taskSessions}\r\n            handleEditClick={this.handleEditClick}\r\n            editable={this.loggedInUser && this.loggedInUser._id === this.state.selectedUser}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nlet variableList = {\r\n  userReducer: { users: [] },\r\n};\r\nconst getUsers = curdActions.getUsers;\r\nlet actionOptions = {\r\n  create: true,\r\n  update: true,\r\n  read: true,\r\n  delete: true,\r\n  others: { getUsers },\r\n};\r\nlet reds = [\"userReducer\"];\r\nlet DailyLoggingContainer = CRUDFunction(DailyLogging, \"taskSession\", actionOptions, variableList, reds);\r\nexport default DailyLoggingContainer;\r\n\r\nfunction CheckinOutArea(props) {\r\n  return (\r\n    <div>\r\n      <InputDateField\r\n        label=\"Check-In\"\r\n        changeHandler={(date, blurValue) => {\r\n          props.handleChange(date, \"checkin\", blurValue);\r\n        }}\r\n        value={props.form.checkin}\r\n        dayTimePickerProps={{ disableClock: true }}\r\n        style={{ display: \"inline-block\" }}\r\n      />\r\n      <TextAreaField\r\n        label=\"Task\"\r\n        changeHandler={(e, blurValue) => {\r\n          props.handleChange(e.target.value, \"task\", blurValue);\r\n        }}\r\n        value={props.form.task}\r\n        style={{ display: \"inline-block\" }}\r\n        inputStyle={{ width: \"300px\" }}\r\n      />\r\n      <SelectField\r\n        label=\"Project\"\r\n        options={projects}\r\n        value={props.form.project}\r\n        changeHandler={(e, blurValue) => {\r\n          console.log(e);\r\n          props.handleChange(e.target.value, \"project\", blurValue);\r\n        }}\r\n      />\r\n      <InputDateField\r\n        label=\"Check-Out\"\r\n        changeHandler={(date, blurValue) => {\r\n          props.handleChange(date, \"checkout\", blurValue);\r\n        }}\r\n        value={props.form.checkout}\r\n        dayTimePickerProps={{ disableClock: true }}\r\n        style={{ display: \"inline-block\", margin: \"0px 15px\" }}\r\n      />\r\n      <span\r\n        style={{\r\n          ...themeService(dailyStyles.iconStyle),\r\n          color: props.changeInForm ? pmsThemeColors.third : \"grey\",\r\n          cursor: props.changeInForm ? \"pointer\" : \"not-allowed\",\r\n        }}\r\n        onClick={(e) => {\r\n          if (props.changeInForm) props.handleActions(1);\r\n        }}\r\n        id=\"check\"\r\n      >\r\n        <Icon icon={check} size={24} />\r\n      </span>\r\n      {/* <Tooltip placement=\"top\" isOpen={props.tooltipOpen} target=\"check\" toggle={props.toggle}>\r\n        Check In\r\n      </Tooltip> */}\r\n      <span\r\n        style={{ ...themeService(dailyStyles.iconStyle), color: pmsThemeColors.third }}\r\n        onClick={(e) => {\r\n          props.handleActions(2);\r\n        }}\r\n        id=\"refresh\"\r\n      >\r\n        <Icon icon={refresh} size={24} />\r\n      </span>\r\n      {/* <Tooltip placement=\"top\" isOpen={props.tooltipOpen} target=\"refresh\" toggle={props.toggle}>\r\n        Refresh\r\n      </Tooltip> */}\r\n      <span\r\n        style={{ ...themeService(dailyStyles.iconStyle), color: \"#610016\" }}\r\n        onClick={(e) => {\r\n          props.handleActions(3);\r\n        }}\r\n        id=\"Cancel\"\r\n      >\r\n        <Icon icon={cross} size={24} />\r\n      </span>\r\n\r\n      {/* <Tooltip placement=\"top\" isOpen={props.tooltipOpen} target=\"Cancel\" toggle={props.toggle}>\r\n        Cancel\r\n      </Tooltip> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst dailyStyles = {\r\n  iconStyle: { tenant: { padding: \"0px 5px\", cursor: \"pointer\" } },\r\n  taskAreaStyle: { tenant: { background: pmsThemeColors.fourth, margin: \"15px\", padding: \"10px\" } },\r\n  headingthird: { tenant: { textAlign: \"left\", padding: \"0px 15px\" } },\r\n};\r\n","D:\\Web Development\\PMS\\frontend\\src\\components\\User\\User.jsx",["833","834"],"D:\\Web Development\\PMS\\frontend\\src\\Pages\\SessionExport\\SessionExport.jsx",["835","836","837","838","839","840","841","842","843","844","845","846","847"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { MyButton, button } from \"../../components/Common/Forms/formsMiscItems\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { UserSelectArea } from \"../../components/DailyLogging/FilterMethods/UserSelectArea\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { downloadCsv } from \"../../utils/downloadCsv\";\r\nimport { dataFormatters } from \"../../utils/dateFormatters\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport FilterArea from \"../../components/DailyLogging/FilterMethods/FilterArea\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { SelectField } from \"../../components/FormInputs/InputFields\";\r\nimport { isLoggedOn } from \"../../utils/util\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\nimport { loggedInUser } from \"../../utils/util\";\r\nimport { NumberFormat } from \"xlsx\";\r\nimport SessionSummary from \"./SessionSummary\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst filterValues = {\r\n  Day: { from: moment().startOf(\"d\"), to: moment().endOf(\"d\") },\r\n  Week: { from: moment().startOf(\"w\"), to: moment().endOf(\"w\") },\r\n  Month: { from: moment().startOf(\"month\"), to: moment().endOf(\"month\") },\r\n};\r\n\r\nconst SessionExport = (props) => {\r\n  const [filterMode, setFilterMode] = useState(\"Month\");\r\n  const [range, setRange] = useState(filterValues[\"Month\"]);\r\n  //const [sessions, setSession] = useState([]);\r\n\r\n  const [filterBy, setFilterBy] = useState(\"User\");\r\n\r\n  const prevActionType = props.actionType;\r\n  const prevActionTypeRef = useRef(prevActionType);\r\n\r\n  const [selectedUser, setSelectedUser] = useState([]);\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [tableDataIndex, setTableDataIndex] = useState(0);\r\n  useEffect(() => {\r\n    props.getTeams();\r\n    props.getUsers();\r\n    const loggedUser = isJSON(loggedInUser());\r\n    // fetchFromServer(range);\r\n    if (loggedUser) {\r\n      setSelectedUser(loggedUser._id);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"SESSIONEXPORTS_READ_SUCCESS\") {\r\n      // setSessionExports(props.SessionExports)\r\n      // setSessionExports(prevData => (\r\n      //   prevData.map(obj => ({\r\n      //     ...obj,\r\n      //     PlannedorUnplanned: \"Unplanned\"\r\n      //   }))\r\n      // ));\r\n      setTableData(props.SessionExports);\r\n\r\n      //setSession(props.SessionExports);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType) {\r\n      prevActionTypeRef.current = props.actionType;\r\n    }\r\n  }, [props.actionType]);\r\n\r\n  useEffect(() => {\r\n    fetchFromServer(range, filterBy, selectedUser);\r\n  }, [range, filterBy, selectedUser]);\r\n\r\n  function handleExportClick() {\r\n    // fetchFromServer(range, filterBy, selectedUser);\r\n    loadWorkBook(tableData);\r\n  }\r\n  //exporting the xlsx file\r\n  const loadWorkBook = (dataArray) => {\r\n    if (dataArray && dataArray.length > 0) {\r\n      let exportDate = \"\";\r\n      exportDate = dataFormatters.dateFormatter(new Date());\r\n      const formattedFromDate = range.from.format(\"D MMM YY\");\r\n      const formattedToDate = range.to.format(\"D MMM YY\");\r\n\r\n      let dateRange = `${formattedFromDate} - ${formattedToDate}`;\r\n\r\n      // header[filterBy === \"Team\" ? \"Team Lead's Name\" : \"User's Name\"] = props.users.find((u) => u._id === selectedUser).name;\r\n\r\n      const wb = XLSX.utils.book_new();\r\n      for (let data of dataArray) {\r\n        let absents = 0;\r\n\r\n        let newData = data.map((d) => {\r\n          if (!d.Checkin) {\r\n            absents += 1;\r\n          }\r\n\r\n          const { Member, ...newObj } = d;\r\n          return newObj;\r\n        });\r\n\r\n        let header = { Member: data[0].Member, Absents: absents };\r\n        let ws = XLSX.utils.json_to_sheet([header]);\r\n        XLSX.utils.sheet_add_json(ws, newData, { origin: 3 });\r\n\r\n        for (let R = 5; R <= newData.length + 4; R++) {\r\n          const checkinCell = \"B\" + R;\r\n          const checkoutCell = \"C\" + R;\r\n          try {\r\n            ws[checkinCell].z = \"h:mm AM/PM\";\r\n            ws[checkoutCell].z = \"h:mm AM/PM\";\r\n          } catch (e) {\r\n            console.log(e);\r\n          }\r\n        }\r\n\r\n        ws[\"!cols\"] = [{ wch: 20 }, { wch: 20 }, { wch: 20 }, { wch: 20 }, { wch: 20 }];\r\n\r\n        XLSX.utils.book_append_sheet(wb, ws, `${data[0].Member}`);\r\n      }\r\n\r\n      dateRange = dateRange.toString();\r\n\r\n      XLSX.writeFileXLSX(wb, `SessionSummary-${dateRange}.xlsx`);\r\n    }\r\n  };\r\n\r\n  function handleFilterMoveClick(direction) {\r\n    let dateRange = { ...range };\r\n    let dateLogic = {\r\n      Day: \"d\",\r\n      Week: \"w\",\r\n      Month: \"month\",\r\n    };\r\n    if (direction == 1) {\r\n      // right\r\n      dateRange.from.add(1, dateLogic[filterMode]);\r\n      dateRange.to.add(1, dateLogic[filterMode]);\r\n    } else {\r\n      // left\r\n      dateRange.from.subtract(1, dateLogic[filterMode]);\r\n      dateRange.to.subtract(1, dateLogic[filterMode]);\r\n    }\r\n    //fetchFromServer(dateRange);\r\n\r\n    setRange(dateRange);\r\n  }\r\n  function handleFilterClick(filter) {\r\n    let dateRange = filterValues[filter];\r\n    //fetchFromServer(dateRange);\r\n\r\n    setFilterMode(filter);\r\n    setRange(dateRange);\r\n  }\r\n\r\n  function handleFilterByChange(filter) {\r\n    //fetchFromServer(dateRange);\r\n\r\n    setFilterBy(filter);\r\n  }\r\n\r\n  function convertToTeam(users, teams) {\r\n    let usersToReturn = [];\r\n    teams.forEach((t) => {\r\n      let found = -1;\r\n      if (t && t.teamLead) {\r\n        found = users.find((u) => u.email === t.teamLead.email);\r\n      }\r\n      if (found) {\r\n        usersToReturn.push(found);\r\n      }\r\n    });\r\n\r\n    return usersToReturn;\r\n  }\r\n\r\n  function fetchFromServer(Range, FilterBy, SelectedUser) {\r\n    getSessions(Range ? Range : range, FilterBy ? FilterBy : filterBy, SelectedUser ? SelectedUser : selectedUser, props.getSessionExports);\r\n  }\r\n  function excelDateToJSDateString(excelDate) {\r\n    if (excelDate) {\r\n      const dateOffset = 25569;\r\n      const milliseconds = (excelDate - dateOffset) * 24 * 60 * 60 * 1000;\r\n      const jsDate = new Date(milliseconds);\r\n      return jsDate.toDateString();\r\n    }\r\n    return \"\";\r\n  }\r\n  function getSessions(range, FilterBy, SelectedUser, method) {\r\n    let query = \"\";\r\n\r\n    if (range) {\r\n      var jsonArray = encodeURIComponent(JSON.stringify(range));\r\n      query = query + \"?range=\" + jsonArray;\r\n    }\r\n\r\n    if (FilterBy && range) {\r\n      query = query + \"&filterBy=\" + FilterBy;\r\n    }\r\n\r\n    if (FilterBy && range && SelectedUser) {\r\n      query = query + \"&selectedUser=\" + SelectedUser;\r\n    }\r\n    method(`/exportsessionstatus/${query}`);\r\n  }\r\n\r\n  function handleUserSelect(user_id) {\r\n    setSelectedUser(user_id);\r\n\r\n    //this.fetchFromServer(user_id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-wrapper\">\r\n        <h2> Export Session Summary Data </h2>\r\n\r\n        <button className=\"create-button\" onClick={handleExportClick}>\r\n          Export Data\r\n        </button>\r\n      </div>\r\n      <div className=\"form-wrapper\">\r\n        <h2> Filter Area</h2>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div style={{ width: \"400px\" }}>\r\n            <UserSelectArea\r\n              className=\"form-select\"\r\n              onUserSelectChange={handleUserSelect}\r\n              selectedUser={selectedUser}\r\n              customStyle={{ width: \"200px\" }}\r\n              userList={filterBy === \"Team\" ? convertToTeam(props.users, props.teams) : props.users}\r\n              label={filterBy === \"Team\" ? \"Team Lead\" : filterBy}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              width: \"500px\",\r\n            }}\r\n          >\r\n            <select value={filterBy} onChange={(e) => handleFilterByChange(e.target.value)} className=\"form-select-session\">\r\n              <option value={\"Team\"}>Filter By Team</option>;<option value={\"User\"}>Filter By User</option>;\r\n            </select>\r\n          </div>\r\n\r\n          <div style={{ width: \"400px\" }}>\r\n            <FilterArea\r\n              handleFilterClick={handleFilterClick}\r\n              filterMode={filterMode}\r\n              dateRange={range}\r\n              customStyle={{ textAlign: \"right\" }}\r\n              handleFilterMoveClick={handleFilterMoveClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-wrapper\">\r\n        <h2>Table</h2>\r\n        {tableData.length > 0 && (\r\n          <select\r\n            name=\"\"\r\n            id=\"\"\r\n            onChange={(e) => {\r\n              console.log(e.target.value);\r\n              setTableDataIndex(e.target.value);\r\n            }}\r\n          >\r\n            {tableData.map((row, index) => (\r\n              <option key={index} value={index}>\r\n                {row[0].Member}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n\r\n        <div className=\"table-wrapper\">\r\n          <table className=\"table table-striped table-responsive\">\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"5%\" }}>\r\n                  Sr.No\r\n                </th>\r\n                <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                  Member\r\n                </th>\r\n                <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                  Date\r\n                </th>\r\n                <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                  Checkin\r\n                </th>\r\n                <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                  Checkout\r\n                </th>\r\n                <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                  Duration\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.length > 0 &&\r\n                (tableData[tableDataIndex] || tableData[0]).map((entry, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{entry.Member}</td>\r\n                    <td>{entry.Date}</td>\r\n                    <td>{excelDateToJSDateString(entry.Checkin)}</td>\r\n                    <td>{excelDateToJSDateString(entry.Checkout)}</td>\r\n                    <td>{entry.Duration}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {tableData.length > 0 && <SessionSummary data={tableData[tableDataIndex] || tableData[0]} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet variableList = {\r\n  userReducer: { users: [] },\r\n  teamReducer: { teams: [] },\r\n};\r\nconst getUsers = curdActions.getUsers;\r\nconst getTeams = curdActions.getTeams;\r\nlet actionOptions = {\r\n  create: true,\r\n  update: true,\r\n  read: true,\r\n  delete: true,\r\n  others: { getUsers, getTeams },\r\n};\r\nlet reds = [\"userReducer\", \"teamReducer\"];\r\n\r\nconst SessionExportContainer = CRUDFunction(SessionExport, \"SessionExport\", actionOptions, variableList, reds, \"taskSession\");\r\nexport default SessionExportContainer;\r\n","D:\\Web Development\\PMS\\frontend\\src\\Pages\\StatusExport\\StatusExport.jsx",["848","849","850","851","852","853","854","855","856"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { MyButton, button } from \"../../components/Common/Forms/formsMiscItems\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { actionOptions } from \"../../reduxCURD/actionOptions\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { downloadCsv } from \"../../utils/downloadCsv\";\r\nimport { dataFormatters } from \"../../utils/dateFormatters\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { StatusContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nconst StatusExport = (props) => {\r\n  const status = useContext(StatusContext);\r\n\r\n  const { statusExports, setStatusExports } = status;\r\n\r\n  const prevActionType = props.actionType;\r\n  const prevActionTypeRef = useRef(prevActionType);\r\n  const handleExport = (qName) => {\r\n    props.getStatusExports(`/exportsummrystatus?${qName}=true`);\r\n  };\r\n  useEffect(() => {\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"STATUSEXPORTS_READ_SUCCESS\") {\r\n      setStatusExports(props.statusExports);\r\n\r\n      setStatusExports((prevData) =>\r\n        prevData.map((obj) => ({\r\n          ...obj,\r\n          PlannedorUnplanned: \"Unplanned\",\r\n        })),\r\n      );\r\n      //loadWorkBook(props.statusExports);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType) {\r\n      prevActionTypeRef.current = props.actionType;\r\n    }\r\n  }, [props.actionType]);\r\n\r\n  //exporting the xlsx file\r\n  const loadWorkBook = (data) => {\r\n    let exportDate = \"\";\r\n    if (data && data[0]) exportDate = data[0].Date;\r\n    else exportDate = dataFormatters.dateFormatter(new Date());\r\n\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    ws[\"!cols\"] = [{ wch: 10 }, { wch: 15 }, { wch: 20 }, { wch: 25 }, { wch: 70 }];\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Daily Summary\");\r\n    XLSX.writeFileXLSX(wb, `TeamStatus${exportDate}.xlsx`);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value, id } = e.target;\r\n\r\n    let newStatusExports = [...statusExports];\r\n\r\n    newStatusExports[id] = { ...newStatusExports[id], [name]: value };\r\n\r\n    setStatusExports([...newStatusExports]);\r\n  };\r\n\r\n  const addRow = (e) => {\r\n    setStatusExports([\r\n      ...statusExports,\r\n      { Date: statusExports[0].Date, Member: \"\", Project: \"\", TaskSummary: \"\", Team: \"\", PlannedorUnplanned: \"Unplanned\" },\r\n    ]);\r\n  };\r\n\r\n  const deleteRow = (e) => {\r\n    let { name, value, id } = e.target;\r\n    const data = [...statusExports];\r\n    data.splice(id, 1);\r\n    setStatusExports([...data]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Row>\r\n        <Col className=\"task-area\" md={12}>\r\n          <h3> Export Summary Data </h3>\r\n          <button  onClick={(e) => handleExport(\"today\")}>Today</button >\r\n          <button  onClick={(e) => handleExport(\"yesterday\")}>Yesterday</button >\r\n        </Col>\r\n      </Row> */}\r\n\r\n      <div className=\"form-wrapper\">\r\n        <h2> Export Summary Data </h2>\r\n        <div className=\"export-button-wrapper\">\r\n          <button className=\"create-button\" onClick={(e) => handleExport(\"today\")}>\r\n            Today\r\n          </button>\r\n          <button className=\"create-button\" onClick={(e) => handleExport(\"yesterday\")}>\r\n            Yesterday\r\n          </button>\r\n        </div>\r\n\r\n        <>\r\n          <input\r\n            type=\"date\"\r\n            style={{\r\n              padding: \"8px\",\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: \"4px\",\r\n              fontSize: \"14px\",\r\n              margin: \"8px\",\r\n            }}\r\n            onChange={(e) => handleExport(e.target.value)}\r\n          />\r\n        </>\r\n\r\n        {statusExports[0] && (\r\n          <button className=\"create-button\" onClick={(e) => loadWorkBook(statusExports)}>\r\n            Export Data\r\n          </button>\r\n        )}\r\n        {statusExports[0] && (\r\n          <div className=\"table-wrapper\">\r\n            <table className=\"table table-striped table-responsive\">\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Member</th>\r\n                  <th>Project</th>\r\n                  <th>Task Summary</th>\r\n                  <th>Team </th>\r\n                  <th>Planned/UnPlanned</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {statusExports.map((status, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{status.Date}</td>\r\n                      <td>\r\n                        <input className=\"export-input\" value={status.Member} id={index} onChange={handleChange} name=\"Member\" />\r\n                      </td>\r\n                      <td>\r\n                        <input className=\"export-input\" value={status.Project} id={index} onChange={handleChange} name=\"Project\" />\r\n                      </td>\r\n                      <td>\r\n                        <textarea\r\n                          className=\"export-input-task\"\r\n                          value={status.TaskSummary}\r\n                          id={index}\r\n                          onChange={handleChange}\r\n                          name=\"TaskSummary\"\r\n                        ></textarea>\r\n                      </td>\r\n                      <td>\r\n                        <input className=\"export-input\" value={status.Team} id={index} onChange={handleChange} name=\"Team\" />\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          className=\"export-input\"\r\n                          value={status.PlannedorUnplanned}\r\n                          name=\"PlannedorUnplanned\"\r\n                          id={index}\r\n                          onChange={handleChange}\r\n                        >\r\n                          <option>UnPlanned</option>\r\n                          <option>Planned</option>\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <button className=\"del-row-but\" id={index} onClick={deleteRow}>\r\n                          X\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {statusExports[0] && (\r\n        <button className=\"create-button\" onClick={addRow}>\r\n          Add Row\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst StatusExportContainer = CRUDFunction(StatusExport, \"statusExport\", actionOptions, null, null, \"taskSession\");\r\nexport default StatusExportContainer;\r\n","D:\\Web Development\\PMS\\frontend\\src\\Pages\\Team\\Team.jsx",["857","858","859","860","861","862","863","864"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { actionOptions } from \"../../reduxCURD/actionOptions\";\r\nimport { curdActions } from \"../../reduxCURD/actions\";\r\nimport { CRUDFunction } from \"../../reduxCURD/container\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport CreateTeam from \"./CreateTeam\";\r\nimport \"./TeamsComponent.css\"; // Import the CSS file\r\nimport TeamMemberSelector from \"./TeamMemberSelector\";\r\nimport EditTeam from \"./EditTeam\";\r\nconst Team = (props) => {\r\n  const currentUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n  const prevActionType = props.actionType;\r\n  const prevActionTypeRef = useRef(prevActionType);\r\n\r\n  const [teams, setTeams] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const [newTeamFormOpen, setNewTeamFormOpen] = useState(false);\r\n  const [editTeamFormOpen, setEditTeamFormOpen] = useState(false);\r\n  const [newTeam, setNewTeam] = useState({\r\n    teamLead: \"\",\r\n    team: [],\r\n    teamName: \"\",\r\n    project: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getTeams();\r\n    props.getUsers();\r\n  }, []);\r\n  useEffect(() => {\r\n    setUsers(props.users);\r\n  }, [props.users]);\r\n\r\n  useEffect(() => {\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"TEAMS_READ_SUCCESS\") {\r\n      setTeams(props.teams);\r\n    }\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"TEAM_CREATE_SUCCESS\") {\r\n      setTeams([...teams, props.team]);\r\n    }\r\n\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"TEAM_UPDATE_SUCCESS\") {\r\n      confirmEditTeam(props.team);\r\n    }\r\n    if (prevActionTypeRef.current !== props.actionType && props.actionType === \"TEAM_DELETE_SUCCESS\") {\r\n      handleDeleteTeam(props.team._id);\r\n    }\r\n    if (prevActionTypeRef.current !== props.actionType) {\r\n      prevActionTypeRef.current = props.actionType;\r\n    }\r\n  }, [props.actionType]);\r\n\r\n  const handleTeamLeadChange = (event) => {\r\n    if (!props.users) return;\r\n    let usersToSave = props.users.filter((u) => u.email !== event.target.value);\r\n    let selectedTeam = newTeam.team.filter((tu) => tu.email !== event.target.value);\r\n    let teamLead = props.users.find((u) => u.email === event.target.value);\r\n    setUsers(usersToSave);\r\n    setNewTeam({ ...newTeam, teamLead: { name: teamLead.name, id: teamLead._id, email: teamLead.email }, team: selectedTeam });\r\n  };\r\n\r\n  const handleUsersChange = (selectedUsers) => {\r\n    let usersToSave = props.users\r\n      .filter((u) => selectedUsers.find((su) => su === u.email))\r\n      .map((u) => ({ name: u.name, id: u._id, email: u.email }));\r\n    setNewTeam({ ...newTeam, team: usersToSave });\r\n  };\r\n\r\n  const handleTeamNameChange = (event) => {\r\n    setNewTeam({ ...newTeam, teamName: event.target.value });\r\n  };\r\n\r\n  const handleProjectChange = (event) => {\r\n    setNewTeam({ ...newTeam, project: event.target.value });\r\n  };\r\n\r\n  const handleCreateClick = () => {\r\n    setNewTeam({\r\n      teamLead: \"\",\r\n      team: [],\r\n      teamName: \"\",\r\n      project: \"\",\r\n    });\r\n    setEditTeamFormOpen(false);\r\n    setNewTeamFormOpen(true);\r\n  };\r\n  const handleCreateTeam = () => {\r\n    props.createTeam(newTeam);\r\n    // Add new team to the teams list\r\n    // setTeams([...teams, newTeam]);\r\n    // Clear the new team form\r\n    setNewTeam({\r\n      teamLead: \"\",\r\n      team: [],\r\n      teamName: \"\",\r\n      project: \"\",\r\n    });\r\n    // Close the new team form\r\n    setNewTeamFormOpen(false);\r\n  };\r\n\r\n  const confirmEditTeam = (updatedTeam) => {\r\n    const oldTeams = [...teams];\r\n\r\n    const updatedTeams = oldTeams.map((team) => (team._id === updatedTeam._id ? updatedTeam : team));\r\n\r\n    setTeams([...updatedTeams]);\r\n  };\r\n\r\n  const handleEditTeam = (team) => {\r\n    setEditTeamFormOpen(false);\r\n    setNewTeam((prevNewTeam) => ({\r\n      ...prevNewTeam,\r\n      _id: team._id,\r\n      teamLead: team.teamLead,\r\n      team: team.team,\r\n      teamName: team.teamName,\r\n      project: team.project,\r\n    }));\r\n\r\n    setNewTeamFormOpen(false);\r\n    setEditTeamFormOpen(true);\r\n  };\r\n\r\n  const handleConfirmEdit = () => {\r\n    props.updateTeam(newTeam, newTeam._id);\r\n\r\n    setNewTeam({\r\n      teamLead: \"\",\r\n      team: [],\r\n      teamName: \"\",\r\n      project: \"\",\r\n    });\r\n\r\n    setEditTeamFormOpen(false);\r\n  };\r\n\r\n  const handleDeleteTeam = (teamId) => {\r\n    // Remove the team at the specified index from the teams list\r\n    const cpyTeams = [...teams];\r\n    let updatedTeams = cpyTeams.filter((t) => t._id !== teamId);\r\n    setTeams(updatedTeams);\r\n  };\r\n\r\n  const deleteTeam = (teamId) => {\r\n    if (window.confirm(\"Are You Sure\")) {\r\n      props.deleteTeam(teamId);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <h2>Teams</h2>\r\n      {teams.length !== 0 && (\r\n        <div className=\"table-wrapper\">\r\n          <table className=\"table table-striped table-responsive\">\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                  Team Name\r\n                </th>\r\n                <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                  Team Lead\r\n                </th>\r\n\r\n                <th scope=\"col\" style={{ width: \"15%\" }}>\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {teams.map((team, index) => (\r\n                <tr style={{ height: \"40px\" }}>\r\n                  <td>{team.teamName} </td>\r\n                  <td>{team.teamLead && team.teamLead.name}</td>\r\n                  <td>\r\n                    {\r\n                      <div className=\"action-class\">\r\n                        <span\r\n                          className=\"action-item\"\r\n                          onClick={(e) => {\r\n                            console.log(\"Delete\");\r\n                            deleteTeam({ _id: team._id });\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </span>\r\n\r\n                        <span\r\n                          className=\"action-item\"\r\n                          onClick={(e) => {\r\n                            handleEditTeam(team);\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </span>\r\n                      </div>\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      <div className=\"teams-container\">\r\n        {/* Create new team form */}\r\n        {newTeamFormOpen ? (\r\n          <CreateTeam\r\n            newTeam={newTeam}\r\n            handleTeamLeadChange={handleTeamLeadChange}\r\n            users={props.users}\r\n            handleUsersChange={handleUsersChange}\r\n            handleCreateTeam={handleCreateTeam}\r\n            handleProjectChange={handleProjectChange}\r\n            handleTeamNameChange={handleTeamNameChange}\r\n            projects={projects}\r\n            setNewTeamFormOpen={setNewTeamFormOpen}\r\n          />\r\n        ) : (\r\n          <button className=\"create-button\" onClick={handleCreateClick}>\r\n            Create New Team\r\n          </button>\r\n        )}\r\n\r\n        {editTeamFormOpen && (\r\n          <EditTeam\r\n            newTeam={newTeam}\r\n            handleTeamLeadChange={handleTeamLeadChange}\r\n            users={props.users}\r\n            handleUsersChange={handleUsersChange}\r\n            handleConfirmEdit={handleConfirmEdit}\r\n            handleProjectChange={handleProjectChange}\r\n            handleTeamNameChange={handleTeamNameChange}\r\n            projects={projects}\r\n            setEditTeamFormOpen={setEditTeamFormOpen}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nlet variableList = {\r\n  userReducer: {\r\n    users: [],\r\n  },\r\n};\r\nactionOptions.others.getUsers = curdActions.getUsers;\r\nconst TeamContainer = CRUDFunction(Team, \"team\", actionOptions, variableList, [\"userReducer\"]);\r\nexport default TeamContainer;\r\n","D:\\Web Development\\PMS\\frontend\\src\\components\\Login\\LoginPage.js",["865","866","867","868","869","870"],"D:\\Web Development\\PMS\\frontend\\src\\Language\\DynamicLanguage.js",[],"D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\container.js",[],"D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\actions\\diagnosticsActions.js",["871"],"D:\\Web Development\\PMS\\frontend\\src\\components\\Login\\Logout.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\Language\\Dictionery.js",["872"],"D:\\Web Development\\PMS\\frontend\\src\\components\\Login\\LoginView.js",["873","874","875"],"import React from \"react\";\r\nimport { languageService } from \"../../Language/language.service\";\r\nimport { Container, Col, Label, Button, FormGroup } from \"reactstrap\";\r\nimport { AvForm, AvInput, AvFeedback, AvGroup } from \"availity-reactstrap-validation\";\r\n//import {LoadingOverlay, Loader} from 'react-overlay-loader';\r\nimport \"react-overlay-loader/styles.css\";\r\nimport PropTypes from \"prop-types\";\r\n// import Recaptcha from \"react-recaptcha\";\r\nimport { ButtonStyle } from \"style/basic/commonControls\";\r\nimport { retroColors, pmsThemeColors } from \"style/basic/basicColors.js\";\r\nimport { themeService } from \"theme/service/activeTheme.service\";\r\n\r\n// const sitekey = \"6LegVGkUAAAAAJRHOVXe0JXbXNXO3OVLL46C3FgP\";\r\n\r\n// specifying your onload callback function\r\n// const callback = () => {\r\n//   //console.log('Done!!!!');\r\n// };\r\n\r\n// const verifyCallback = response => {\r\n//   //console.log(response);\r\n// };\r\n\r\n// const expiredCallback = () => {\r\n//   //console.log(`Recaptcha expired`);\r\n// };\r\n\r\n// // define a variable to store the recaptcha instance\r\n// let recaptchaInstance;\r\n\r\nclass LoginView extends React.Component {\r\n  render() {\r\n    const props = this.props;\r\n    return (\r\n      <Container style={props.formContainerStyle}>\r\n        <div className=\"app-logo\">\r\n          <h3>{languageService(\"Login\")}</h3>\r\n        </div>\r\n        <AvForm model={props.defaultValues} onValidSubmit={props.submitHandle}>\r\n          <Col>\r\n            <AvGroup className=\"form-field\">\r\n              <Label className=\"app-lbl\">{languageService(\"Email\")}</Label>\r\n              <AvInput\r\n                required\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"txtEmail\"\r\n                placeholder=\"myemail@email.com\"\r\n                value={props.inputValue.email}\r\n                onChange={props.onInputChange}\r\n              />\r\n              {/* <AvFeedback style={{ color: retroColors.second }} tooltip>\r\n                {languageService(\"Please enter valid email address\")}\r\n              </AvFeedback> */}\r\n            </AvGroup>\r\n          </Col>\r\n          <Col>\r\n            <AvGroup className=\"form-field\">\r\n              <Label className=\"app-lbl\" for=\"examplePassword\">\r\n                {languageService(\"Password\")}\r\n              </Label>\r\n              <AvInput\r\n                required\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"txtPassword\"\r\n                placeholder=\"********\"\r\n                value={props.inputValue.password}\r\n                onChange={props.onInputChange}\r\n              />\r\n              {/* <AvFeedback style={{ color: retroColors.second }} tooltip>\r\n                {languageService(\"Password Required\")}\r\n              </AvFeedback> */}\r\n            </AvGroup>\r\n          </Col>\r\n          <Col>\r\n            {/* <AvGroup>\r\n              <Label style={props.formLabelStyle} check for=\"chkRemember\">\r\n              <AvInput\r\n                type=\"checkbox\"\r\n                name=\"chkRemember\"\r\n                id=\"chkRemember\"\r\n                style={props.checkBoxStyle}\r\n\r\n              />&nbsp;&nbsp;\r\n              Remember me</Label>\r\n\r\n            </AvGroup> */}\r\n          </Col>\r\n\r\n          <Col>\r\n            <FormGroup>\r\n              <div>\r\n                <Button className=\"common-button\">{languageService(\"Login\")}</Button>\r\n              </div>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col>\r\n            <AvGroup>\r\n              <Label\r\n                style={themeService({ default: { ...props.forgotPassStyle }, tenant: { cursor: \"pointer\" } })}\r\n                onClick={props.clickForgotPasswordHandle}\r\n              >\r\n                <div>{languageService(\"Forgot Password\")}?</div>\r\n              </Label>\r\n            </AvGroup>\r\n          </Col>\r\n\r\n          <Col>\r\n            {/* <div class=\"g-recaptcha\" data-sitekey=\"6LegVGkUAAAAAJRHOVXe0JXbXNXO3OVLL46C3FgP\"></div> */}\r\n            {/* <Recaptcha\r\n            ref={e => recaptchaInstance = e}\r\n            sitekey={sitekey}\r\n            size=\"normal\"\r\n            render=\"explicit\"\r\n            verifyCallback={props.recaptchaCallbacks.verifyCallback}\r\n            onloadCallback={props.recaptchaCallbacks.onloadCallback}\r\n            expiredCallback={props.recaptchaCallbacks.expiredCallback}\r\n          /> */}\r\n          </Col>\r\n        </AvForm>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nLoginView.propTypes = {\r\n  defaultValues: PropTypes.object,\r\n  formStyle: PropTypes.object,\r\n  baseStyle: PropTypes.object,\r\n  formLabelStyle: PropTypes.object,\r\n  checkBoxStyle: PropTypes.object,\r\n  loginTitleBar: PropTypes.object,\r\n  buttonsContainer: PropTypes.object,\r\n  submitButtonStyle: PropTypes.object,\r\n  inputValue: PropTypes.object,\r\n  submitHandle: PropTypes.func,\r\n  onInputChange: PropTypes.func,\r\n  recaptchaCallbacks: PropTypes.object,\r\n};\r\n\r\nLoginView.defaultProps = {\r\n  defaultValues: {\r\n    chkRemember: true,\r\n  },\r\n  inputValue: { email: \"\" },\r\n  loginTitleBar: {\r\n    fontfamily: \"Arial\",\r\n    fontSize: \"23px\",\r\n\r\n    margin: \"0\",\r\n    textAlign: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  formStyle: {\r\n    width: \"280px\",\r\n    height: \"40px\",\r\n  },\r\n  formContainer: {\r\n    textAlign: \"left\",\r\n    padding: \"0em\",\r\n    margin: \"1em\",\r\n    border: \"0px solid #d3d3d3\",\r\n    borderRadius: \".5em\",\r\n    verticalAlign: \"middle\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"100%\",\r\n    marginTop: \"10px\",\r\n  },\r\n  baseStyle: {\r\n    textAlign: \"left\",\r\n    padding: \"0em\",\r\n    margin: \"auto\",\r\n    border: \"0px solid #d3d3d3\",\r\n    borderRadius: \".5em\",\r\n    verticalAlign: \"middle\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"100%\",\r\n    marginTop: \"10px\",\r\n\r\n    /*         width: \"340px\",\r\n        height: \"470px\",\r\n        backgroundColor: \"#fff\",\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        margin: \"auto\",\r\n        borderRadius: \"5px\",\r\n        boxShadow: \"0px 20px 30px -5px rgba(0, 0, 0, 0.4)\"\r\n */\r\n  },\r\n  buttonsContainer: {\r\n    marginTop: \"10px\",\r\n  },\r\n  formLabelStyle: {\r\n    fontFamily: \"Arial\",\r\n    fontSize: \"14px\",\r\n\r\n    letterSpacing: \"0.35px\",\r\n  },\r\n  checkBoxStyle: {\r\n    position: \"relative\",\r\n    margin: \"0\",\r\n    borderStyle: \"Solid\",\r\n    borderColor: \"#465261\",\r\n    borderWidth: \"0px\",\r\n    width: \"16px\",\r\n    height: \"16px\",\r\n    borderRadius: \"3px\",\r\n  },\r\n  loginButtonStyle: {\r\n    width: \"100%\",\r\n    height: \"40px\",\r\n    backgroundColor: pmsThemeColors.first,\r\n    border: \"none\",\r\n    borderRadius: \"2px\",\r\n    cursor: \"pointer\",\r\n    fontFamily: \"Arial\",\r\n    fontSize: \"14px\",\r\n    letterSpacing: \"0.35px\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  forgotPassStyle: {\r\n    marginTop: \"5px\",\r\n    textDecoration: \"none\",\r\n    fontFamily: \"Arial\",\r\n    fontSize: \"14px\",\r\n    letterSpacing: \"0.35px\",\r\n\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  formContainerStyle: {},\r\n  //forgotPassButtonStyle: ForgotPasswordButton\r\n};\r\n\r\nexport default LoginView;\r\n","D:\\Web Development\\PMS\\frontend\\src\\utils\\isJson.js",[],"D:\\Web Development\\PMS\\frontend\\src\\utils\\util.js",[],"D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\actions.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\UserModule\\UpdatePassword.js",[],"D:\\Web Development\\PMS\\frontend\\src\\utils\\permissionCheck.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\TopBar\\navBarItems.js",[],"D:\\Web Development\\PMS\\frontend\\src\\style\\basic\\basicColors.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\DailyLoggingVars.js",["876","877","878"],"D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\Times.js",["879"],"D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\DailyLoggingMethods.js",["880","881","882"],"import { defaultFormVal } from \"./DailyLoggingVars\";\r\nimport { isJSON } from \"../../utils/isJson\";\r\n//import { zonedTimeToUtc, utcToZonedTime, format } from 'date-fns-tz';\r\nimport moment from \"moment\";\r\nimport 'moment-timezone';\r\nimport { utcToZonedTime } from \"date-fns-tz\";\r\n\r\nexport function handleAddSessionState() {\r\n  return { form: { ...defaultFormVal }, addMode: true, editMode: false, changeInForm: false };\r\n}\r\n\r\nexport function loadFormRelatedState(state) {\r\n  console.log(\"From loading\", state.form)\r\n  return { form: state.form, addMode: state.addMode, editMode: state.editMode, changeInForm: state.changeInForm };\r\n}\r\n\r\nexport function saveSession(currState, user, createMethod, updateMethod) {\r\n  // save\r\n  let taskSession = { ...currState.form };\r\n  if (taskSession._id) {\r\n    updateMethod(taskSession);\r\n  } else if (user) {\r\n    taskSession.user = { id: user._id, email: user.email, name: user.name };\r\n    createMethod(taskSession);\r\n  } else {\r\n    // show error handler message (\"current logged in user is not found, please logout and login again\")\r\n    console.log(\"User is not logged in properly , please logout and login again\");\r\n  }\r\n}\r\n\r\n// export function saveSession(currState, user, createMethod, updateMethod) {\r\n//   return new Promise((resolve, reject) => {\r\n//     let taskSession = { ...currState.form };\r\n\r\n//     if (taskSession._id) {\r\n//       updateMethod(taskSession)\r\n//         .then(() => resolve())\r\n//         .catch(error => reject(error));\r\n//     } else if (user) {\r\n//       taskSession.user = { id: user._id, email: user.email, name: user.name };\r\n//       createMethod(taskSession)\r\n//         .then(() => resolve())\r\n//         .catch(error => reject(error));\r\n//     } else {\r\n//       // Handle the case where user is not logged in\r\n//       const error = new Error(\"User is not logged in properly\");\r\n//       reject(error);\r\n//     }\r\n//   });\r\n// }\r\n\r\n\r\nexport function getActiveSession(userId, range, method) {\r\n  return new Promise((resolve, reject) => {\r\n    let query = \"\";\r\n    if (userId) query = query + \"?userId=\" + userId;\r\n  \r\n\r\n    method(`/activeSession/${query}`)\r\n      .then(response => {\r\n        \r\n        resolve(response); \r\n      })\r\n      .catch(error => {\r\n        \r\n        reject(error); \r\n      });\r\n  });\r\n}\r\n\r\n// export function getActiveSession(userId, range, method) {\r\n//   let query = \"\";\r\n//   if (userId) query = query + \"?userId=\" + userId;\r\n//   if (range) {\r\n//     var jsonArray = encodeURIComponent(JSON.stringify(range));\r\n//     query = query + (userId ? \"&range=\" : \"?range=\") + jsonArray;\r\n//   }\r\n//   method(`/activeSession?${query}=true`);\r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n\r\nexport function getSessions(userId, range, method) {\r\n  let query = \"\";\r\n  if (userId) query = query + \"?userId=\" + userId;\r\n  if (range) {\r\n    var jsonArray = encodeURIComponent(JSON.stringify(range));\r\n    query = query + (userId ? \"&range=\" : \"?range=\") + jsonArray;\r\n  }\r\n  method(query);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function resetOrEditMethod(currState, selectedSession) {\r\n  // reset\r\n\r\n  let formToPut = { ...defaultFormVal };\r\n\r\n  if (selectedSession && currState.editMode) {\r\n    formToPut = selectedSession;\r\n  }\r\n  currState.form = formToPut;\r\n  currState.changeInForm = false;\r\n}\r\n\r\nexport function cancelMethod() {\r\n  // cancel\r\n  return { form: { ...defaultFormVal }, addMode: false, editMode: false, changeInForm: false };\r\n}\r\nexport function editMode(currState, session) {\r\n  currState.form = session;\r\n  currState.form.checkin = setStringToDate(currState.form.checkin);\r\n  currState.form.checkout = setStringToDate(currState.form.checkout);\r\n  currState.addMode = false;\r\n  currState.editMode = true;\r\n  currState.changeInForm = false;\r\n  currState.selectedSession = session;\r\n}\r\n\r\nfunction setStringToDate(date) {\r\n  if (date) {\r\n    let dateObj = new Date(date);\r\n    if (isValidDate(dateObj)) return dateObj;\r\n  }\r\n}\r\n\r\nfunction isValidDate(d) {\r\n  return d instanceof Date && !isNaN(d);\r\n}\r\n\r\n\r\n\r\nexport function convertTimezone(stateToSet, timezone) {\r\n  let date1 = ''\r\n\r\n\r\n  if (stateToSet.form.checkin) {\r\n    date1 = stateToSet.form.checkin\r\n  }\r\n\r\n  else if (stateToSet.form.checkout) {\r\n    date1 = stateToSet.form.checkout\r\n  }\r\n\r\n  if (date1) {\r\n\r\n    const date2 = utcToZonedTime(date1, timezone);\r\n\r\n    const timeDifferenceMs = date1 - date2;\r\n\r\n\r\n\r\n    if (stateToSet.form.checkin) {\r\n\r\n      stateToSet.form.checkin = new Date(stateToSet.form.checkin.getTime() + timeDifferenceMs);\r\n\r\n    }\r\n\r\n    if (stateToSet.form.checkout) {\r\n\r\n      stateToSet.form.checkout = new Date(stateToSet.form.checkout.getTime() + timeDifferenceMs);\r\n    }\r\n\r\n  }\r\n\r\n  const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n  //console.log(\"User Timezone: \", userTimezone, \"Convert to: \", timezone, \"Offset: \", diff)\r\n\r\n}\r\n","D:\\Web Development\\PMS\\frontend\\src\\reduxRelated\\actions\\storeActions.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\FilterMethods\\filterMethods.js",["883","884","885"],"D:\\Web Development\\PMS\\frontend\\src\\utils\\downloadCsv.js",[],"D:\\Web Development\\PMS\\frontend\\src\\utils\\dateFormatters.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\User\\UserList\\UserList.jsx",["886"],"D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\actionOptions.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\Forms\\formsMiscItems.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\FilterMethods\\FilterArea.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\FilterMethods\\UserSelectArea.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\reduxCURD\\settings.js",[],"D:\\Web Development\\PMS\\frontend\\src\\Pages\\SessionExport\\SessionSummary.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\FormInputs\\InputFields.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\DailyLogging\\SessionsList\\SessionsList.jsx",["887","888"],"D:\\Web Development\\PMS\\frontend\\src\\Pages\\Team\\EditTeam.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\Pages\\Team\\CreateTeam.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\Pages\\Team\\TeamMemberSelector.jsx",[],"D:\\Web Development\\PMS\\frontend\\src\\style\\basic\\commonControls.js",["889"],"import { basicColors, retroColors, pmsThemeColors } from \"style/basic/basicColors\";\r\n\r\nexport const ButtonStyle = {\r\n  commonButton: {\r\n    default: {\r\n      height: \"30px\",\r\n      minWidth: \"8vw\",\r\n      marginBottom: \"20px\",\r\n      backgroundColor: pmsThemeColors.first,\r\n      border: \"1px solid #e3e9ef\",\r\n      color: \"#fff\",\r\n      fontSize: \"12px\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      WebkitTransitionDuration: \"0.4s\",\r\n      OTransitionDuration: \"0.4s\",\r\n      transitionDuration: \"0.4s\",\r\n    },\r\n    retro: {\r\n      height: \"30px\",\r\n      minWidth: \"8vw\",\r\n      marginBottom: \"20px\",\r\n      backgroundColor: retroColors.fifth,\r\n      border: \"1px solid\" + retroColors.ten,\r\n      color: retroColors.second,\r\n      fontSize: \"12px\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"0px\",\r\n      WebkitTransitionDuration: \"0.4s\",\r\n      OTransitionDuration: \"0.4s\",\r\n      transitionDuration: \"0.4s\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n};\r\nexport const CommonModalStyle = {\r\n  header: {\r\n    default: {\r\n      display: \"flex\",\r\n      MsFlexAlign: \"start\",\r\n      alignItems: \"flex-start\",\r\n      MsFlexPack: \"justify\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"1rem\",\r\n      borderBottom: \"1px solid #e9ecef\",\r\n      borderTopLeftRadius: \".3rem\",\r\n      borderTopRightRadius: \".3rem\",\r\n    },\r\n    retro: {\r\n      display: \"flex\",\r\n      MsFlexAlign: \"start\",\r\n      alignItems: \"flex-start\",\r\n      MsFlexPack: \"justify\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"1rem\",\r\n      borderBottom: \"0px solid #e9ecef\",\r\n      borderTopLeftRadius: \"0rem\",\r\n      borderTopRightRadius: \"0rem\",\r\n      backgroundColor: retroColors.fourth,\r\n    },\r\n  },\r\n  body: {\r\n    default: {\r\n      position: \"relative\",\r\n      MsFlex: \"1 1 auto\",\r\n      flex: \"1 1 auto\",\r\n      padding: \"1rem\",\r\n    },\r\n    retro: {\r\n      position: \"relative\",\r\n      MsFlex: \"1 1 auto\",\r\n      flex: \"1 1 auto\",\r\n      padding: \"1rem\",\r\n      backgroundColor: retroColors.nine,\r\n    },\r\n  },\r\n  footer: {\r\n    default: {\r\n      display: \"flex\",\r\n      MsFlexAlign: \"center\",\r\n      alignItems: \"center\",\r\n      MsFlexPack: \"end\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"1rem\",\r\n      borderTop: \"1px solid #e9ecef\",\r\n    },\r\n    retro: {\r\n      display: \"flex\",\r\n      MsFlexAlign: \"center\",\r\n      alignItems: \"center\",\r\n      MsFlexPack: \"end\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"1rem\",\r\n      borderTop: \"0px solid #e9ecef\",\r\n      backgroundColor: retroColors.nine,\r\n    },\r\n  },\r\n};\r\n","D:\\Web Development\\PMS\\frontend\\src\\utils\\arrayToCsv.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\ThisTable\\index.jsx",["890","891","892","893","894","895","896","897","898","899"],"D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\Forms\\style\\formsMiscItems.js",["900","901"],"D:\\Web Development\\PMS\\frontend\\src\\wigets\\forms\\style\\formFields.js",["902","903"],"D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\ThisTable\\style\\index.js",[],"D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\ThisTable\\PaginationComponent.jsx",["904","905","906","907","908","909","910","911","912","913","914","915"],"D:\\Web Development\\PMS\\frontend\\src\\components\\Common\\ThisTable\\style\\PaginationComponent.js",[],{"ruleId":"916","replacedBy":"917"},{"ruleId":"918","replacedBy":"919"},{"ruleId":"920","severity":1,"message":"921","line":1,"column":8,"nodeType":"922","messageId":"923","endLine":1,"endColumn":12},{"ruleId":"920","severity":1,"message":"924","line":16,"column":8,"nodeType":"922","messageId":"923","endLine":16,"endColumn":14},{"ruleId":"920","severity":1,"message":"925","line":6,"column":7,"nodeType":"922","messageId":"923","endLine":6,"endColumn":13},{"ruleId":"926","severity":1,"message":"927","line":33,"column":1,"nodeType":"928","endLine":68,"endColumn":3},{"ruleId":"929","severity":1,"message":"930","line":74,"column":25,"nodeType":"931","messageId":"932","endLine":74,"endColumn":27},{"ruleId":"926","severity":1,"message":"933","line":3,"column":1,"nodeType":"928","endLine":17,"endColumn":2},{"ruleId":"926","severity":1,"message":"933","line":3,"column":1,"nodeType":"928","endLine":85,"endColumn":2},{"ruleId":"920","severity":1,"message":"934","line":2,"column":25,"nodeType":"922","messageId":"923","endLine":2,"endColumn":29},{"ruleId":"920","severity":1,"message":"935","line":3,"column":8,"nodeType":"922","messageId":"923","endLine":3,"endColumn":9},{"ruleId":"920","severity":1,"message":"936","line":13,"column":10,"nodeType":"922","messageId":"923","endLine":13,"endColumn":27},{"ruleId":"926","severity":1,"message":"933","line":3,"column":1,"nodeType":"928","endLine":20,"endColumn":2},{"ruleId":"926","severity":1,"message":"933","line":3,"column":1,"nodeType":"928","endLine":67,"endColumn":2},{"ruleId":"920","severity":1,"message":"937","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":19},{"ruleId":"920","severity":1,"message":"938","line":2,"column":21,"nodeType":"922","messageId":"923","endLine":2,"endColumn":24},{"ruleId":"920","severity":1,"message":"939","line":2,"column":26,"nodeType":"922","messageId":"923","endLine":2,"endColumn":31},{"ruleId":"920","severity":1,"message":"940","line":2,"column":33,"nodeType":"922","messageId":"923","endLine":2,"endColumn":39},{"ruleId":"920","severity":1,"message":"941","line":2,"column":41,"nodeType":"922","messageId":"923","endLine":2,"endColumn":50},{"ruleId":"920","severity":1,"message":"942","line":12,"column":10,"nodeType":"922","messageId":"923","endLine":12,"endColumn":25},{"ruleId":"920","severity":1,"message":"943","line":15,"column":10,"nodeType":"922","messageId":"923","endLine":15,"endColumn":22},{"ruleId":"920","severity":1,"message":"944","line":233,"column":9,"nodeType":"922","messageId":"923","endLine":233,"endColumn":21},{"ruleId":"920","severity":1,"message":"945","line":1,"column":8,"nodeType":"922","messageId":"923","endLine":1,"endColumn":12},{"ruleId":"920","severity":1,"message":"946","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":17},{"ruleId":"920","severity":1,"message":"947","line":7,"column":10,"nodeType":"922","messageId":"923","endLine":7,"endColumn":16},{"ruleId":"920","severity":1,"message":"948","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":16},{"ruleId":"949","severity":1,"message":"950","line":19,"column":6,"nodeType":"951","endLine":19,"endColumn":8,"suggestions":"952"},{"ruleId":"929","severity":1,"message":"930","line":42,"column":24,"nodeType":"931","messageId":"932","endLine":42,"endColumn":26},{"ruleId":"929","severity":1,"message":"930","line":59,"column":24,"nodeType":"931","messageId":"932","endLine":59,"endColumn":26},{"ruleId":"920","severity":1,"message":"946","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":17},{"ruleId":"920","severity":1,"message":"948","line":11,"column":10,"nodeType":"922","messageId":"923","endLine":11,"endColumn":16},{"ruleId":"920","severity":1,"message":"953","line":12,"column":8,"nodeType":"922","messageId":"923","endLine":12,"endColumn":22},{"ruleId":"920","severity":1,"message":"954","line":28,"column":10,"nodeType":"922","messageId":"923","endLine":28,"endColumn":18},{"ruleId":"920","severity":1,"message":"955","line":30,"column":20,"nodeType":"922","messageId":"923","endLine":30,"endColumn":31},{"ruleId":"920","severity":1,"message":"956","line":32,"column":23,"nodeType":"922","messageId":"923","endLine":32,"endColumn":37},{"ruleId":"920","severity":1,"message":"957","line":36,"column":9,"nodeType":"922","messageId":"923","endLine":36,"endColumn":22},{"ruleId":"949","severity":1,"message":"958","line":49,"column":6,"nodeType":"951","endLine":49,"endColumn":8,"suggestions":"959"},{"ruleId":"949","severity":1,"message":"960","line":53,"column":6,"nodeType":"951","endLine":53,"endColumn":8,"suggestions":"961"},{"ruleId":"962","severity":1,"message":"963","line":57,"column":7,"nodeType":"964","messageId":"965","endLine":59,"endColumn":8},{"ruleId":"929","severity":1,"message":"930","line":62,"column":28,"nodeType":"931","messageId":"932","endLine":62,"endColumn":30},{"ruleId":"949","severity":1,"message":"966","line":75,"column":6,"nodeType":"951","endLine":75,"endColumn":12,"suggestions":"967"},{"ruleId":"929","severity":1,"message":"930","line":87,"column":24,"nodeType":"931","messageId":"932","endLine":87,"endColumn":26},{"ruleId":"920","severity":1,"message":"946","line":4,"column":10,"nodeType":"922","messageId":"923","endLine":4,"endColumn":17},{"ruleId":"920","severity":1,"message":"968","line":8,"column":17,"nodeType":"922","messageId":"923","endLine":8,"endColumn":26},{"ruleId":"920","severity":1,"message":"969","line":9,"column":8,"nodeType":"922","messageId":"923","endLine":9,"endColumn":23},{"ruleId":"920","severity":1,"message":"970","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":16},{"ruleId":"920","severity":1,"message":"971","line":11,"column":10,"nodeType":"922","messageId":"923","endLine":11,"endColumn":22},{"ruleId":"920","severity":1,"message":"972","line":13,"column":10,"nodeType":"922","messageId":"923","endLine":13,"endColumn":21},{"ruleId":"920","severity":1,"message":"973","line":15,"column":8,"nodeType":"922","messageId":"923","endLine":15,"endColumn":16},{"ruleId":"920","severity":1,"message":"974","line":16,"column":10,"nodeType":"922","messageId":"923","endLine":16,"endColumn":13},{"ruleId":"920","severity":1,"message":"938","line":16,"column":15,"nodeType":"922","messageId":"923","endLine":16,"endColumn":18},{"ruleId":"920","severity":1,"message":"948","line":17,"column":10,"nodeType":"922","messageId":"923","endLine":17,"endColumn":16},{"ruleId":"949","severity":1,"message":"975","line":42,"column":6,"nodeType":"951","endLine":42,"endColumn":8,"suggestions":"976"},{"ruleId":"949","severity":1,"message":"977","line":66,"column":6,"nodeType":"951","endLine":66,"endColumn":24,"suggestions":"978"},{"ruleId":"929","severity":1,"message":"979","line":107,"column":40,"nodeType":"931","messageId":"932","endLine":107,"endColumn":42},{"ruleId":"920","severity":1,"message":"980","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":22},{"ruleId":"920","severity":1,"message":"945","line":9,"column":7,"nodeType":"922","messageId":"923","endLine":9,"endColumn":11},{"ruleId":"920","severity":1,"message":"939","line":3,"column":26,"nodeType":"922","messageId":"923","endLine":3,"endColumn":31},{"ruleId":"920","severity":1,"message":"981","line":3,"column":33,"nodeType":"922","messageId":"923","endLine":3,"endColumn":49},{"ruleId":"920","severity":1,"message":"982","line":15,"column":10,"nodeType":"922","messageId":"923","endLine":15,"endColumn":17},{"ruleId":"920","severity":1,"message":"983","line":16,"column":10,"nodeType":"922","messageId":"923","endLine":16,"endColumn":24},{"ruleId":"920","severity":1,"message":"984","line":16,"column":42,"nodeType":"922","messageId":"923","endLine":16,"endColumn":48},{"ruleId":"920","severity":1,"message":"985","line":20,"column":24,"nodeType":"922","messageId":"923","endLine":20,"endColumn":41},{"ruleId":"920","severity":1,"message":"986","line":38,"column":10,"nodeType":"922","messageId":"923","endLine":38,"endColumn":23},{"ruleId":"929","severity":1,"message":"930","line":86,"column":19,"nodeType":"931","messageId":"932","endLine":86,"endColumn":21},{"ruleId":"929","severity":1,"message":"979","line":200,"column":24,"nodeType":"931","messageId":"932","endLine":200,"endColumn":26},{"ruleId":"987","severity":1,"message":"988","line":355,"column":19,"nodeType":"989","messageId":"932","endLine":355,"endColumn":24},{"ruleId":"987","severity":1,"message":"988","line":375,"column":19,"nodeType":"989","messageId":"932","endLine":375,"endColumn":24},{"ruleId":"920","severity":1,"message":"990","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":18},{"ruleId":"920","severity":1,"message":"948","line":2,"column":20,"nodeType":"922","messageId":"923","endLine":2,"endColumn":26},{"ruleId":"920","severity":1,"message":"974","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":13},{"ruleId":"920","severity":1,"message":"938","line":3,"column":15,"nodeType":"922","messageId":"923","endLine":3,"endColumn":18},{"ruleId":"920","severity":1,"message":"991","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":21},{"ruleId":"920","severity":1,"message":"992","line":13,"column":9,"nodeType":"922","messageId":"923","endLine":13,"endColumn":15},{"ruleId":"949","severity":1,"message":"993","line":38,"column":6,"nodeType":"951","endLine":38,"endColumn":24,"suggestions":"994"},{"ruleId":"920","severity":1,"message":"995","line":89,"column":11,"nodeType":"922","messageId":"923","endLine":89,"endColumn":15},{"ruleId":"920","severity":1,"message":"996","line":89,"column":17,"nodeType":"922","messageId":"923","endLine":89,"endColumn":22},{"ruleId":"920","severity":1,"message":"974","line":5,"column":10,"nodeType":"922","messageId":"923","endLine":5,"endColumn":13},{"ruleId":"920","severity":1,"message":"938","line":5,"column":15,"nodeType":"922","messageId":"923","endLine":5,"endColumn":18},{"ruleId":"920","severity":1,"message":"997","line":8,"column":8,"nodeType":"922","messageId":"923","endLine":8,"endColumn":26},{"ruleId":"920","severity":1,"message":"998","line":12,"column":9,"nodeType":"922","messageId":"923","endLine":12,"endColumn":20},{"ruleId":"920","severity":1,"message":"999","line":17,"column":10,"nodeType":"922","messageId":"923","endLine":17,"endColumn":15},{"ruleId":"920","severity":1,"message":"1000","line":18,"column":20,"nodeType":"922","messageId":"923","endLine":18,"endColumn":31},{"ruleId":"949","severity":1,"message":"975","line":32,"column":6,"nodeType":"951","endLine":32,"endColumn":8,"suggestions":"1001"},{"ruleId":"949","severity":1,"message":"1002","line":54,"column":6,"nodeType":"951","endLine":54,"endColumn":24,"suggestions":"1003"},{"ruleId":"920","severity":1,"message":"990","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":18},{"ruleId":"920","severity":1,"message":"948","line":2,"column":20,"nodeType":"922","messageId":"923","endLine":2,"endColumn":26},{"ruleId":"920","severity":1,"message":"974","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":13},{"ruleId":"920","severity":1,"message":"938","line":3,"column":15,"nodeType":"922","messageId":"923","endLine":3,"endColumn":18},{"ruleId":"920","severity":1,"message":"991","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":21},{"ruleId":"920","severity":1,"message":"1004","line":13,"column":10,"nodeType":"922","messageId":"923","endLine":13,"endColumn":21},{"ruleId":"920","severity":1,"message":"1005","line":14,"column":10,"nodeType":"922","messageId":"923","endLine":14,"endColumn":20},{"ruleId":"949","severity":1,"message":"975","line":41,"column":6,"nodeType":"951","endLine":41,"endColumn":8,"suggestions":"1006"},{"ruleId":"949","severity":1,"message":"1007","line":59,"column":6,"nodeType":"951","endLine":59,"endColumn":24,"suggestions":"1008"},{"ruleId":"929","severity":1,"message":"930","line":92,"column":19,"nodeType":"931","messageId":"932","endLine":92,"endColumn":21},{"ruleId":"920","severity":1,"message":"1009","line":4,"column":10,"nodeType":"922","messageId":"923","endLine":4,"endColumn":24},{"ruleId":"920","severity":1,"message":"943","line":9,"column":10,"nodeType":"922","messageId":"923","endLine":9,"endColumn":22},{"ruleId":"920","severity":1,"message":"1010","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":26},{"ruleId":"920","severity":1,"message":"1011","line":10,"column":28,"nodeType":"922","messageId":"923","endLine":10,"endColumn":39},{"ruleId":"920","severity":1,"message":"1012","line":11,"column":10,"nodeType":"922","messageId":"923","endLine":11,"endColumn":21},{"ruleId":"920","severity":1,"message":"1013","line":12,"column":10,"nodeType":"922","messageId":"923","endLine":12,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1015","line":73,"column":5,"nodeType":"1016","messageId":"1017","endLine":75,"endColumn":13},{"ruleId":"920","severity":1,"message":"1018","line":1,"column":8,"nodeType":"922","messageId":"923","endLine":1,"endColumn":13},{"ruleId":"920","severity":1,"message":"983","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":24},{"ruleId":"920","severity":1,"message":"984","line":2,"column":42,"nodeType":"922","messageId":"923","endLine":2,"endColumn":48},{"ruleId":"920","severity":1,"message":"924","line":4,"column":8,"nodeType":"922","messageId":"923","endLine":4,"endColumn":14},{"ruleId":"920","severity":1,"message":"970","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":16},{"ruleId":"920","severity":1,"message":"924","line":4,"column":8,"nodeType":"922","messageId":"923","endLine":4,"endColumn":14},{"ruleId":"920","severity":1,"message":"1019","line":152,"column":9,"nodeType":"922","messageId":"923","endLine":152,"endColumn":21},{"ruleId":"920","severity":1,"message":"1020","line":7,"column":48,"nodeType":"922","messageId":"923","endLine":7,"endColumn":52},{"ruleId":"920","severity":1,"message":"1021","line":12,"column":7,"nodeType":"922","messageId":"923","endLine":12,"endColumn":19},{"ruleId":"1022","severity":1,"message":"1023","line":12,"column":38,"nodeType":"1024","messageId":"1025","endLine":12,"endColumn":40},{"ruleId":"920","severity":1,"message":"1026","line":24,"column":10,"nodeType":"922","messageId":"923","endLine":24,"endColumn":21},{"ruleId":"920","severity":1,"message":"1027","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":20},{"ruleId":"920","severity":1,"message":"984","line":4,"column":26,"nodeType":"922","messageId":"923","endLine":4,"endColumn":32},{"ruleId":"920","severity":1,"message":"1028","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":24},{"ruleId":"920","severity":1,"message":"1029","line":1,"column":10,"nodeType":"922","messageId":"923","endLine":1,"endColumn":21},{"ruleId":"920","severity":1,"message":"1029","line":1,"column":10,"nodeType":"922","messageId":"923","endLine":1,"endColumn":21},{"ruleId":"987","severity":1,"message":"1030","line":41,"column":7,"nodeType":"989","messageId":"932","endLine":41,"endColumn":20},{"ruleId":"920","severity":1,"message":"1031","line":4,"column":27,"nodeType":"922","messageId":"923","endLine":4,"endColumn":37},{"ruleId":"920","severity":1,"message":"1011","line":9,"column":10,"nodeType":"922","messageId":"923","endLine":9,"endColumn":21},{"ruleId":"920","severity":1,"message":"1012","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":21},{"ruleId":"1032","severity":1,"message":"1033","line":54,"column":23,"nodeType":"1034","messageId":"1035","endLine":56,"endColumn":13},{"ruleId":"987","severity":1,"message":"1036","line":114,"column":7,"nodeType":"989","messageId":"932","endLine":114,"endColumn":12},{"ruleId":"987","severity":1,"message":"1036","line":115,"column":7,"nodeType":"989","messageId":"932","endLine":115,"endColumn":12},{"ruleId":"920","severity":1,"message":"1037","line":2,"column":8,"nodeType":"922","messageId":"923","endLine":2,"endColumn":18},{"ruleId":"920","severity":1,"message":"934","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":14},{"ruleId":"920","severity":1,"message":"1038","line":6,"column":16,"nodeType":"922","messageId":"923","endLine":6,"endColumn":21},{"ruleId":"920","severity":1,"message":"1039","line":8,"column":8,"nodeType":"922","messageId":"923","endLine":8,"endColumn":17},{"ruleId":"920","severity":1,"message":"1012","line":12,"column":10,"nodeType":"922","messageId":"923","endLine":12,"endColumn":21},{"ruleId":"929","severity":1,"message":"930","line":77,"column":49,"nodeType":"931","messageId":"932","endLine":77,"endColumn":51},{"ruleId":"929","severity":1,"message":"930","line":122,"column":45,"nodeType":"931","messageId":"932","endLine":122,"endColumn":47},{"ruleId":"920","severity":1,"message":"1040","line":123,"column":17,"nodeType":"922","messageId":"923","endLine":123,"endColumn":25},{"ruleId":"929","severity":1,"message":"930","line":130,"column":37,"nodeType":"931","messageId":"932","endLine":130,"endColumn":39},{"ruleId":"1041","severity":1,"message":"1042","line":162,"column":11,"nodeType":"1043","messageId":"1044","endLine":162,"endColumn":51},{"ruleId":"920","severity":1,"message":"1037","line":2,"column":8,"nodeType":"922","messageId":"923","endLine":2,"endColumn":18},{"ruleId":"929","severity":1,"message":"930","line":102,"column":20,"nodeType":"931","messageId":"932","endLine":102,"endColumn":22},{"ruleId":"929","severity":1,"message":"930","line":108,"column":14,"nodeType":"931","messageId":"932","endLine":108,"endColumn":16},{"ruleId":"929","severity":1,"message":"930","line":110,"column":14,"nodeType":"931","messageId":"932","endLine":110,"endColumn":16},{"ruleId":"929","severity":1,"message":"930","line":137,"column":32,"nodeType":"931","messageId":"932","endLine":137,"endColumn":34},{"ruleId":"920","severity":1,"message":"1045","line":164,"column":7,"nodeType":"922","messageId":"923","endLine":164,"endColumn":12},{"ruleId":"920","severity":1,"message":"1046","line":167,"column":7,"nodeType":"922","messageId":"923","endLine":167,"endColumn":26},{"ruleId":"920","severity":1,"message":"1047","line":168,"column":7,"nodeType":"922","messageId":"923","endLine":168,"endColumn":22},{"ruleId":"920","severity":1,"message":"1048","line":169,"column":7,"nodeType":"922","messageId":"923","endLine":169,"endColumn":15},{"ruleId":"920","severity":1,"message":"1049","line":170,"column":7,"nodeType":"922","messageId":"923","endLine":170,"endColumn":19},{"ruleId":"920","severity":1,"message":"1050","line":173,"column":7,"nodeType":"922","messageId":"923","endLine":173,"endColumn":23},{"ruleId":"920","severity":1,"message":"1051","line":174,"column":7,"nodeType":"922","messageId":"923","endLine":174,"endColumn":16},{"ruleId":"920","severity":1,"message":"921","line":1,"column":8,"nodeType":"922","messageId":"923","endLine":1,"endColumn":12},{"ruleId":"920","severity":1,"message":"924","line":16,"column":8,"nodeType":"922","messageId":"923","endLine":16,"endColumn":14},{"ruleId":"920","severity":1,"message":"925","line":6,"column":7,"nodeType":"922","messageId":"923","endLine":6,"endColumn":13},{"ruleId":"926","severity":1,"message":"927","line":33,"column":1,"nodeType":"928","endLine":68,"endColumn":3},{"ruleId":"929","severity":1,"message":"930","line":74,"column":25,"nodeType":"931","messageId":"932","endLine":74,"endColumn":27},{"ruleId":"926","severity":1,"message":"933","line":3,"column":1,"nodeType":"928","endLine":17,"endColumn":2},{"ruleId":"926","severity":1,"message":"933","line":3,"column":1,"nodeType":"928","endLine":85,"endColumn":2},{"ruleId":"920","severity":1,"message":"934","line":2,"column":25,"nodeType":"922","messageId":"923","endLine":2,"endColumn":29},{"ruleId":"920","severity":1,"message":"935","line":3,"column":8,"nodeType":"922","messageId":"923","endLine":3,"endColumn":9},{"ruleId":"920","severity":1,"message":"936","line":13,"column":10,"nodeType":"922","messageId":"923","endLine":13,"endColumn":27},{"ruleId":"926","severity":1,"message":"933","line":3,"column":1,"nodeType":"928","endLine":20,"endColumn":2},{"ruleId":"926","severity":1,"message":"933","line":3,"column":1,"nodeType":"928","endLine":67,"endColumn":2},{"ruleId":"920","severity":1,"message":"937","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":19},{"ruleId":"920","severity":1,"message":"938","line":2,"column":21,"nodeType":"922","messageId":"923","endLine":2,"endColumn":24},{"ruleId":"920","severity":1,"message":"939","line":2,"column":26,"nodeType":"922","messageId":"923","endLine":2,"endColumn":31},{"ruleId":"920","severity":1,"message":"940","line":2,"column":33,"nodeType":"922","messageId":"923","endLine":2,"endColumn":39},{"ruleId":"920","severity":1,"message":"941","line":2,"column":41,"nodeType":"922","messageId":"923","endLine":2,"endColumn":50},{"ruleId":"920","severity":1,"message":"942","line":12,"column":10,"nodeType":"922","messageId":"923","endLine":12,"endColumn":25},{"ruleId":"920","severity":1,"message":"943","line":15,"column":10,"nodeType":"922","messageId":"923","endLine":15,"endColumn":22},{"ruleId":"920","severity":1,"message":"944","line":233,"column":9,"nodeType":"922","messageId":"923","endLine":233,"endColumn":21},{"ruleId":"920","severity":1,"message":"945","line":1,"column":8,"nodeType":"922","messageId":"923","endLine":1,"endColumn":12},{"ruleId":"920","severity":1,"message":"946","line":4,"column":10,"nodeType":"922","messageId":"923","endLine":4,"endColumn":17},{"ruleId":"920","severity":1,"message":"968","line":8,"column":17,"nodeType":"922","messageId":"923","endLine":8,"endColumn":26},{"ruleId":"920","severity":1,"message":"969","line":9,"column":8,"nodeType":"922","messageId":"923","endLine":9,"endColumn":23},{"ruleId":"920","severity":1,"message":"970","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":16},{"ruleId":"920","severity":1,"message":"971","line":11,"column":10,"nodeType":"922","messageId":"923","endLine":11,"endColumn":22},{"ruleId":"920","severity":1,"message":"972","line":13,"column":10,"nodeType":"922","messageId":"923","endLine":13,"endColumn":21},{"ruleId":"920","severity":1,"message":"973","line":15,"column":8,"nodeType":"922","messageId":"923","endLine":15,"endColumn":16},{"ruleId":"920","severity":1,"message":"974","line":16,"column":10,"nodeType":"922","messageId":"923","endLine":16,"endColumn":13},{"ruleId":"920","severity":1,"message":"938","line":16,"column":15,"nodeType":"922","messageId":"923","endLine":16,"endColumn":18},{"ruleId":"920","severity":1,"message":"948","line":17,"column":10,"nodeType":"922","messageId":"923","endLine":17,"endColumn":16},{"ruleId":"949","severity":1,"message":"975","line":42,"column":6,"nodeType":"951","endLine":42,"endColumn":8,"suggestions":"1052"},{"ruleId":"949","severity":1,"message":"977","line":66,"column":6,"nodeType":"951","endLine":66,"endColumn":24,"suggestions":"1053"},{"ruleId":"929","severity":1,"message":"979","line":69,"column":25,"nodeType":"931","messageId":"932","endLine":69,"endColumn":27},{"ruleId":"929","severity":1,"message":"979","line":110,"column":38,"nodeType":"931","messageId":"932","endLine":110,"endColumn":40},{"ruleId":"920","severity":1,"message":"946","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":17},{"ruleId":"920","severity":1,"message":"948","line":11,"column":10,"nodeType":"922","messageId":"923","endLine":11,"endColumn":16},{"ruleId":"920","severity":1,"message":"953","line":12,"column":8,"nodeType":"922","messageId":"923","endLine":12,"endColumn":22},{"ruleId":"920","severity":1,"message":"954","line":28,"column":10,"nodeType":"922","messageId":"923","endLine":28,"endColumn":18},{"ruleId":"920","severity":1,"message":"955","line":30,"column":20,"nodeType":"922","messageId":"923","endLine":30,"endColumn":31},{"ruleId":"920","severity":1,"message":"956","line":32,"column":23,"nodeType":"922","messageId":"923","endLine":32,"endColumn":37},{"ruleId":"920","severity":1,"message":"957","line":36,"column":9,"nodeType":"922","messageId":"923","endLine":36,"endColumn":22},{"ruleId":"949","severity":1,"message":"958","line":49,"column":6,"nodeType":"951","endLine":49,"endColumn":8,"suggestions":"1054"},{"ruleId":"949","severity":1,"message":"960","line":53,"column":6,"nodeType":"951","endLine":53,"endColumn":8,"suggestions":"1055"},{"ruleId":"962","severity":1,"message":"963","line":57,"column":7,"nodeType":"964","messageId":"965","endLine":59,"endColumn":8},{"ruleId":"929","severity":1,"message":"930","line":62,"column":28,"nodeType":"931","messageId":"932","endLine":62,"endColumn":30},{"ruleId":"949","severity":1,"message":"966","line":75,"column":6,"nodeType":"951","endLine":75,"endColumn":12,"suggestions":"1056"},{"ruleId":"929","severity":1,"message":"930","line":87,"column":24,"nodeType":"931","messageId":"932","endLine":87,"endColumn":26},{"ruleId":"920","severity":1,"message":"946","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":17},{"ruleId":"920","severity":1,"message":"947","line":7,"column":10,"nodeType":"922","messageId":"923","endLine":7,"endColumn":16},{"ruleId":"920","severity":1,"message":"948","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":16},{"ruleId":"949","severity":1,"message":"950","line":20,"column":6,"nodeType":"951","endLine":20,"endColumn":8,"suggestions":"1057"},{"ruleId":"929","severity":1,"message":"930","line":43,"column":24,"nodeType":"931","messageId":"932","endLine":43,"endColumn":26},{"ruleId":"929","severity":1,"message":"930","line":60,"column":24,"nodeType":"931","messageId":"932","endLine":60,"endColumn":26},{"ruleId":"920","severity":1,"message":"1058","line":143,"column":7,"nodeType":"922","messageId":"923","endLine":143,"endColumn":22},{"ruleId":"920","severity":1,"message":"1059","line":149,"column":7,"nodeType":"922","messageId":"923","endLine":149,"endColumn":25},{"ruleId":"920","severity":1,"message":"939","line":3,"column":26,"nodeType":"922","messageId":"923","endLine":3,"endColumn":31},{"ruleId":"920","severity":1,"message":"981","line":3,"column":33,"nodeType":"922","messageId":"923","endLine":3,"endColumn":49},{"ruleId":"920","severity":1,"message":"982","line":15,"column":10,"nodeType":"922","messageId":"923","endLine":15,"endColumn":17},{"ruleId":"920","severity":1,"message":"983","line":16,"column":10,"nodeType":"922","messageId":"923","endLine":16,"endColumn":24},{"ruleId":"920","severity":1,"message":"984","line":16,"column":42,"nodeType":"922","messageId":"923","endLine":16,"endColumn":48},{"ruleId":"920","severity":1,"message":"985","line":20,"column":24,"nodeType":"922","messageId":"923","endLine":20,"endColumn":41},{"ruleId":"920","severity":1,"message":"986","line":38,"column":10,"nodeType":"922","messageId":"923","endLine":38,"endColumn":23},{"ruleId":"929","severity":1,"message":"930","line":86,"column":19,"nodeType":"931","messageId":"932","endLine":86,"endColumn":21},{"ruleId":"929","severity":1,"message":"979","line":200,"column":24,"nodeType":"931","messageId":"932","endLine":200,"endColumn":26},{"ruleId":"987","severity":1,"message":"988","line":355,"column":19,"nodeType":"989","messageId":"932","endLine":355,"endColumn":24},{"ruleId":"987","severity":1,"message":"988","line":375,"column":19,"nodeType":"989","messageId":"932","endLine":375,"endColumn":24},{"ruleId":"920","severity":1,"message":"980","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":22},{"ruleId":"920","severity":1,"message":"945","line":9,"column":7,"nodeType":"922","messageId":"923","endLine":9,"endColumn":11},{"ruleId":"920","severity":1,"message":"990","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":18},{"ruleId":"920","severity":1,"message":"948","line":2,"column":20,"nodeType":"922","messageId":"923","endLine":2,"endColumn":26},{"ruleId":"920","severity":1,"message":"974","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":13},{"ruleId":"920","severity":1,"message":"938","line":3,"column":15,"nodeType":"922","messageId":"923","endLine":3,"endColumn":18},{"ruleId":"920","severity":1,"message":"991","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":21},{"ruleId":"920","severity":1,"message":"1004","line":14,"column":10,"nodeType":"922","messageId":"923","endLine":14,"endColumn":21},{"ruleId":"920","severity":1,"message":"1005","line":15,"column":10,"nodeType":"922","messageId":"923","endLine":15,"endColumn":20},{"ruleId":"920","severity":1,"message":"1060","line":18,"column":10,"nodeType":"922","messageId":"923","endLine":18,"endColumn":22},{"ruleId":"949","severity":1,"message":"975","line":50,"column":6,"nodeType":"951","endLine":50,"endColumn":8,"suggestions":"1061"},{"ruleId":"949","severity":1,"message":"1062","line":69,"column":6,"nodeType":"951","endLine":69,"endColumn":24,"suggestions":"1063"},{"ruleId":"949","severity":1,"message":"1064","line":73,"column":6,"nodeType":"951","endLine":73,"endColumn":37,"suggestions":"1065"},{"ruleId":"920","severity":1,"message":"1066","line":83,"column":7,"nodeType":"922","messageId":"923","endLine":83,"endColumn":17},{"ruleId":"929","severity":1,"message":"930","line":137,"column":19,"nodeType":"931","messageId":"932","endLine":137,"endColumn":21},{"ruleId":"920","severity":1,"message":"1067","line":1,"column":10,"nodeType":"922","messageId":"923","endLine":1,"endColumn":18},{"ruleId":"920","severity":1,"message":"990","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":18},{"ruleId":"920","severity":1,"message":"948","line":2,"column":20,"nodeType":"922","messageId":"923","endLine":2,"endColumn":26},{"ruleId":"920","severity":1,"message":"974","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":13},{"ruleId":"920","severity":1,"message":"938","line":3,"column":15,"nodeType":"922","messageId":"923","endLine":3,"endColumn":18},{"ruleId":"920","severity":1,"message":"991","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":21},{"ruleId":"949","severity":1,"message":"1068","line":38,"column":6,"nodeType":"951","endLine":38,"endColumn":24,"suggestions":"1069"},{"ruleId":"920","severity":1,"message":"995","line":71,"column":11,"nodeType":"922","messageId":"923","endLine":71,"endColumn":15},{"ruleId":"920","severity":1,"message":"996","line":71,"column":17,"nodeType":"922","messageId":"923","endLine":71,"endColumn":22},{"ruleId":"920","severity":1,"message":"974","line":5,"column":10,"nodeType":"922","messageId":"923","endLine":5,"endColumn":13},{"ruleId":"920","severity":1,"message":"938","line":5,"column":15,"nodeType":"922","messageId":"923","endLine":5,"endColumn":18},{"ruleId":"920","severity":1,"message":"997","line":8,"column":8,"nodeType":"922","messageId":"923","endLine":8,"endColumn":26},{"ruleId":"920","severity":1,"message":"998","line":11,"column":9,"nodeType":"922","messageId":"923","endLine":11,"endColumn":20},{"ruleId":"920","severity":1,"message":"999","line":16,"column":10,"nodeType":"922","messageId":"923","endLine":16,"endColumn":15},{"ruleId":"920","severity":1,"message":"1000","line":17,"column":20,"nodeType":"922","messageId":"923","endLine":17,"endColumn":31},{"ruleId":"949","severity":1,"message":"975","line":31,"column":6,"nodeType":"951","endLine":31,"endColumn":8,"suggestions":"1070"},{"ruleId":"949","severity":1,"message":"1002","line":53,"column":6,"nodeType":"951","endLine":53,"endColumn":24,"suggestions":"1071"},{"ruleId":"920","severity":1,"message":"1009","line":4,"column":10,"nodeType":"922","messageId":"923","endLine":4,"endColumn":24},{"ruleId":"920","severity":1,"message":"943","line":9,"column":10,"nodeType":"922","messageId":"923","endLine":9,"endColumn":22},{"ruleId":"920","severity":1,"message":"1010","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":26},{"ruleId":"920","severity":1,"message":"1011","line":10,"column":28,"nodeType":"922","messageId":"923","endLine":10,"endColumn":39},{"ruleId":"920","severity":1,"message":"1012","line":11,"column":10,"nodeType":"922","messageId":"923","endLine":11,"endColumn":21},{"ruleId":"920","severity":1,"message":"1013","line":12,"column":10,"nodeType":"922","messageId":"923","endLine":12,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1015","line":73,"column":5,"nodeType":"1016","messageId":"1017","endLine":75,"endColumn":13},{"ruleId":"920","severity":1,"message":"1018","line":1,"column":8,"nodeType":"922","messageId":"923","endLine":1,"endColumn":13},{"ruleId":"920","severity":1,"message":"1031","line":4,"column":27,"nodeType":"922","messageId":"923","endLine":4,"endColumn":37},{"ruleId":"920","severity":1,"message":"1011","line":9,"column":10,"nodeType":"922","messageId":"923","endLine":9,"endColumn":21},{"ruleId":"920","severity":1,"message":"1012","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":21},{"ruleId":"920","severity":1,"message":"983","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":24},{"ruleId":"920","severity":1,"message":"984","line":2,"column":42,"nodeType":"922","messageId":"923","endLine":2,"endColumn":48},{"ruleId":"920","severity":1,"message":"924","line":4,"column":8,"nodeType":"922","messageId":"923","endLine":4,"endColumn":14},{"ruleId":"920","severity":1,"message":"1020","line":7,"column":48,"nodeType":"922","messageId":"923","endLine":7,"endColumn":52},{"ruleId":"920","severity":1,"message":"970","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":16},{"ruleId":"920","severity":1,"message":"924","line":4,"column":8,"nodeType":"922","messageId":"923","endLine":4,"endColumn":14},{"ruleId":"920","severity":1,"message":"1019","line":173,"column":9,"nodeType":"922","messageId":"923","endLine":173,"endColumn":21},{"ruleId":"920","severity":1,"message":"1021","line":12,"column":7,"nodeType":"922","messageId":"923","endLine":12,"endColumn":19},{"ruleId":"1022","severity":1,"message":"1023","line":12,"column":38,"nodeType":"1024","messageId":"1025","endLine":12,"endColumn":40},{"ruleId":"920","severity":1,"message":"1026","line":24,"column":10,"nodeType":"922","messageId":"923","endLine":24,"endColumn":21},{"ruleId":"920","severity":1,"message":"1027","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":20},{"ruleId":"920","severity":1,"message":"984","line":4,"column":26,"nodeType":"922","messageId":"923","endLine":4,"endColumn":32},{"ruleId":"920","severity":1,"message":"1028","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":24},{"ruleId":"920","severity":1,"message":"1029","line":1,"column":10,"nodeType":"922","messageId":"923","endLine":1,"endColumn":21},{"ruleId":"920","severity":1,"message":"1037","line":2,"column":8,"nodeType":"922","messageId":"923","endLine":2,"endColumn":18},{"ruleId":"920","severity":1,"message":"934","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":14},{"ruleId":"920","severity":1,"message":"1038","line":6,"column":16,"nodeType":"922","messageId":"923","endLine":6,"endColumn":21},{"ruleId":"920","severity":1,"message":"1039","line":8,"column":8,"nodeType":"922","messageId":"923","endLine":8,"endColumn":17},{"ruleId":"920","severity":1,"message":"1012","line":12,"column":10,"nodeType":"922","messageId":"923","endLine":12,"endColumn":21},{"ruleId":"929","severity":1,"message":"930","line":77,"column":49,"nodeType":"931","messageId":"932","endLine":77,"endColumn":51},{"ruleId":"929","severity":1,"message":"930","line":122,"column":45,"nodeType":"931","messageId":"932","endLine":122,"endColumn":47},{"ruleId":"920","severity":1,"message":"1040","line":123,"column":17,"nodeType":"922","messageId":"923","endLine":123,"endColumn":25},{"ruleId":"929","severity":1,"message":"930","line":130,"column":37,"nodeType":"931","messageId":"932","endLine":130,"endColumn":39},{"ruleId":"1041","severity":1,"message":"1042","line":162,"column":11,"nodeType":"1043","messageId":"1044","endLine":162,"endColumn":51},{"ruleId":"920","severity":1,"message":"1029","line":1,"column":10,"nodeType":"922","messageId":"923","endLine":1,"endColumn":21},{"ruleId":"987","severity":1,"message":"1030","line":41,"column":7,"nodeType":"989","messageId":"932","endLine":41,"endColumn":20},{"ruleId":"987","severity":1,"message":"1036","line":114,"column":7,"nodeType":"989","messageId":"932","endLine":114,"endColumn":12},{"ruleId":"987","severity":1,"message":"1036","line":115,"column":7,"nodeType":"989","messageId":"932","endLine":115,"endColumn":12},{"ruleId":"920","severity":1,"message":"1037","line":2,"column":8,"nodeType":"922","messageId":"923","endLine":2,"endColumn":18},{"ruleId":"929","severity":1,"message":"930","line":102,"column":20,"nodeType":"931","messageId":"932","endLine":102,"endColumn":22},{"ruleId":"929","severity":1,"message":"930","line":108,"column":14,"nodeType":"931","messageId":"932","endLine":108,"endColumn":16},{"ruleId":"929","severity":1,"message":"930","line":110,"column":14,"nodeType":"931","messageId":"932","endLine":110,"endColumn":16},{"ruleId":"929","severity":1,"message":"930","line":137,"column":32,"nodeType":"931","messageId":"932","endLine":137,"endColumn":34},{"ruleId":"920","severity":1,"message":"1045","line":164,"column":7,"nodeType":"922","messageId":"923","endLine":164,"endColumn":12},{"ruleId":"920","severity":1,"message":"1046","line":167,"column":7,"nodeType":"922","messageId":"923","endLine":167,"endColumn":26},{"ruleId":"920","severity":1,"message":"1047","line":168,"column":7,"nodeType":"922","messageId":"923","endLine":168,"endColumn":22},{"ruleId":"920","severity":1,"message":"1048","line":169,"column":7,"nodeType":"922","messageId":"923","endLine":169,"endColumn":15},{"ruleId":"920","severity":1,"message":"1049","line":170,"column":7,"nodeType":"922","messageId":"923","endLine":170,"endColumn":19},{"ruleId":"920","severity":1,"message":"1050","line":173,"column":7,"nodeType":"922","messageId":"923","endLine":173,"endColumn":23},{"ruleId":"920","severity":1,"message":"1051","line":174,"column":7,"nodeType":"922","messageId":"923","endLine":174,"endColumn":16},"no-native-reassign",["1072"],"no-negated-in-lhs",["1073"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'domain' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Unexpected default export of anonymous function","'Link' is defined but never used.","'_' is defined but never used.","'getServerEndpoint' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'Button' is defined but never used.","'FormGroup' is defined but never used.","'setDynamicWords' is defined but never used.","'themeService' is defined but never used.","'milliseconds' is assigned a value but never used.","'User' is defined but never used.","'connect' is defined but never used.","'useRef' is defined but never used.","'button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getGroups' and 'getUsersAction'. Either include them or remove the dependency array.","ArrayExpression",["1074"],"'UpdatePassword' is defined but never used.","'passText' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setNewPassword' is assigned a value but never used.","'handleDisplay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getGroups'. Either include it or remove the dependency array.",["1075"],"React Hook useEffect has missing dependencies: 'getUserAction' and 'id'. Either include them or remove the dependency array.",["1076"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'Groups'. Either include it or remove the dependency array.",["1077"],"'Component' is defined but never used.","'permissionCheck' is defined but never used.","'isJSON' is defined but never used.","'loggedInUser' is defined but never used.","'curdActions' is defined but never used.","'UserList' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1078"],"React Hook useEffect has missing dependencies: 'handleDeleteUser' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1079"],"Expected '!==' and instead saw '!='.","'CRUDFunction' is defined but never used.","'InputFieldCustom' is defined but never used.","'Tooltip' is defined but never used.","'zonedTimeToUtc' is defined but never used.","'format' is defined but never used.","'timezoneListAlias' is defined but never used.","'filtersMethod' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'MyButton' is defined but never used.","'downloadCsv' is defined but never used.","'status' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.statusExports'. Either include it or remove the dependency array. If 'setStatusExports' needs the current value of 'props.statusExports', you can also switch to useReducer instead of useState and read 'props.statusExports' in the reducer.",["1080"],"'name' is assigned a value but never used.","'value' is assigned a value but never used.","'TeamMemberSelector' is defined but never used.","'currentUser' is assigned a value but never used.","'users' is assigned a value but never used.","'setProjects' is assigned a value but never used.",["1081"],"React Hook useEffect has missing dependencies: 'confirmEditTeam', 'handleDeleteTeam', 'props.team', 'props.teams', and 'teams'. Either include them or remove the dependency array. If 'setTeams' needs the current value of 'props.teams', you can also switch to useReducer instead of useState and read 'props.teams' in the reducer.",["1082"],"'SelectField' is defined but never used.","'isLoggedOn' is defined but never used.",["1083"],"React Hook useEffect has missing dependencies: 'loadWorkBook' and 'props.SessionExports'. Either include them or remove the dependency array.",["1084"],"'ToastContainer' is defined but never used.","'CommonModalStyle' is defined but never used.","'ButtonStyle' is defined but never used.","'retroColors' is defined but never used.","'pmsThemeColors' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'React' is defined but never used.","'userTimezone' is assigned a value but never used.","'days' is assigned a value but never used.","'filteredData' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'dateInRange' is defined but never used.","'useHistory' is defined but never used.","'updateTimezone' is defined but never used.","'basicColors' is defined but never used.","Duplicate key 'textTransform'.","'AvFeedback' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","Duplicate key 'width'.","'classnames' is defined but never used.","'Route' is defined but never used.","'PropTypes' is defined but never used.","'selected' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'pages' is assigned a value but never used.","'showPageSizeOptions' is assigned a value but never used.","'pageSizeOptions' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'showPageJump' is assigned a value but never used.","'onPageSizeChange' is assigned a value but never used.","'className' is assigned a value but never used.",["1085"],["1086"],["1087"],["1088"],["1089"],["1090"],"'mapStateToProps' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'NumberFormat' is defined but never used.",["1091"],"React Hook useEffect has a missing dependency: 'props.SessionExports'. Either include it or remove the dependency array. If 'setTableData' needs the current value of 'props.SessionExports', you can also switch to useReducer instead of useState and read 'props.SessionExports' in the reducer.",["1092"],"React Hook useEffect has a missing dependency: 'fetchFromServer'. Either include it or remove the dependency array.",["1093"],"'exportDate' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'props.statusExports' and 'setStatusExports'. Either include them or remove the dependency array.",["1094"],["1095"],["1096"],"no-global-assign","no-unsafe-negation",{"desc":"1097","fix":"1098"},{"desc":"1099","fix":"1100"},{"desc":"1101","fix":"1102"},{"desc":"1103","fix":"1104"},{"desc":"1105","fix":"1106"},{"desc":"1107","fix":"1108"},{"desc":"1109","fix":"1110"},{"desc":"1105","fix":"1111"},{"desc":"1112","fix":"1113"},{"desc":"1105","fix":"1114"},{"desc":"1115","fix":"1116"},{"desc":"1105","fix":"1117"},{"desc":"1107","fix":"1118"},{"desc":"1099","fix":"1119"},{"desc":"1101","fix":"1120"},{"desc":"1103","fix":"1121"},{"desc":"1097","fix":"1122"},{"desc":"1105","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1128","fix":"1129"},{"desc":"1105","fix":"1130"},{"desc":"1112","fix":"1131"},"Update the dependencies array to be: [getGroups, getUsersAction]",{"range":"1132","text":"1133"},"Update the dependencies array to be: [getGroups]",{"range":"1134","text":"1135"},"Update the dependencies array to be: [getUserAction, id]",{"range":"1136","text":"1137"},"Update the dependencies array to be: [Groups, user]",{"range":"1138","text":"1139"},"Update the dependencies array to be: [props]",{"range":"1140","text":"1141"},"Update the dependencies array to be: [handleDeleteUser, props, props.actionType]",{"range":"1142","text":"1143"},"Update the dependencies array to be: [props.actionType, props.statusExports]",{"range":"1144","text":"1145"},{"range":"1146","text":"1141"},"Update the dependencies array to be: [confirmEditTeam, handleDeleteTeam, props.actionType, props.team, props.teams, teams]",{"range":"1147","text":"1148"},{"range":"1149","text":"1141"},"Update the dependencies array to be: [loadWorkBook, props.SessionExports, props.actionType]",{"range":"1150","text":"1151"},{"range":"1152","text":"1141"},{"range":"1153","text":"1143"},{"range":"1154","text":"1135"},{"range":"1155","text":"1137"},{"range":"1156","text":"1139"},{"range":"1157","text":"1133"},{"range":"1158","text":"1141"},"Update the dependencies array to be: [props.SessionExports, props.actionType]",{"range":"1159","text":"1160"},"Update the dependencies array to be: [range, filterBy, selectedUser, fetchFromServer]",{"range":"1161","text":"1162"},"Update the dependencies array to be: [props.actionType, props.statusExports, setStatusExports]",{"range":"1163","text":"1164"},{"range":"1165","text":"1141"},{"range":"1166","text":"1148"},[640,642],"[getGroups, getUsersAction]",[1356,1358],"[getGroups]",[1414,1416],"[getUserAction, id]",[1927,1933],"[Groups, user]",[1345,1347],"[props]",[2082,2100],"[handleDeleteUser, props, props.actionType]",[1404,1422],"[props.actionType, props.statusExports]",[1142,1144],[1963,1981],"[confirmEditTeam, handleDeleteTeam, props.actionType, props.team, props.teams, teams]",[1765,1767],[2351,2369],"[loadWorkBook, props.SessionExports, props.actionType]",[1344,1346],[2081,2099],[1348,1350],[1406,1408],[1919,1925],[631,633],[2023,2025],[2611,2629],"[props.SessionExports, props.actionType]",[2714,2745],"[range, filterBy, selectedUser, fetchFromServer]",[1393,1411],"[props.actionType, props.statusExports, setStatusExports]",[1133,1135],[1954,1972]]